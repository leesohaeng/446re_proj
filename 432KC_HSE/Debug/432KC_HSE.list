
432KC_HSE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000629c  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004b0  08006430  08006430  00016430  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  080068e0  080068e0  000168e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  080068e8  080068e8  000168e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  080068ec  080068ec  000168ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         00000674  20000000  080068f0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          000000e0  20000674  08006f64  00020674  2**2
                  ALLOC
  8 ._user_heap_stack 00000600  20000754  08006f64  00020754  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  00020674  2**0
                  CONTENTS, READONLY
 10 .debug_info   0000e635  00000000  00000000  000206a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00001dd7  00000000  00000000  0002ecd9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000372e  00000000  00000000  00030ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_aranges 000006b0  00000000  00000000  000341e0  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000790  00000000  00000000  00034890  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_line   00003c70  00000000  00000000  00035020  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00002ec5  00000000  00000000  00038c90  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .comment      0000007c  00000000  00000000  0003bb55  2**0
                  CONTENTS, READONLY
 18 .debug_frame  00001cb4  00000000  00000000  0003bbd4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000674 	.word	0x20000674
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08006414 	.word	0x08006414

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000678 	.word	0x20000678
 80001cc:	08006414 	.word	0x08006414

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003be:	f1a4 0401 	sub.w	r4, r4, #1
 80003c2:	d1e9      	bne.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f092 0f00 	teq	r2, #0
 800056a:	bf14      	ite	ne
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	4770      	bxeq	lr
 8000572:	b530      	push	{r4, r5, lr}
 8000574:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000578:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800057c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000580:	e720      	b.n	80003c4 <__adddf3+0x138>
 8000582:	bf00      	nop

08000584 <__aeabi_ul2d>:
 8000584:	ea50 0201 	orrs.w	r2, r0, r1
 8000588:	bf08      	it	eq
 800058a:	4770      	bxeq	lr
 800058c:	b530      	push	{r4, r5, lr}
 800058e:	f04f 0500 	mov.w	r5, #0
 8000592:	e00a      	b.n	80005aa <__aeabi_l2d+0x16>

08000594 <__aeabi_l2d>:
 8000594:	ea50 0201 	orrs.w	r2, r0, r1
 8000598:	bf08      	it	eq
 800059a:	4770      	bxeq	lr
 800059c:	b530      	push	{r4, r5, lr}
 800059e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005a2:	d502      	bpl.n	80005aa <__aeabi_l2d+0x16>
 80005a4:	4240      	negs	r0, r0
 80005a6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005aa:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005ae:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005b2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005b6:	f43f aedc 	beq.w	8000372 <__adddf3+0xe6>
 80005ba:	f04f 0203 	mov.w	r2, #3
 80005be:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005c2:	bf18      	it	ne
 80005c4:	3203      	addne	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005d2:	f1c2 0320 	rsb	r3, r2, #32
 80005d6:	fa00 fc03 	lsl.w	ip, r0, r3
 80005da:	fa20 f002 	lsr.w	r0, r0, r2
 80005de:	fa01 fe03 	lsl.w	lr, r1, r3
 80005e2:	ea40 000e 	orr.w	r0, r0, lr
 80005e6:	fa21 f102 	lsr.w	r1, r1, r2
 80005ea:	4414      	add	r4, r2
 80005ec:	e6c1      	b.n	8000372 <__adddf3+0xe6>
 80005ee:	bf00      	nop

080005f0 <__aeabi_dmul>:
 80005f0:	b570      	push	{r4, r5, r6, lr}
 80005f2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005f6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005fa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005fe:	bf1d      	ittte	ne
 8000600:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000604:	ea94 0f0c 	teqne	r4, ip
 8000608:	ea95 0f0c 	teqne	r5, ip
 800060c:	f000 f8de 	bleq	80007cc <__aeabi_dmul+0x1dc>
 8000610:	442c      	add	r4, r5
 8000612:	ea81 0603 	eor.w	r6, r1, r3
 8000616:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800061a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800061e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000622:	bf18      	it	ne
 8000624:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000628:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800062c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000630:	d038      	beq.n	80006a4 <__aeabi_dmul+0xb4>
 8000632:	fba0 ce02 	umull	ip, lr, r0, r2
 8000636:	f04f 0500 	mov.w	r5, #0
 800063a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800063e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000642:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000646:	f04f 0600 	mov.w	r6, #0
 800064a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800064e:	f09c 0f00 	teq	ip, #0
 8000652:	bf18      	it	ne
 8000654:	f04e 0e01 	orrne.w	lr, lr, #1
 8000658:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800065c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000660:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000664:	d204      	bcs.n	8000670 <__aeabi_dmul+0x80>
 8000666:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800066a:	416d      	adcs	r5, r5
 800066c:	eb46 0606 	adc.w	r6, r6, r6
 8000670:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000674:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000678:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800067c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000680:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000684:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000688:	bf88      	it	hi
 800068a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800068e:	d81e      	bhi.n	80006ce <__aeabi_dmul+0xde>
 8000690:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000694:	bf08      	it	eq
 8000696:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800069a:	f150 0000 	adcs.w	r0, r0, #0
 800069e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006a2:	bd70      	pop	{r4, r5, r6, pc}
 80006a4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006a8:	ea46 0101 	orr.w	r1, r6, r1
 80006ac:	ea40 0002 	orr.w	r0, r0, r2
 80006b0:	ea81 0103 	eor.w	r1, r1, r3
 80006b4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006b8:	bfc2      	ittt	gt
 80006ba:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006be:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006c2:	bd70      	popgt	{r4, r5, r6, pc}
 80006c4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006c8:	f04f 0e00 	mov.w	lr, #0
 80006cc:	3c01      	subs	r4, #1
 80006ce:	f300 80ab 	bgt.w	8000828 <__aeabi_dmul+0x238>
 80006d2:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006d6:	bfde      	ittt	le
 80006d8:	2000      	movle	r0, #0
 80006da:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006de:	bd70      	pople	{r4, r5, r6, pc}
 80006e0:	f1c4 0400 	rsb	r4, r4, #0
 80006e4:	3c20      	subs	r4, #32
 80006e6:	da35      	bge.n	8000754 <__aeabi_dmul+0x164>
 80006e8:	340c      	adds	r4, #12
 80006ea:	dc1b      	bgt.n	8000724 <__aeabi_dmul+0x134>
 80006ec:	f104 0414 	add.w	r4, r4, #20
 80006f0:	f1c4 0520 	rsb	r5, r4, #32
 80006f4:	fa00 f305 	lsl.w	r3, r0, r5
 80006f8:	fa20 f004 	lsr.w	r0, r0, r4
 80006fc:	fa01 f205 	lsl.w	r2, r1, r5
 8000700:	ea40 0002 	orr.w	r0, r0, r2
 8000704:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000708:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800070c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000710:	fa21 f604 	lsr.w	r6, r1, r4
 8000714:	eb42 0106 	adc.w	r1, r2, r6
 8000718:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800071c:	bf08      	it	eq
 800071e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000722:	bd70      	pop	{r4, r5, r6, pc}
 8000724:	f1c4 040c 	rsb	r4, r4, #12
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f304 	lsl.w	r3, r0, r4
 8000730:	fa20 f005 	lsr.w	r0, r0, r5
 8000734:	fa01 f204 	lsl.w	r2, r1, r4
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000740:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000744:	f141 0100 	adc.w	r1, r1, #0
 8000748:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800074c:	bf08      	it	eq
 800074e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000752:	bd70      	pop	{r4, r5, r6, pc}
 8000754:	f1c4 0520 	rsb	r5, r4, #32
 8000758:	fa00 f205 	lsl.w	r2, r0, r5
 800075c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000760:	fa20 f304 	lsr.w	r3, r0, r4
 8000764:	fa01 f205 	lsl.w	r2, r1, r5
 8000768:	ea43 0302 	orr.w	r3, r3, r2
 800076c:	fa21 f004 	lsr.w	r0, r1, r4
 8000770:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000774:	fa21 f204 	lsr.w	r2, r1, r4
 8000778:	ea20 0002 	bic.w	r0, r0, r2
 800077c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f094 0f00 	teq	r4, #0
 8000790:	d10f      	bne.n	80007b2 <__aeabi_dmul+0x1c2>
 8000792:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000796:	0040      	lsls	r0, r0, #1
 8000798:	eb41 0101 	adc.w	r1, r1, r1
 800079c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a0:	bf08      	it	eq
 80007a2:	3c01      	subeq	r4, #1
 80007a4:	d0f7      	beq.n	8000796 <__aeabi_dmul+0x1a6>
 80007a6:	ea41 0106 	orr.w	r1, r1, r6
 80007aa:	f095 0f00 	teq	r5, #0
 80007ae:	bf18      	it	ne
 80007b0:	4770      	bxne	lr
 80007b2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007b6:	0052      	lsls	r2, r2, #1
 80007b8:	eb43 0303 	adc.w	r3, r3, r3
 80007bc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c0:	bf08      	it	eq
 80007c2:	3d01      	subeq	r5, #1
 80007c4:	d0f7      	beq.n	80007b6 <__aeabi_dmul+0x1c6>
 80007c6:	ea43 0306 	orr.w	r3, r3, r6
 80007ca:	4770      	bx	lr
 80007cc:	ea94 0f0c 	teq	r4, ip
 80007d0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007d4:	bf18      	it	ne
 80007d6:	ea95 0f0c 	teqne	r5, ip
 80007da:	d00c      	beq.n	80007f6 <__aeabi_dmul+0x206>
 80007dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e0:	bf18      	it	ne
 80007e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007e6:	d1d1      	bne.n	800078c <__aeabi_dmul+0x19c>
 80007e8:	ea81 0103 	eor.w	r1, r1, r3
 80007ec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f0:	f04f 0000 	mov.w	r0, #0
 80007f4:	bd70      	pop	{r4, r5, r6, pc}
 80007f6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007fa:	bf06      	itte	eq
 80007fc:	4610      	moveq	r0, r2
 80007fe:	4619      	moveq	r1, r3
 8000800:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000804:	d019      	beq.n	800083a <__aeabi_dmul+0x24a>
 8000806:	ea94 0f0c 	teq	r4, ip
 800080a:	d102      	bne.n	8000812 <__aeabi_dmul+0x222>
 800080c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000810:	d113      	bne.n	800083a <__aeabi_dmul+0x24a>
 8000812:	ea95 0f0c 	teq	r5, ip
 8000816:	d105      	bne.n	8000824 <__aeabi_dmul+0x234>
 8000818:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800081c:	bf1c      	itt	ne
 800081e:	4610      	movne	r0, r2
 8000820:	4619      	movne	r1, r3
 8000822:	d10a      	bne.n	800083a <__aeabi_dmul+0x24a>
 8000824:	ea81 0103 	eor.w	r1, r1, r3
 8000828:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800082c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000830:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000834:	f04f 0000 	mov.w	r0, #0
 8000838:	bd70      	pop	{r4, r5, r6, pc}
 800083a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800083e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000842:	bd70      	pop	{r4, r5, r6, pc}

08000844 <__aeabi_ddiv>:
 8000844:	b570      	push	{r4, r5, r6, lr}
 8000846:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800084a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800084e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000852:	bf1d      	ittte	ne
 8000854:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000858:	ea94 0f0c 	teqne	r4, ip
 800085c:	ea95 0f0c 	teqne	r5, ip
 8000860:	f000 f8a7 	bleq	80009b2 <__aeabi_ddiv+0x16e>
 8000864:	eba4 0405 	sub.w	r4, r4, r5
 8000868:	ea81 0e03 	eor.w	lr, r1, r3
 800086c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000870:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000874:	f000 8088 	beq.w	8000988 <__aeabi_ddiv+0x144>
 8000878:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800087c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000880:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000884:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000888:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800088c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000890:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000894:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000898:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800089c:	429d      	cmp	r5, r3
 800089e:	bf08      	it	eq
 80008a0:	4296      	cmpeq	r6, r2
 80008a2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008a6:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008aa:	d202      	bcs.n	80008b2 <__aeabi_ddiv+0x6e>
 80008ac:	085b      	lsrs	r3, r3, #1
 80008ae:	ea4f 0232 	mov.w	r2, r2, rrx
 80008b2:	1ab6      	subs	r6, r6, r2
 80008b4:	eb65 0503 	sbc.w	r5, r5, r3
 80008b8:	085b      	lsrs	r3, r3, #1
 80008ba:	ea4f 0232 	mov.w	r2, r2, rrx
 80008be:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008c2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ce:	bf22      	ittt	cs
 80008d0:	1ab6      	subcs	r6, r6, r2
 80008d2:	4675      	movcs	r5, lr
 80008d4:	ea40 000c 	orrcs.w	r0, r0, ip
 80008d8:	085b      	lsrs	r3, r3, #1
 80008da:	ea4f 0232 	mov.w	r2, r2, rrx
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000920:	ea55 0e06 	orrs.w	lr, r5, r6
 8000924:	d018      	beq.n	8000958 <__aeabi_ddiv+0x114>
 8000926:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800092a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800092e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000932:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000936:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800093a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800093e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000942:	d1c0      	bne.n	80008c6 <__aeabi_ddiv+0x82>
 8000944:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000948:	d10b      	bne.n	8000962 <__aeabi_ddiv+0x11e>
 800094a:	ea41 0100 	orr.w	r1, r1, r0
 800094e:	f04f 0000 	mov.w	r0, #0
 8000952:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000956:	e7b6      	b.n	80008c6 <__aeabi_ddiv+0x82>
 8000958:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800095c:	bf04      	itt	eq
 800095e:	4301      	orreq	r1, r0
 8000960:	2000      	moveq	r0, #0
 8000962:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000966:	bf88      	it	hi
 8000968:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800096c:	f63f aeaf 	bhi.w	80006ce <__aeabi_dmul+0xde>
 8000970:	ebb5 0c03 	subs.w	ip, r5, r3
 8000974:	bf04      	itt	eq
 8000976:	ebb6 0c02 	subseq.w	ip, r6, r2
 800097a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800097e:	f150 0000 	adcs.w	r0, r0, #0
 8000982:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000986:	bd70      	pop	{r4, r5, r6, pc}
 8000988:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800098c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000990:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000994:	bfc2      	ittt	gt
 8000996:	ebd4 050c 	rsbsgt	r5, r4, ip
 800099a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800099e:	bd70      	popgt	{r4, r5, r6, pc}
 80009a0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009a4:	f04f 0e00 	mov.w	lr, #0
 80009a8:	3c01      	subs	r4, #1
 80009aa:	e690      	b.n	80006ce <__aeabi_dmul+0xde>
 80009ac:	ea45 0e06 	orr.w	lr, r5, r6
 80009b0:	e68d      	b.n	80006ce <__aeabi_dmul+0xde>
 80009b2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009b6:	ea94 0f0c 	teq	r4, ip
 80009ba:	bf08      	it	eq
 80009bc:	ea95 0f0c 	teqeq	r5, ip
 80009c0:	f43f af3b 	beq.w	800083a <__aeabi_dmul+0x24a>
 80009c4:	ea94 0f0c 	teq	r4, ip
 80009c8:	d10a      	bne.n	80009e0 <__aeabi_ddiv+0x19c>
 80009ca:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009ce:	f47f af34 	bne.w	800083a <__aeabi_dmul+0x24a>
 80009d2:	ea95 0f0c 	teq	r5, ip
 80009d6:	f47f af25 	bne.w	8000824 <__aeabi_dmul+0x234>
 80009da:	4610      	mov	r0, r2
 80009dc:	4619      	mov	r1, r3
 80009de:	e72c      	b.n	800083a <__aeabi_dmul+0x24a>
 80009e0:	ea95 0f0c 	teq	r5, ip
 80009e4:	d106      	bne.n	80009f4 <__aeabi_ddiv+0x1b0>
 80009e6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009ea:	f43f aefd 	beq.w	80007e8 <__aeabi_dmul+0x1f8>
 80009ee:	4610      	mov	r0, r2
 80009f0:	4619      	mov	r1, r3
 80009f2:	e722      	b.n	800083a <__aeabi_dmul+0x24a>
 80009f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009f8:	bf18      	it	ne
 80009fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009fe:	f47f aec5 	bne.w	800078c <__aeabi_dmul+0x19c>
 8000a02:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a06:	f47f af0d 	bne.w	8000824 <__aeabi_dmul+0x234>
 8000a0a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a0e:	f47f aeeb 	bne.w	80007e8 <__aeabi_dmul+0x1f8>
 8000a12:	e712      	b.n	800083a <__aeabi_dmul+0x24a>

08000a14 <__gedf2>:
 8000a14:	f04f 3cff 	mov.w	ip, #4294967295
 8000a18:	e006      	b.n	8000a28 <__cmpdf2+0x4>
 8000a1a:	bf00      	nop

08000a1c <__ledf2>:
 8000a1c:	f04f 0c01 	mov.w	ip, #1
 8000a20:	e002      	b.n	8000a28 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__cmpdf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a34:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a38:	bf18      	it	ne
 8000a3a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a3e:	d01b      	beq.n	8000a78 <__cmpdf2+0x54>
 8000a40:	b001      	add	sp, #4
 8000a42:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a46:	bf0c      	ite	eq
 8000a48:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a4c:	ea91 0f03 	teqne	r1, r3
 8000a50:	bf02      	ittt	eq
 8000a52:	ea90 0f02 	teqeq	r0, r2
 8000a56:	2000      	moveq	r0, #0
 8000a58:	4770      	bxeq	lr
 8000a5a:	f110 0f00 	cmn.w	r0, #0
 8000a5e:	ea91 0f03 	teq	r1, r3
 8000a62:	bf58      	it	pl
 8000a64:	4299      	cmppl	r1, r3
 8000a66:	bf08      	it	eq
 8000a68:	4290      	cmpeq	r0, r2
 8000a6a:	bf2c      	ite	cs
 8000a6c:	17d8      	asrcs	r0, r3, #31
 8000a6e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a72:	f040 0001 	orr.w	r0, r0, #1
 8000a76:	4770      	bx	lr
 8000a78:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a7c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a80:	d102      	bne.n	8000a88 <__cmpdf2+0x64>
 8000a82:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a86:	d107      	bne.n	8000a98 <__cmpdf2+0x74>
 8000a88:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a90:	d1d6      	bne.n	8000a40 <__cmpdf2+0x1c>
 8000a92:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a96:	d0d3      	beq.n	8000a40 <__cmpdf2+0x1c>
 8000a98:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a9c:	4770      	bx	lr
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_cdrcmple>:
 8000aa0:	4684      	mov	ip, r0
 8000aa2:	4610      	mov	r0, r2
 8000aa4:	4662      	mov	r2, ip
 8000aa6:	468c      	mov	ip, r1
 8000aa8:	4619      	mov	r1, r3
 8000aaa:	4663      	mov	r3, ip
 8000aac:	e000      	b.n	8000ab0 <__aeabi_cdcmpeq>
 8000aae:	bf00      	nop

08000ab0 <__aeabi_cdcmpeq>:
 8000ab0:	b501      	push	{r0, lr}
 8000ab2:	f7ff ffb7 	bl	8000a24 <__cmpdf2>
 8000ab6:	2800      	cmp	r0, #0
 8000ab8:	bf48      	it	mi
 8000aba:	f110 0f00 	cmnmi.w	r0, #0
 8000abe:	bd01      	pop	{r0, pc}

08000ac0 <__aeabi_dcmpeq>:
 8000ac0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ac4:	f7ff fff4 	bl	8000ab0 <__aeabi_cdcmpeq>
 8000ac8:	bf0c      	ite	eq
 8000aca:	2001      	moveq	r0, #1
 8000acc:	2000      	movne	r0, #0
 8000ace:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ad2:	bf00      	nop

08000ad4 <__aeabi_dcmplt>:
 8000ad4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ad8:	f7ff ffea 	bl	8000ab0 <__aeabi_cdcmpeq>
 8000adc:	bf34      	ite	cc
 8000ade:	2001      	movcc	r0, #1
 8000ae0:	2000      	movcs	r0, #0
 8000ae2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_dcmple>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff ffe0 	bl	8000ab0 <__aeabi_cdcmpeq>
 8000af0:	bf94      	ite	ls
 8000af2:	2001      	movls	r0, #1
 8000af4:	2000      	movhi	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmpge>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffce 	bl	8000aa0 <__aeabi_cdrcmple>
 8000b04:	bf94      	ite	ls
 8000b06:	2001      	movls	r0, #1
 8000b08:	2000      	movhi	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmpgt>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffc4 	bl	8000aa0 <__aeabi_cdrcmple>
 8000b18:	bf34      	ite	cc
 8000b1a:	2001      	movcc	r0, #1
 8000b1c:	2000      	movcs	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpun>:
 8000b24:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b28:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b2c:	d102      	bne.n	8000b34 <__aeabi_dcmpun+0x10>
 8000b2e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b32:	d10a      	bne.n	8000b4a <__aeabi_dcmpun+0x26>
 8000b34:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b3c:	d102      	bne.n	8000b44 <__aeabi_dcmpun+0x20>
 8000b3e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b42:	d102      	bne.n	8000b4a <__aeabi_dcmpun+0x26>
 8000b44:	f04f 0000 	mov.w	r0, #0
 8000b48:	4770      	bx	lr
 8000b4a:	f04f 0001 	mov.w	r0, #1
 8000b4e:	4770      	bx	lr

08000b50 <__aeabi_d2iz>:
 8000b50:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b54:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b58:	d215      	bcs.n	8000b86 <__aeabi_d2iz+0x36>
 8000b5a:	d511      	bpl.n	8000b80 <__aeabi_d2iz+0x30>
 8000b5c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b60:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b64:	d912      	bls.n	8000b8c <__aeabi_d2iz+0x3c>
 8000b66:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b6a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b6e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b72:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b76:	fa23 f002 	lsr.w	r0, r3, r2
 8000b7a:	bf18      	it	ne
 8000b7c:	4240      	negne	r0, r0
 8000b7e:	4770      	bx	lr
 8000b80:	f04f 0000 	mov.w	r0, #0
 8000b84:	4770      	bx	lr
 8000b86:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b8a:	d105      	bne.n	8000b98 <__aeabi_d2iz+0x48>
 8000b8c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b90:	bf08      	it	eq
 8000b92:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	bf00      	nop

08000ba0 <__aeabi_uldivmod>:
 8000ba0:	b953      	cbnz	r3, 8000bb8 <__aeabi_uldivmod+0x18>
 8000ba2:	b94a      	cbnz	r2, 8000bb8 <__aeabi_uldivmod+0x18>
 8000ba4:	2900      	cmp	r1, #0
 8000ba6:	bf08      	it	eq
 8000ba8:	2800      	cmpeq	r0, #0
 8000baa:	bf1c      	itt	ne
 8000bac:	f04f 31ff 	movne.w	r1, #4294967295
 8000bb0:	f04f 30ff 	movne.w	r0, #4294967295
 8000bb4:	f000 b97a 	b.w	8000eac <__aeabi_idiv0>
 8000bb8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bbc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bc0:	f000 f806 	bl	8000bd0 <__udivmoddi4>
 8000bc4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bc8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bcc:	b004      	add	sp, #16
 8000bce:	4770      	bx	lr

08000bd0 <__udivmoddi4>:
 8000bd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bd4:	468c      	mov	ip, r1
 8000bd6:	460d      	mov	r5, r1
 8000bd8:	4604      	mov	r4, r0
 8000bda:	9e08      	ldr	r6, [sp, #32]
 8000bdc:	2b00      	cmp	r3, #0
 8000bde:	d151      	bne.n	8000c84 <__udivmoddi4+0xb4>
 8000be0:	428a      	cmp	r2, r1
 8000be2:	4617      	mov	r7, r2
 8000be4:	d96d      	bls.n	8000cc2 <__udivmoddi4+0xf2>
 8000be6:	fab2 fe82 	clz	lr, r2
 8000bea:	f1be 0f00 	cmp.w	lr, #0
 8000bee:	d00b      	beq.n	8000c08 <__udivmoddi4+0x38>
 8000bf0:	f1ce 0c20 	rsb	ip, lr, #32
 8000bf4:	fa01 f50e 	lsl.w	r5, r1, lr
 8000bf8:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000bfc:	fa02 f70e 	lsl.w	r7, r2, lr
 8000c00:	ea4c 0c05 	orr.w	ip, ip, r5
 8000c04:	fa00 f40e 	lsl.w	r4, r0, lr
 8000c08:	ea4f 4a17 	mov.w	sl, r7, lsr #16
 8000c0c:	0c25      	lsrs	r5, r4, #16
 8000c0e:	fbbc f8fa 	udiv	r8, ip, sl
 8000c12:	fa1f f987 	uxth.w	r9, r7
 8000c16:	fb0a cc18 	mls	ip, sl, r8, ip
 8000c1a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
 8000c1e:	fb08 f309 	mul.w	r3, r8, r9
 8000c22:	42ab      	cmp	r3, r5
 8000c24:	d90a      	bls.n	8000c3c <__udivmoddi4+0x6c>
 8000c26:	19ed      	adds	r5, r5, r7
 8000c28:	f108 32ff 	add.w	r2, r8, #4294967295
 8000c2c:	f080 8123 	bcs.w	8000e76 <__udivmoddi4+0x2a6>
 8000c30:	42ab      	cmp	r3, r5
 8000c32:	f240 8120 	bls.w	8000e76 <__udivmoddi4+0x2a6>
 8000c36:	f1a8 0802 	sub.w	r8, r8, #2
 8000c3a:	443d      	add	r5, r7
 8000c3c:	1aed      	subs	r5, r5, r3
 8000c3e:	b2a4      	uxth	r4, r4
 8000c40:	fbb5 f0fa 	udiv	r0, r5, sl
 8000c44:	fb0a 5510 	mls	r5, sl, r0, r5
 8000c48:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000c4c:	fb00 f909 	mul.w	r9, r0, r9
 8000c50:	45a1      	cmp	r9, r4
 8000c52:	d909      	bls.n	8000c68 <__udivmoddi4+0x98>
 8000c54:	19e4      	adds	r4, r4, r7
 8000c56:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c5a:	f080 810a 	bcs.w	8000e72 <__udivmoddi4+0x2a2>
 8000c5e:	45a1      	cmp	r9, r4
 8000c60:	f240 8107 	bls.w	8000e72 <__udivmoddi4+0x2a2>
 8000c64:	3802      	subs	r0, #2
 8000c66:	443c      	add	r4, r7
 8000c68:	eba4 0409 	sub.w	r4, r4, r9
 8000c6c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000c70:	2100      	movs	r1, #0
 8000c72:	2e00      	cmp	r6, #0
 8000c74:	d061      	beq.n	8000d3a <__udivmoddi4+0x16a>
 8000c76:	fa24 f40e 	lsr.w	r4, r4, lr
 8000c7a:	2300      	movs	r3, #0
 8000c7c:	6034      	str	r4, [r6, #0]
 8000c7e:	6073      	str	r3, [r6, #4]
 8000c80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c84:	428b      	cmp	r3, r1
 8000c86:	d907      	bls.n	8000c98 <__udivmoddi4+0xc8>
 8000c88:	2e00      	cmp	r6, #0
 8000c8a:	d054      	beq.n	8000d36 <__udivmoddi4+0x166>
 8000c8c:	2100      	movs	r1, #0
 8000c8e:	e886 0021 	stmia.w	r6, {r0, r5}
 8000c92:	4608      	mov	r0, r1
 8000c94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c98:	fab3 f183 	clz	r1, r3
 8000c9c:	2900      	cmp	r1, #0
 8000c9e:	f040 808e 	bne.w	8000dbe <__udivmoddi4+0x1ee>
 8000ca2:	42ab      	cmp	r3, r5
 8000ca4:	d302      	bcc.n	8000cac <__udivmoddi4+0xdc>
 8000ca6:	4282      	cmp	r2, r0
 8000ca8:	f200 80fa 	bhi.w	8000ea0 <__udivmoddi4+0x2d0>
 8000cac:	1a84      	subs	r4, r0, r2
 8000cae:	eb65 0503 	sbc.w	r5, r5, r3
 8000cb2:	2001      	movs	r0, #1
 8000cb4:	46ac      	mov	ip, r5
 8000cb6:	2e00      	cmp	r6, #0
 8000cb8:	d03f      	beq.n	8000d3a <__udivmoddi4+0x16a>
 8000cba:	e886 1010 	stmia.w	r6, {r4, ip}
 8000cbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cc2:	b912      	cbnz	r2, 8000cca <__udivmoddi4+0xfa>
 8000cc4:	2701      	movs	r7, #1
 8000cc6:	fbb7 f7f2 	udiv	r7, r7, r2
 8000cca:	fab7 fe87 	clz	lr, r7
 8000cce:	f1be 0f00 	cmp.w	lr, #0
 8000cd2:	d134      	bne.n	8000d3e <__udivmoddi4+0x16e>
 8000cd4:	1beb      	subs	r3, r5, r7
 8000cd6:	0c3a      	lsrs	r2, r7, #16
 8000cd8:	fa1f fc87 	uxth.w	ip, r7
 8000cdc:	2101      	movs	r1, #1
 8000cde:	fbb3 f8f2 	udiv	r8, r3, r2
 8000ce2:	0c25      	lsrs	r5, r4, #16
 8000ce4:	fb02 3318 	mls	r3, r2, r8, r3
 8000ce8:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000cec:	fb0c f308 	mul.w	r3, ip, r8
 8000cf0:	42ab      	cmp	r3, r5
 8000cf2:	d907      	bls.n	8000d04 <__udivmoddi4+0x134>
 8000cf4:	19ed      	adds	r5, r5, r7
 8000cf6:	f108 30ff 	add.w	r0, r8, #4294967295
 8000cfa:	d202      	bcs.n	8000d02 <__udivmoddi4+0x132>
 8000cfc:	42ab      	cmp	r3, r5
 8000cfe:	f200 80d1 	bhi.w	8000ea4 <__udivmoddi4+0x2d4>
 8000d02:	4680      	mov	r8, r0
 8000d04:	1aed      	subs	r5, r5, r3
 8000d06:	b2a3      	uxth	r3, r4
 8000d08:	fbb5 f0f2 	udiv	r0, r5, r2
 8000d0c:	fb02 5510 	mls	r5, r2, r0, r5
 8000d10:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8000d14:	fb0c fc00 	mul.w	ip, ip, r0
 8000d18:	45a4      	cmp	ip, r4
 8000d1a:	d907      	bls.n	8000d2c <__udivmoddi4+0x15c>
 8000d1c:	19e4      	adds	r4, r4, r7
 8000d1e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d22:	d202      	bcs.n	8000d2a <__udivmoddi4+0x15a>
 8000d24:	45a4      	cmp	ip, r4
 8000d26:	f200 80b8 	bhi.w	8000e9a <__udivmoddi4+0x2ca>
 8000d2a:	4618      	mov	r0, r3
 8000d2c:	eba4 040c 	sub.w	r4, r4, ip
 8000d30:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000d34:	e79d      	b.n	8000c72 <__udivmoddi4+0xa2>
 8000d36:	4631      	mov	r1, r6
 8000d38:	4630      	mov	r0, r6
 8000d3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d3e:	f1ce 0420 	rsb	r4, lr, #32
 8000d42:	fa05 f30e 	lsl.w	r3, r5, lr
 8000d46:	fa07 f70e 	lsl.w	r7, r7, lr
 8000d4a:	fa20 f804 	lsr.w	r8, r0, r4
 8000d4e:	0c3a      	lsrs	r2, r7, #16
 8000d50:	fa25 f404 	lsr.w	r4, r5, r4
 8000d54:	ea48 0803 	orr.w	r8, r8, r3
 8000d58:	fbb4 f1f2 	udiv	r1, r4, r2
 8000d5c:	ea4f 4518 	mov.w	r5, r8, lsr #16
 8000d60:	fb02 4411 	mls	r4, r2, r1, r4
 8000d64:	fa1f fc87 	uxth.w	ip, r7
 8000d68:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
 8000d6c:	fb01 f30c 	mul.w	r3, r1, ip
 8000d70:	42ab      	cmp	r3, r5
 8000d72:	fa00 f40e 	lsl.w	r4, r0, lr
 8000d76:	d909      	bls.n	8000d8c <__udivmoddi4+0x1bc>
 8000d78:	19ed      	adds	r5, r5, r7
 8000d7a:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d7e:	f080 808a 	bcs.w	8000e96 <__udivmoddi4+0x2c6>
 8000d82:	42ab      	cmp	r3, r5
 8000d84:	f240 8087 	bls.w	8000e96 <__udivmoddi4+0x2c6>
 8000d88:	3902      	subs	r1, #2
 8000d8a:	443d      	add	r5, r7
 8000d8c:	1aeb      	subs	r3, r5, r3
 8000d8e:	fa1f f588 	uxth.w	r5, r8
 8000d92:	fbb3 f0f2 	udiv	r0, r3, r2
 8000d96:	fb02 3310 	mls	r3, r2, r0, r3
 8000d9a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000d9e:	fb00 f30c 	mul.w	r3, r0, ip
 8000da2:	42ab      	cmp	r3, r5
 8000da4:	d907      	bls.n	8000db6 <__udivmoddi4+0x1e6>
 8000da6:	19ed      	adds	r5, r5, r7
 8000da8:	f100 38ff 	add.w	r8, r0, #4294967295
 8000dac:	d26f      	bcs.n	8000e8e <__udivmoddi4+0x2be>
 8000dae:	42ab      	cmp	r3, r5
 8000db0:	d96d      	bls.n	8000e8e <__udivmoddi4+0x2be>
 8000db2:	3802      	subs	r0, #2
 8000db4:	443d      	add	r5, r7
 8000db6:	1aeb      	subs	r3, r5, r3
 8000db8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dbc:	e78f      	b.n	8000cde <__udivmoddi4+0x10e>
 8000dbe:	f1c1 0720 	rsb	r7, r1, #32
 8000dc2:	fa22 f807 	lsr.w	r8, r2, r7
 8000dc6:	408b      	lsls	r3, r1
 8000dc8:	fa05 f401 	lsl.w	r4, r5, r1
 8000dcc:	ea48 0303 	orr.w	r3, r8, r3
 8000dd0:	fa20 fe07 	lsr.w	lr, r0, r7
 8000dd4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 8000dd8:	40fd      	lsrs	r5, r7
 8000dda:	ea4e 0e04 	orr.w	lr, lr, r4
 8000dde:	fbb5 f9fc 	udiv	r9, r5, ip
 8000de2:	ea4f 441e 	mov.w	r4, lr, lsr #16
 8000de6:	fb0c 5519 	mls	r5, ip, r9, r5
 8000dea:	fa1f f883 	uxth.w	r8, r3
 8000dee:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
 8000df2:	fb09 f408 	mul.w	r4, r9, r8
 8000df6:	42ac      	cmp	r4, r5
 8000df8:	fa02 f201 	lsl.w	r2, r2, r1
 8000dfc:	fa00 fa01 	lsl.w	sl, r0, r1
 8000e00:	d908      	bls.n	8000e14 <__udivmoddi4+0x244>
 8000e02:	18ed      	adds	r5, r5, r3
 8000e04:	f109 30ff 	add.w	r0, r9, #4294967295
 8000e08:	d243      	bcs.n	8000e92 <__udivmoddi4+0x2c2>
 8000e0a:	42ac      	cmp	r4, r5
 8000e0c:	d941      	bls.n	8000e92 <__udivmoddi4+0x2c2>
 8000e0e:	f1a9 0902 	sub.w	r9, r9, #2
 8000e12:	441d      	add	r5, r3
 8000e14:	1b2d      	subs	r5, r5, r4
 8000e16:	fa1f fe8e 	uxth.w	lr, lr
 8000e1a:	fbb5 f0fc 	udiv	r0, r5, ip
 8000e1e:	fb0c 5510 	mls	r5, ip, r0, r5
 8000e22:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
 8000e26:	fb00 f808 	mul.w	r8, r0, r8
 8000e2a:	45a0      	cmp	r8, r4
 8000e2c:	d907      	bls.n	8000e3e <__udivmoddi4+0x26e>
 8000e2e:	18e4      	adds	r4, r4, r3
 8000e30:	f100 35ff 	add.w	r5, r0, #4294967295
 8000e34:	d229      	bcs.n	8000e8a <__udivmoddi4+0x2ba>
 8000e36:	45a0      	cmp	r8, r4
 8000e38:	d927      	bls.n	8000e8a <__udivmoddi4+0x2ba>
 8000e3a:	3802      	subs	r0, #2
 8000e3c:	441c      	add	r4, r3
 8000e3e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000e42:	eba4 0408 	sub.w	r4, r4, r8
 8000e46:	fba0 8902 	umull	r8, r9, r0, r2
 8000e4a:	454c      	cmp	r4, r9
 8000e4c:	46c6      	mov	lr, r8
 8000e4e:	464d      	mov	r5, r9
 8000e50:	d315      	bcc.n	8000e7e <__udivmoddi4+0x2ae>
 8000e52:	d012      	beq.n	8000e7a <__udivmoddi4+0x2aa>
 8000e54:	b156      	cbz	r6, 8000e6c <__udivmoddi4+0x29c>
 8000e56:	ebba 030e 	subs.w	r3, sl, lr
 8000e5a:	eb64 0405 	sbc.w	r4, r4, r5
 8000e5e:	fa04 f707 	lsl.w	r7, r4, r7
 8000e62:	40cb      	lsrs	r3, r1
 8000e64:	431f      	orrs	r7, r3
 8000e66:	40cc      	lsrs	r4, r1
 8000e68:	6037      	str	r7, [r6, #0]
 8000e6a:	6074      	str	r4, [r6, #4]
 8000e6c:	2100      	movs	r1, #0
 8000e6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e72:	4618      	mov	r0, r3
 8000e74:	e6f8      	b.n	8000c68 <__udivmoddi4+0x98>
 8000e76:	4690      	mov	r8, r2
 8000e78:	e6e0      	b.n	8000c3c <__udivmoddi4+0x6c>
 8000e7a:	45c2      	cmp	sl, r8
 8000e7c:	d2ea      	bcs.n	8000e54 <__udivmoddi4+0x284>
 8000e7e:	ebb8 0e02 	subs.w	lr, r8, r2
 8000e82:	eb69 0503 	sbc.w	r5, r9, r3
 8000e86:	3801      	subs	r0, #1
 8000e88:	e7e4      	b.n	8000e54 <__udivmoddi4+0x284>
 8000e8a:	4628      	mov	r0, r5
 8000e8c:	e7d7      	b.n	8000e3e <__udivmoddi4+0x26e>
 8000e8e:	4640      	mov	r0, r8
 8000e90:	e791      	b.n	8000db6 <__udivmoddi4+0x1e6>
 8000e92:	4681      	mov	r9, r0
 8000e94:	e7be      	b.n	8000e14 <__udivmoddi4+0x244>
 8000e96:	4601      	mov	r1, r0
 8000e98:	e778      	b.n	8000d8c <__udivmoddi4+0x1bc>
 8000e9a:	3802      	subs	r0, #2
 8000e9c:	443c      	add	r4, r7
 8000e9e:	e745      	b.n	8000d2c <__udivmoddi4+0x15c>
 8000ea0:	4608      	mov	r0, r1
 8000ea2:	e708      	b.n	8000cb6 <__udivmoddi4+0xe6>
 8000ea4:	f1a8 0802 	sub.w	r8, r8, #2
 8000ea8:	443d      	add	r5, r7
 8000eaa:	e72b      	b.n	8000d04 <__udivmoddi4+0x134>

08000eac <__aeabi_idiv0>:
 8000eac:	4770      	bx	lr
 8000eae:	bf00      	nop

08000eb0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority  Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000eb0:	b510      	push	{r4, lr}
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  HAL_SYSTICK_Config(SystemCoreClock/1000);
 8000eb2:	4b08      	ldr	r3, [pc, #32]	; (8000ed4 <HAL_InitTick+0x24>)
{
 8000eb4:	4604      	mov	r4, r0
  HAL_SYSTICK_Config(SystemCoreClock/1000);
 8000eb6:	6818      	ldr	r0, [r3, #0]
 8000eb8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000ebc:	fbb0 f0f3 	udiv	r0, r0, r3
 8000ec0:	f000 f878 	bl	8000fb4 <HAL_SYSTICK_Config>

  /*Configure the SysTick IRQ priority */
  HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0);
 8000ec4:	2200      	movs	r2, #0
 8000ec6:	4621      	mov	r1, r4
 8000ec8:	f04f 30ff 	mov.w	r0, #4294967295
 8000ecc:	f000 f83e 	bl	8000f4c <HAL_NVIC_SetPriority>

  /* Return function status */
  return HAL_OK;
}
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	bd10      	pop	{r4, pc}
 8000ed4:	20000000 	.word	0x20000000

08000ed8 <HAL_Init>:
{
 8000ed8:	b508      	push	{r3, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000eda:	2003      	movs	r0, #3
 8000edc:	f000 f824 	bl	8000f28 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8000ee0:	2000      	movs	r0, #0
 8000ee2:	f7ff ffe5 	bl	8000eb0 <HAL_InitTick>
  HAL_MspInit();
 8000ee6:	f001 fa67 	bl	80023b8 <HAL_MspInit>
}
 8000eea:	2000      	movs	r0, #0
 8000eec:	bd08      	pop	{r3, pc}
	...

08000ef0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick++;
 8000ef0:	4a02      	ldr	r2, [pc, #8]	; (8000efc <HAL_IncTick+0xc>)
 8000ef2:	6813      	ldr	r3, [r2, #0]
 8000ef4:	3301      	adds	r3, #1
 8000ef6:	6013      	str	r3, [r2, #0]
 8000ef8:	4770      	bx	lr
 8000efa:	bf00      	nop
 8000efc:	200006c8 	.word	0x200006c8

08000f00 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8000f00:	4b01      	ldr	r3, [pc, #4]	; (8000f08 <HAL_GetTick+0x8>)
 8000f02:	6818      	ldr	r0, [r3, #0]
}
 8000f04:	4770      	bx	lr
 8000f06:	bf00      	nop
 8000f08:	200006c8 	.word	0x200006c8

08000f0c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8000f0c:	b538      	push	{r3, r4, r5, lr}
 8000f0e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8000f10:	f7ff fff6 	bl	8000f00 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a period to guaranty minimum wait */
  if (wait < HAL_MAX_DELAY)
 8000f14:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8000f16:	4605      	mov	r5, r0
  {
    wait++;
 8000f18:	bf18      	it	ne
 8000f1a:	3401      	addne	r4, #1
  } 

  while((HAL_GetTick() - tickstart) < wait)
 8000f1c:	f7ff fff0 	bl	8000f00 <HAL_GetTick>
 8000f20:	1b40      	subs	r0, r0, r5
 8000f22:	4284      	cmp	r4, r0
 8000f24:	d8fa      	bhi.n	8000f1c <HAL_Delay+0x10>
  {
  }
}
 8000f26:	bd38      	pop	{r3, r4, r5, pc}

08000f28 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8000f28:	4a07      	ldr	r2, [pc, #28]	; (8000f48 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8000f2a:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8000f2c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8000f30:	041b      	lsls	r3, r3, #16
 8000f32:	0c1b      	lsrs	r3, r3, #16
 8000f34:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8U)                      );              /* Insert write key and priorty group */
 8000f38:	0200      	lsls	r0, r0, #8
 8000f3a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000f3e:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value  =  (reg_value                                   |
 8000f42:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8000f44:	60d3      	str	r3, [r2, #12]
 8000f46:	4770      	bx	lr
 8000f48:	e000ed00 	.word	0xe000ed00

08000f4c <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8000f4c:	4b17      	ldr	r3, [pc, #92]	; (8000fac <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8000f4e:	b530      	push	{r4, r5, lr}
 8000f50:	68dc      	ldr	r4, [r3, #12]
 8000f52:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8000f56:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000f5a:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8000f5c:	2b04      	cmp	r3, #4
 8000f5e:	bf28      	it	cs
 8000f60:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000f62:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000f64:	f04f 0501 	mov.w	r5, #1
 8000f68:	fa05 f303 	lsl.w	r3, r5, r3
 8000f6c:	f103 33ff 	add.w	r3, r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000f70:	bf8c      	ite	hi
 8000f72:	3c03      	subhi	r4, #3
 8000f74:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000f76:	4019      	ands	r1, r3
 8000f78:	40a1      	lsls	r1, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8000f7a:	fa05 f404 	lsl.w	r4, r5, r4
 8000f7e:	3c01      	subs	r4, #1
 8000f80:	4022      	ands	r2, r4
  if ((int32_t)(IRQn) < 0)
 8000f82:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000f84:	ea42 0201 	orr.w	r2, r2, r1
 8000f88:	ea4f 1202 	mov.w	r2, r2, lsl #4
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f8c:	bfaf      	iteee	ge
 8000f8e:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f92:	f000 000f 	andlt.w	r0, r0, #15
 8000f96:	4b06      	ldrlt	r3, [pc, #24]	; (8000fb0 <HAL_NVIC_SetPriority+0x64>)
 8000f98:	b2d2      	uxtblt	r2, r2
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f9a:	bfa5      	ittet	ge
 8000f9c:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
 8000fa0:	b2d2      	uxtbge	r2, r2
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000fa2:	541a      	strblt	r2, [r3, r0]
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000fa4:	f880 2300 	strbge.w	r2, [r0, #768]	; 0x300
 8000fa8:	bd30      	pop	{r4, r5, pc}
 8000faa:	bf00      	nop
 8000fac:	e000ed00 	.word	0xe000ed00
 8000fb0:	e000ed14 	.word	0xe000ed14

08000fb4 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000fb4:	3801      	subs	r0, #1
 8000fb6:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000fba:	d20a      	bcs.n	8000fd2 <HAL_SYSTICK_Config+0x1e>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000fbc:	4b06      	ldr	r3, [pc, #24]	; (8000fd8 <HAL_SYSTICK_Config+0x24>)
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000fbe:	4a07      	ldr	r2, [pc, #28]	; (8000fdc <HAL_SYSTICK_Config+0x28>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000fc0:	6058      	str	r0, [r3, #4]
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000fc2:	21f0      	movs	r1, #240	; 0xf0
 8000fc4:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000fc8:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000fca:	2207      	movs	r2, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000fcc:	6098      	str	r0, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000fce:	601a      	str	r2, [r3, #0]
 8000fd0:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 8000fd2:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8000fd4:	4770      	bx	lr
 8000fd6:	bf00      	nop
 8000fd8:	e000e010 	.word	0xe000e010
 8000fdc:	e000ed00 	.word	0xe000ed00

08000fe0 <HAL_SYSTICK_CLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  * @retval None
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
 8000fe0:	4b04      	ldr	r3, [pc, #16]	; (8000ff4 <HAL_SYSTICK_CLKSourceConfig+0x14>)
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
  {
    SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 8000fe2:	681a      	ldr	r2, [r3, #0]
  if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 8000fe4:	2804      	cmp	r0, #4
    SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 8000fe6:	bf0c      	ite	eq
 8000fe8:	f042 0204 	orreq.w	r2, r2, #4
  }
  else
  {
    SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 8000fec:	f022 0204 	bicne.w	r2, r2, #4
 8000ff0:	601a      	str	r2, [r3, #0]
 8000ff2:	4770      	bx	lr
 8000ff4:	e000e010 	.word	0xe000e010

08000ff8 <HAL_SYSTICK_Callback>:
/**
  * @brief  SYSTICK callback.
  * @retval None
  */
__weak void HAL_SYSTICK_Callback(void)
{
 8000ff8:	4770      	bx	lr

08000ffa <HAL_SYSTICK_IRQHandler>:
{
 8000ffa:	b508      	push	{r3, lr}
  HAL_SYSTICK_Callback();
 8000ffc:	f7ff fffc 	bl	8000ff8 <HAL_SYSTICK_Callback>
 8001000:	bd08      	pop	{r3, pc}
	...

08001004 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001008:	b085      	sub	sp, #20
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != RESET)
 800100a:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800100c:	f8df 8158 	ldr.w	r8, [pc, #344]	; 8001168 <HAL_GPIO_Init+0x164>
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR1;
 8001010:	4a53      	ldr	r2, [pc, #332]	; (8001160 <HAL_GPIO_Init+0x15c>)
  while (((GPIO_Init->Pin) >> position) != RESET)
 8001012:	9301      	str	r3, [sp, #4]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8001014:	f04f 090f 	mov.w	r9, #15
  uint32_t position = 0x00;
 8001018:	2300      	movs	r3, #0
  while (((GPIO_Init->Pin) >> position) != RESET)
 800101a:	9c01      	ldr	r4, [sp, #4]
 800101c:	40dc      	lsrs	r4, r3
 800101e:	d102      	bne.n	8001026 <HAL_GPIO_Init+0x22>
      }
    }
    
    position++;
  }
}
 8001020:	b005      	add	sp, #20
 8001022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 8001026:	2401      	movs	r4, #1
 8001028:	fa04 fa03 	lsl.w	sl, r4, r3
    if(iocurrent)
 800102c:	9c01      	ldr	r4, [sp, #4]
 800102e:	ea14 050a 	ands.w	r5, r4, sl
 8001032:	f000 808f 	beq.w	8001154 <HAL_GPIO_Init+0x150>
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001036:	684c      	ldr	r4, [r1, #4]
 8001038:	f024 0b10 	bic.w	fp, r4, #16
 800103c:	f1bb 0f02 	cmp.w	fp, #2
 8001040:	d111      	bne.n	8001066 <HAL_GPIO_Init+0x62>
        temp = GPIOx->AFR[position >> 3];
 8001042:	08df      	lsrs	r7, r3, #3
 8001044:	eb00 0787 	add.w	r7, r0, r7, lsl #2
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8001048:	f003 0e07 	and.w	lr, r3, #7
        temp = GPIOx->AFR[position >> 3];
 800104c:	6a3e      	ldr	r6, [r7, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800104e:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8001052:	fa09 fc0e 	lsl.w	ip, r9, lr
 8001056:	ea26 0c0c 	bic.w	ip, r6, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 800105a:	690e      	ldr	r6, [r1, #16]
 800105c:	fa06 f60e 	lsl.w	r6, r6, lr
 8001060:	ea46 060c 	orr.w	r6, r6, ip
        GPIOx->AFR[position >> 3] = temp;
 8001064:	623e      	str	r6, [r7, #32]
 8001066:	ea4f 0c43 	mov.w	ip, r3, lsl #1
      temp &= ~(GPIO_MODER_MODE0 << (position * 2));
 800106a:	2703      	movs	r7, #3
      temp = GPIOx->MODER;
 800106c:	6806      	ldr	r6, [r0, #0]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2));
 800106e:	fa07 f70c 	lsl.w	r7, r7, ip
 8001072:	43ff      	mvns	r7, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8001074:	f004 0e03 	and.w	lr, r4, #3
      temp &= ~(GPIO_MODER_MODE0 << (position * 2));
 8001078:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 800107a:	fa0e fe0c 	lsl.w	lr, lr, ip
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800107e:	f10b 3bff 	add.w	fp, fp, #4294967295
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8001082:	ea4e 0606 	orr.w	r6, lr, r6
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001086:	f1bb 0f01 	cmp.w	fp, #1
      GPIOx->MODER = temp;
 800108a:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800108c:	d811      	bhi.n	80010b2 <HAL_GPIO_Init+0xae>
        temp = GPIOx->OSPEEDR;
 800108e:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2));
 8001090:	ea06 0b07 	and.w	fp, r6, r7
        temp |= (GPIO_Init->Speed << (position * 2));
 8001094:	68ce      	ldr	r6, [r1, #12]
 8001096:	fa06 fe0c 	lsl.w	lr, r6, ip
 800109a:	ea4e 060b 	orr.w	r6, lr, fp
        GPIOx->OSPEEDR = temp;
 800109e:	6086      	str	r6, [r0, #8]
        temp = GPIOx->OTYPER;
 80010a0:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 80010a2:	ea26 0a0a 	bic.w	sl, r6, sl
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 80010a6:	f3c4 1600 	ubfx	r6, r4, #4, #1
 80010aa:	409e      	lsls	r6, r3
 80010ac:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OTYPER = temp;
 80010b0:	6046      	str	r6, [r0, #4]
      temp = GPIOx->PUPDR;
 80010b2:	68c6      	ldr	r6, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2));
 80010b4:	4037      	ands	r7, r6
      temp |= ((GPIO_Init->Pull) << (position * 2));
 80010b6:	688e      	ldr	r6, [r1, #8]
 80010b8:	fa06 f60c 	lsl.w	r6, r6, ip
 80010bc:	4337      	orrs	r7, r6
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80010be:	00e6      	lsls	r6, r4, #3
      GPIOx->PUPDR = temp;
 80010c0:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80010c2:	d547      	bpl.n	8001154 <HAL_GPIO_Init+0x150>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80010c4:	f8d8 6060 	ldr.w	r6, [r8, #96]	; 0x60
 80010c8:	f046 0601 	orr.w	r6, r6, #1
 80010cc:	f8c8 6060 	str.w	r6, [r8, #96]	; 0x60
 80010d0:	f8d8 6060 	ldr.w	r6, [r8, #96]	; 0x60
 80010d4:	f023 0703 	bic.w	r7, r3, #3
 80010d8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80010dc:	f006 0601 	and.w	r6, r6, #1
 80010e0:	f507 3780 	add.w	r7, r7, #65536	; 0x10000
 80010e4:	9603      	str	r6, [sp, #12]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80010e6:	f003 0e03 	and.w	lr, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80010ea:	9e03      	ldr	r6, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2];
 80010ec:	68be      	ldr	r6, [r7, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80010ee:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80010f2:	fa09 fc0e 	lsl.w	ip, r9, lr
        temp |= (GPIO_GET_INDEX(GPIOx) << (4 * (position & 0x03)));
 80010f6:	f1b0 4f90 	cmp.w	r0, #1207959552	; 0x48000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80010fa:	ea26 0c0c 	bic.w	ip, r6, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4 * (position & 0x03)));
 80010fe:	d02b      	beq.n	8001158 <HAL_GPIO_Init+0x154>
 8001100:	4e18      	ldr	r6, [pc, #96]	; (8001164 <HAL_GPIO_Init+0x160>)
 8001102:	42b0      	cmp	r0, r6
 8001104:	d02a      	beq.n	800115c <HAL_GPIO_Init+0x158>
 8001106:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800110a:	42b0      	cmp	r0, r6
 800110c:	bf14      	ite	ne
 800110e:	2607      	movne	r6, #7
 8001110:	2602      	moveq	r6, #2
 8001112:	fa06 f60e 	lsl.w	r6, r6, lr
 8001116:	ea46 060c 	orr.w	r6, r6, ip
        SYSCFG->EXTICR[position >> 2] = temp;
 800111a:	60be      	str	r6, [r7, #8]
        temp = EXTI->IMR1;
 800111c:	6816      	ldr	r6, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800111e:	43ef      	mvns	r7, r5
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8001120:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8001124:	bf0c      	ite	eq
 8001126:	403e      	andeq	r6, r7
          temp |= iocurrent;
 8001128:	432e      	orrne	r6, r5
        EXTI->IMR1 = temp;
 800112a:	6016      	str	r6, [r2, #0]
        temp = EXTI->EMR1;
 800112c:	6856      	ldr	r6, [r2, #4]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800112e:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8001132:	bf0c      	ite	eq
 8001134:	403e      	andeq	r6, r7
          temp |= iocurrent;
 8001136:	432e      	orrne	r6, r5
        EXTI->EMR1 = temp;
 8001138:	6056      	str	r6, [r2, #4]
        temp = EXTI->RTSR1;
 800113a:	6896      	ldr	r6, [r2, #8]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800113c:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8001140:	bf0c      	ite	eq
 8001142:	403e      	andeq	r6, r7
          temp |= iocurrent;
 8001144:	432e      	orrne	r6, r5
        EXTI->RTSR1 = temp;
 8001146:	6096      	str	r6, [r2, #8]
        temp = EXTI->FTSR1;
 8001148:	68d6      	ldr	r6, [r2, #12]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800114a:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 800114c:	bf54      	ite	pl
 800114e:	403e      	andpl	r6, r7
          temp |= iocurrent;
 8001150:	432e      	orrmi	r6, r5
        EXTI->FTSR1 = temp;
 8001152:	60d6      	str	r6, [r2, #12]
    position++;
 8001154:	3301      	adds	r3, #1
 8001156:	e760      	b.n	800101a <HAL_GPIO_Init+0x16>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4 * (position & 0x03)));
 8001158:	2600      	movs	r6, #0
 800115a:	e7da      	b.n	8001112 <HAL_GPIO_Init+0x10e>
 800115c:	2601      	movs	r6, #1
 800115e:	e7d8      	b.n	8001112 <HAL_GPIO_Init+0x10e>
 8001160:	40010400 	.word	0x40010400
 8001164:	48000400 	.word	0x48000400
 8001168:	40021000 	.word	0x40021000

0800116c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800116c:	b10a      	cbz	r2, 8001172 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 800116e:	6181      	str	r1, [r0, #24]
 8001170:	4770      	bx	lr
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8001172:	6281      	str	r1, [r0, #40]	; 0x28
 8001174:	4770      	bx	lr

08001176 <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  GPIOx->ODR ^= GPIO_Pin;
 8001176:	6943      	ldr	r3, [r0, #20]
 8001178:	4059      	eors	r1, r3
 800117a:	6141      	str	r1, [r0, #20]
 800117c:	4770      	bx	lr
	...

08001180 <HAL_PWREx_GetVoltageRange>:
    else
    {
      return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
    }
#else
  return  (PWR->CR1 & PWR_CR1_VOS);
 8001180:	4b02      	ldr	r3, [pc, #8]	; (800118c <HAL_PWREx_GetVoltageRange+0xc>)
 8001182:	6818      	ldr	r0, [r3, #0]
#endif  
}
 8001184:	f400 60c0 	and.w	r0, r0, #1536	; 0x600
 8001188:	4770      	bx	lr
 800118a:	bf00      	nop
 800118c:	40007000 	.word	0x40007000

08001190 <HAL_PWREx_ControlVoltageScaling>:
  *        cleared before returning the status. If the flag is not cleared within
  *        50 microseconds, HAL_TIMEOUT status is reported.                    
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 8001190:	4b16      	ldr	r3, [pc, #88]	; (80011ec <HAL_PWREx_ControlVoltageScaling+0x5c>)
#else

  /* If Set Range 1 */
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
  {
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 8001192:	681a      	ldr	r2, [r3, #0]
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 8001194:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 8001198:	f402 62c0 	and.w	r2, r2, #1536	; 0x600
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 800119c:	d11a      	bne.n	80011d4 <HAL_PWREx_ControlVoltageScaling+0x44>
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 800119e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 80011a2:	d013      	beq.n	80011cc <HAL_PWREx_ControlVoltageScaling+0x3c>
    {
      /* Set Range 1 */
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 80011a4:	681a      	ldr	r2, [r3, #0]
      
      /* Wait until VOSF is cleared */      
      wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000));
 80011a6:	4912      	ldr	r1, [pc, #72]	; (80011f0 <HAL_PWREx_ControlVoltageScaling+0x60>)
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 80011a8:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 80011ac:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80011b0:	601a      	str	r2, [r3, #0]
      wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000));
 80011b2:	4a10      	ldr	r2, [pc, #64]	; (80011f4 <HAL_PWREx_ControlVoltageScaling+0x64>)
 80011b4:	6812      	ldr	r2, [r2, #0]
 80011b6:	fbb2 f1f1 	udiv	r1, r2, r1
 80011ba:	2232      	movs	r2, #50	; 0x32
 80011bc:	434a      	muls	r2, r1
      while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
 80011be:	b112      	cbz	r2, 80011c6 <HAL_PWREx_ControlVoltageScaling+0x36>
 80011c0:	6959      	ldr	r1, [r3, #20]
 80011c2:	0549      	lsls	r1, r1, #21
 80011c4:	d404      	bmi.n	80011d0 <HAL_PWREx_ControlVoltageScaling+0x40>
      {
        wait_loop_index--;
      }
      if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 80011c6:	695b      	ldr	r3, [r3, #20]
 80011c8:	055b      	lsls	r3, r3, #21
 80011ca:	d40d      	bmi.n	80011e8 <HAL_PWREx_ControlVoltageScaling+0x58>
      /* No need to wait for VOSF to be cleared for this transition */
    }
  }
#endif  
  
  return HAL_OK;
 80011cc:	2000      	movs	r0, #0
 80011ce:	4770      	bx	lr
        wait_loop_index--;
 80011d0:	3a01      	subs	r2, #1
 80011d2:	e7f4      	b.n	80011be <HAL_PWREx_ControlVoltageScaling+0x2e>
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
 80011d4:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 80011d8:	bf1f      	itttt	ne
 80011da:	681a      	ldrne	r2, [r3, #0]
 80011dc:	f422 62c0 	bicne.w	r2, r2, #1536	; 0x600
 80011e0:	f442 6280 	orrne.w	r2, r2, #1024	; 0x400
 80011e4:	601a      	strne	r2, [r3, #0]
 80011e6:	e7f1      	b.n	80011cc <HAL_PWREx_ControlVoltageScaling+0x3c>
        return HAL_TIMEOUT;
 80011e8:	2003      	movs	r0, #3
}  
 80011ea:	4770      	bx	lr
 80011ec:	40007000 	.word	0x40007000
 80011f0:	000f4240 	.word	0x000f4240
 80011f4:	20000000 	.word	0x20000000

080011f8 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 80011f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t vos = 0;
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */

  if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 80011fa:	4d1e      	ldr	r5, [pc, #120]	; (8001274 <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 80011fc:	6dab      	ldr	r3, [r5, #88]	; 0x58
 80011fe:	00da      	lsls	r2, r3, #3
{
 8001200:	4604      	mov	r4, r0
  if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 8001202:	d518      	bpl.n	8001236 <RCC_SetFlashLatencyFromMSIRange+0x3e>
  {
    vos = HAL_PWREx_GetVoltageRange();
 8001204:	f7ff ffbc 	bl	8001180 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_ENABLE();
    vos = HAL_PWREx_GetVoltageRange();
    __HAL_RCC_PWR_CLK_DISABLE();
  }

  if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
 8001208:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800120c:	d123      	bne.n	8001256 <RCC_SetFlashLatencyFromMSIRange+0x5e>
  {
    if(msirange > RCC_MSIRANGE_8)
 800120e:	2c80      	cmp	r4, #128	; 0x80
 8001210:	d929      	bls.n	8001266 <RCC_SetFlashLatencyFromMSIRange+0x6e>
    {
      /* MSI > 16Mhz */
      if(msirange > RCC_MSIRANGE_10)
 8001212:	2ca0      	cmp	r4, #160	; 0xa0
        latency = FLASH_LATENCY_2; /* 2WS */
      }
      else
      {
        /* MSI 24Mhz or 32Mhz */
        latency = FLASH_LATENCY_1; /* 1WS */
 8001214:	bf8c      	ite	hi
 8001216:	2002      	movhi	r0, #2
 8001218:	2001      	movls	r0, #1
      /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
    }
#endif
  }

  __HAL_FLASH_SET_LATENCY(latency);
 800121a:	4a17      	ldr	r2, [pc, #92]	; (8001278 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 800121c:	6813      	ldr	r3, [r2, #0]
 800121e:	f023 0307 	bic.w	r3, r3, #7
 8001222:	4303      	orrs	r3, r0
 8001224:	6013      	str	r3, [r2, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
     memory by reading the FLASH_ACR register */
  if(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY) != latency)
 8001226:	6813      	ldr	r3, [r2, #0]
 8001228:	f003 0307 	and.w	r3, r3, #7
  {
    return HAL_ERROR;
  }

  return HAL_OK;
}
 800122c:	1a18      	subs	r0, r3, r0
 800122e:	bf18      	it	ne
 8001230:	2001      	movne	r0, #1
 8001232:	b003      	add	sp, #12
 8001234:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 8001236:	6dab      	ldr	r3, [r5, #88]	; 0x58
 8001238:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800123c:	65ab      	str	r3, [r5, #88]	; 0x58
 800123e:	6dab      	ldr	r3, [r5, #88]	; 0x58
 8001240:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001244:	9301      	str	r3, [sp, #4]
 8001246:	9b01      	ldr	r3, [sp, #4]
    vos = HAL_PWREx_GetVoltageRange();
 8001248:	f7ff ff9a 	bl	8001180 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_DISABLE();
 800124c:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800124e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001252:	65ab      	str	r3, [r5, #88]	; 0x58
 8001254:	e7d8      	b.n	8001208 <RCC_SetFlashLatencyFromMSIRange+0x10>
    if(msirange > RCC_MSIRANGE_8)
 8001256:	2c80      	cmp	r4, #128	; 0x80
 8001258:	d807      	bhi.n	800126a <RCC_SetFlashLatencyFromMSIRange+0x72>
      if(msirange == RCC_MSIRANGE_8)
 800125a:	d008      	beq.n	800126e <RCC_SetFlashLatencyFromMSIRange+0x76>
      else if(msirange == RCC_MSIRANGE_7)
 800125c:	f1a4 0370 	sub.w	r3, r4, #112	; 0x70
 8001260:	4258      	negs	r0, r3
 8001262:	4158      	adcs	r0, r3
 8001264:	e7d9      	b.n	800121a <RCC_SetFlashLatencyFromMSIRange+0x22>
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
 8001266:	2000      	movs	r0, #0
 8001268:	e7d7      	b.n	800121a <RCC_SetFlashLatencyFromMSIRange+0x22>
      latency = FLASH_LATENCY_3; /* 3WS */
 800126a:	2003      	movs	r0, #3
 800126c:	e7d5      	b.n	800121a <RCC_SetFlashLatencyFromMSIRange+0x22>
        latency = FLASH_LATENCY_2; /* 2WS */
 800126e:	2002      	movs	r0, #2
 8001270:	e7d3      	b.n	800121a <RCC_SetFlashLatencyFromMSIRange+0x22>
 8001272:	bf00      	nop
 8001274:	40021000 	.word	0x40021000
 8001278:	40022000 	.word	0x40022000

0800127c <HAL_RCC_GetSysClockFreq>:
  if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_MSI) ||
 800127c:	4b2f      	ldr	r3, [pc, #188]	; (800133c <HAL_RCC_GetSysClockFreq+0xc0>)
 800127e:	689a      	ldr	r2, [r3, #8]
 8001280:	f012 0f0c 	tst.w	r2, #12
{
 8001284:	b510      	push	{r4, lr}
  if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_MSI) ||
 8001286:	d009      	beq.n	800129c <HAL_RCC_GetSysClockFreq+0x20>
     ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_MSI)))
 8001288:	689a      	ldr	r2, [r3, #8]
 800128a:	f002 020c 	and.w	r2, r2, #12
  if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_MSI) ||
 800128e:	2a0c      	cmp	r2, #12
 8001290:	d12d      	bne.n	80012ee <HAL_RCC_GetSysClockFreq+0x72>
     ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_MSI)))
 8001292:	68da      	ldr	r2, [r3, #12]
 8001294:	f002 0203 	and.w	r2, r2, #3
 8001298:	2a01      	cmp	r2, #1
 800129a:	d128      	bne.n	80012ee <HAL_RCC_GetSysClockFreq+0x72>
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == RESET)
 800129c:	681a      	ldr	r2, [r3, #0]
    msirange = MSIRangeTable[msirange];
 800129e:	4928      	ldr	r1, [pc, #160]	; (8001340 <HAL_RCC_GetSysClockFreq+0xc4>)
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == RESET)
 80012a0:	0712      	lsls	r2, r2, #28
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 80012a2:	bf55      	itete	pl
 80012a4:	f8d3 2094 	ldrpl.w	r2, [r3, #148]	; 0x94
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 80012a8:	681a      	ldrmi	r2, [r3, #0]
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 80012aa:	f3c2 2203 	ubfxpl	r2, r2, #8, #4
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 80012ae:	f3c2 1203 	ubfxmi	r2, r2, #4, #4
    msirange = MSIRangeTable[msirange];
 80012b2:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
    if(__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_MSI)
 80012b6:	6899      	ldr	r1, [r3, #8]
      sysclockfreq = msirange;
 80012b8:	f011 0f0c 	tst.w	r1, #12
 80012bc:	bf0c      	ite	eq
 80012be:	4610      	moveq	r0, r2
 80012c0:	2000      	movne	r0, #0
  if(__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL)
 80012c2:	6899      	ldr	r1, [r3, #8]
 80012c4:	f001 010c 	and.w	r1, r1, #12
 80012c8:	290c      	cmp	r1, #12
 80012ca:	d130      	bne.n	800132e <HAL_RCC_GetSysClockFreq+0xb2>
    pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 80012cc:	68dc      	ldr	r4, [r3, #12]
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80012ce:	68d8      	ldr	r0, [r3, #12]
 80012d0:	f3c0 1002 	ubfx	r0, r0, #4, #3
 80012d4:	1c41      	adds	r1, r0, #1
    pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 80012d6:	f004 0003 	and.w	r0, r4, #3
    switch (pllsource)
 80012da:	2802      	cmp	r0, #2
 80012dc:	d019      	beq.n	8001312 <HAL_RCC_GetSysClockFreq+0x96>
 80012de:	2803      	cmp	r0, #3
 80012e0:	d026      	beq.n	8001330 <HAL_RCC_GetSysClockFreq+0xb4>
      pllvco = (msirange / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 80012e2:	fbb2 f2f1 	udiv	r2, r2, r1
 80012e6:	68d8      	ldr	r0, [r3, #12]
 80012e8:	f3c0 2006 	ubfx	r0, r0, #8, #7
 80012ec:	e017      	b.n	800131e <HAL_RCC_GetSysClockFreq+0xa2>
  else if(__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 80012ee:	689a      	ldr	r2, [r3, #8]
 80012f0:	f002 020c 	and.w	r2, r2, #12
 80012f4:	2a04      	cmp	r2, #4
 80012f6:	d007      	beq.n	8001308 <HAL_RCC_GetSysClockFreq+0x8c>
  else if(__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 80012f8:	689a      	ldr	r2, [r3, #8]
 80012fa:	f002 020c 	and.w	r2, r2, #12
 80012fe:	2a08      	cmp	r2, #8
 8001300:	d104      	bne.n	800130c <HAL_RCC_GetSysClockFreq+0x90>
    sysclockfreq = HSE_VALUE;
 8001302:	4810      	ldr	r0, [pc, #64]	; (8001344 <HAL_RCC_GetSysClockFreq+0xc8>)
  uint32_t msirange = 0U, pllvco = 0U, pllsource = 0U, pllr = 2U, pllm = 2U;
 8001304:	2200      	movs	r2, #0
 8001306:	e7dc      	b.n	80012c2 <HAL_RCC_GetSysClockFreq+0x46>
    sysclockfreq = HSI_VALUE;
 8001308:	480f      	ldr	r0, [pc, #60]	; (8001348 <HAL_RCC_GetSysClockFreq+0xcc>)
 800130a:	e7fb      	b.n	8001304 <HAL_RCC_GetSysClockFreq+0x88>
  uint32_t sysclockfreq = 0U;
 800130c:	2000      	movs	r0, #0
  uint32_t msirange = 0U, pllvco = 0U, pllsource = 0U, pllr = 2U, pllm = 2U;
 800130e:	4602      	mov	r2, r0
 8001310:	e7d7      	b.n	80012c2 <HAL_RCC_GetSysClockFreq+0x46>
      pllvco = (HSI_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 8001312:	68da      	ldr	r2, [r3, #12]
 8001314:	480c      	ldr	r0, [pc, #48]	; (8001348 <HAL_RCC_GetSysClockFreq+0xcc>)
 8001316:	f3c2 2206 	ubfx	r2, r2, #8, #7
      pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 800131a:	fbb0 f0f1 	udiv	r0, r0, r1
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 800131e:	68db      	ldr	r3, [r3, #12]
 8001320:	f3c3 6341 	ubfx	r3, r3, #25, #2
 8001324:	3301      	adds	r3, #1
      pllvco = (msirange / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 8001326:	4350      	muls	r0, r2
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 8001328:	005b      	lsls	r3, r3, #1
    sysclockfreq = pllvco/pllr;
 800132a:	fbb0 f0f3 	udiv	r0, r0, r3
}
 800132e:	bd10      	pop	{r4, pc}
      pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 8001330:	68da      	ldr	r2, [r3, #12]
 8001332:	4804      	ldr	r0, [pc, #16]	; (8001344 <HAL_RCC_GetSysClockFreq+0xc8>)
 8001334:	f3c2 2206 	ubfx	r2, r2, #8, #7
 8001338:	e7ef      	b.n	800131a <HAL_RCC_GetSysClockFreq+0x9e>
 800133a:	bf00      	nop
 800133c:	40021000 	.word	0x40021000
 8001340:	0800646c 	.word	0x0800646c
 8001344:	007a1200 	.word	0x007a1200
 8001348:	00f42400 	.word	0x00f42400

0800134c <HAL_RCC_OscConfig>:
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 800134c:	6803      	ldr	r3, [r0, #0]
{
 800134e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8001352:	4605      	mov	r5, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8001354:	06d8      	lsls	r0, r3, #27
 8001356:	d539      	bpl.n	80013cc <HAL_RCC_OscConfig+0x80>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_MSI) )
 8001358:	4cab      	ldr	r4, [pc, #684]	; (8001608 <HAL_RCC_OscConfig+0x2bc>)
 800135a:	68a3      	ldr	r3, [r4, #8]
 800135c:	f013 0f0c 	tst.w	r3, #12
 8001360:	d162      	bne.n	8001428 <HAL_RCC_OscConfig+0xdc>
      if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != RESET) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8001362:	6823      	ldr	r3, [r4, #0]
 8001364:	0799      	lsls	r1, r3, #30
 8001366:	d503      	bpl.n	8001370 <HAL_RCC_OscConfig+0x24>
 8001368:	69ab      	ldr	r3, [r5, #24]
 800136a:	b90b      	cbnz	r3, 8001370 <HAL_RCC_OscConfig+0x24>
      return HAL_ERROR;
 800136c:	2001      	movs	r0, #1
 800136e:	e07f      	b.n	8001470 <HAL_RCC_OscConfig+0x124>
        if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 8001370:	6823      	ldr	r3, [r4, #0]
 8001372:	6a28      	ldr	r0, [r5, #32]
 8001374:	071a      	lsls	r2, r3, #28
 8001376:	bf56      	itet	pl
 8001378:	f8d4 3094 	ldrpl.w	r3, [r4, #148]	; 0x94
 800137c:	6823      	ldrmi	r3, [r4, #0]
 800137e:	091b      	lsrpl	r3, r3, #4
 8001380:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001384:	4283      	cmp	r3, r0
 8001386:	d23a      	bcs.n	80013fe <HAL_RCC_OscConfig+0xb2>
          if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8001388:	f7ff ff36 	bl	80011f8 <RCC_SetFlashLatencyFromMSIRange>
 800138c:	2800      	cmp	r0, #0
 800138e:	d1ed      	bne.n	800136c <HAL_RCC_OscConfig+0x20>
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8001390:	6823      	ldr	r3, [r4, #0]
 8001392:	f043 0308 	orr.w	r3, r3, #8
 8001396:	6023      	str	r3, [r4, #0]
 8001398:	6823      	ldr	r3, [r4, #0]
 800139a:	6a2a      	ldr	r2, [r5, #32]
 800139c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80013a0:	4313      	orrs	r3, r2
 80013a2:	6023      	str	r3, [r4, #0]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 80013a4:	6863      	ldr	r3, [r4, #4]
 80013a6:	69ea      	ldr	r2, [r5, #28]
 80013a8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80013ac:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80013b0:	6063      	str	r3, [r4, #4]
        SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80013b2:	f7ff ff63 	bl	800127c <HAL_RCC_GetSysClockFreq>
 80013b6:	68a3      	ldr	r3, [r4, #8]
 80013b8:	4a94      	ldr	r2, [pc, #592]	; (800160c <HAL_RCC_OscConfig+0x2c0>)
 80013ba:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80013be:	5cd3      	ldrb	r3, [r2, r3]
 80013c0:	40d8      	lsrs	r0, r3
 80013c2:	4b93      	ldr	r3, [pc, #588]	; (8001610 <HAL_RCC_OscConfig+0x2c4>)
 80013c4:	6018      	str	r0, [r3, #0]
        HAL_InitTick (TICK_INT_PRIORITY);
 80013c6:	2000      	movs	r0, #0
 80013c8:	f7ff fd72 	bl	8000eb0 <HAL_InitTick>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80013cc:	682b      	ldr	r3, [r5, #0]
 80013ce:	07d8      	lsls	r0, r3, #31
 80013d0:	d461      	bmi.n	8001496 <HAL_RCC_OscConfig+0x14a>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80013d2:	682b      	ldr	r3, [r5, #0]
 80013d4:	0799      	lsls	r1, r3, #30
 80013d6:	f100 80a9 	bmi.w	800152c <HAL_RCC_OscConfig+0x1e0>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80013da:	682b      	ldr	r3, [r5, #0]
 80013dc:	071a      	lsls	r2, r3, #28
 80013de:	f100 80e7 	bmi.w	80015b0 <HAL_RCC_OscConfig+0x264>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80013e2:	682b      	ldr	r3, [r5, #0]
 80013e4:	075b      	lsls	r3, r3, #29
 80013e6:	f100 8115 	bmi.w	8001614 <HAL_RCC_OscConfig+0x2c8>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 80013ea:	682b      	ldr	r3, [r5, #0]
 80013ec:	069a      	lsls	r2, r3, #26
 80013ee:	f100 817c 	bmi.w	80016ea <HAL_RCC_OscConfig+0x39e>
  if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 80013f2:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 80013f4:	2a00      	cmp	r2, #0
 80013f6:	f040 81a3 	bne.w	8001740 <HAL_RCC_OscConfig+0x3f4>
  return HAL_OK;
 80013fa:	2000      	movs	r0, #0
 80013fc:	e038      	b.n	8001470 <HAL_RCC_OscConfig+0x124>
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80013fe:	6823      	ldr	r3, [r4, #0]
 8001400:	f043 0308 	orr.w	r3, r3, #8
 8001404:	6023      	str	r3, [r4, #0]
 8001406:	6823      	ldr	r3, [r4, #0]
 8001408:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800140c:	4303      	orrs	r3, r0
 800140e:	6023      	str	r3, [r4, #0]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8001410:	6863      	ldr	r3, [r4, #4]
 8001412:	69ea      	ldr	r2, [r5, #28]
 8001414:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8001418:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800141c:	6063      	str	r3, [r4, #4]
          if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 800141e:	f7ff feeb 	bl	80011f8 <RCC_SetFlashLatencyFromMSIRange>
 8001422:	2800      	cmp	r0, #0
 8001424:	d0c5      	beq.n	80013b2 <HAL_RCC_OscConfig+0x66>
 8001426:	e7a1      	b.n	800136c <HAL_RCC_OscConfig+0x20>
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8001428:	69ab      	ldr	r3, [r5, #24]
 800142a:	b323      	cbz	r3, 8001476 <HAL_RCC_OscConfig+0x12a>
        __HAL_RCC_MSI_ENABLE();
 800142c:	6823      	ldr	r3, [r4, #0]
 800142e:	f043 0301 	orr.w	r3, r3, #1
 8001432:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001434:	f7ff fd64 	bl	8000f00 <HAL_GetTick>
 8001438:	4606      	mov	r6, r0
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == RESET)
 800143a:	6823      	ldr	r3, [r4, #0]
 800143c:	079b      	lsls	r3, r3, #30
 800143e:	d511      	bpl.n	8001464 <HAL_RCC_OscConfig+0x118>
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8001440:	6823      	ldr	r3, [r4, #0]
 8001442:	f043 0308 	orr.w	r3, r3, #8
 8001446:	6023      	str	r3, [r4, #0]
 8001448:	6823      	ldr	r3, [r4, #0]
 800144a:	6a2a      	ldr	r2, [r5, #32]
 800144c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001450:	4313      	orrs	r3, r2
 8001452:	6023      	str	r3, [r4, #0]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8001454:	6863      	ldr	r3, [r4, #4]
 8001456:	69ea      	ldr	r2, [r5, #28]
 8001458:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800145c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001460:	6063      	str	r3, [r4, #4]
 8001462:	e7b3      	b.n	80013cc <HAL_RCC_OscConfig+0x80>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8001464:	f7ff fd4c 	bl	8000f00 <HAL_GetTick>
 8001468:	1b80      	subs	r0, r0, r6
 800146a:	2802      	cmp	r0, #2
 800146c:	d9e5      	bls.n	800143a <HAL_RCC_OscConfig+0xee>
            return HAL_TIMEOUT;
 800146e:	2003      	movs	r0, #3
}
 8001470:	b002      	add	sp, #8
 8001472:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        __HAL_RCC_MSI_DISABLE();
 8001476:	6823      	ldr	r3, [r4, #0]
 8001478:	f023 0301 	bic.w	r3, r3, #1
 800147c:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 800147e:	f7ff fd3f 	bl	8000f00 <HAL_GetTick>
 8001482:	4606      	mov	r6, r0
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != RESET)
 8001484:	6823      	ldr	r3, [r4, #0]
 8001486:	079f      	lsls	r7, r3, #30
 8001488:	d5a0      	bpl.n	80013cc <HAL_RCC_OscConfig+0x80>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 800148a:	f7ff fd39 	bl	8000f00 <HAL_GetTick>
 800148e:	1b80      	subs	r0, r0, r6
 8001490:	2802      	cmp	r0, #2
 8001492:	d9f7      	bls.n	8001484 <HAL_RCC_OscConfig+0x138>
 8001494:	e7eb      	b.n	800146e <HAL_RCC_OscConfig+0x122>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||
 8001496:	4c5c      	ldr	r4, [pc, #368]	; (8001608 <HAL_RCC_OscConfig+0x2bc>)
 8001498:	68a3      	ldr	r3, [r4, #8]
 800149a:	f003 030c 	and.w	r3, r3, #12
 800149e:	2b08      	cmp	r3, #8
 80014a0:	d009      	beq.n	80014b6 <HAL_RCC_OscConfig+0x16a>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 80014a2:	68a3      	ldr	r3, [r4, #8]
 80014a4:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||
 80014a8:	2b0c      	cmp	r3, #12
 80014aa:	d10b      	bne.n	80014c4 <HAL_RCC_OscConfig+0x178>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 80014ac:	68e3      	ldr	r3, [r4, #12]
 80014ae:	f003 0303 	and.w	r3, r3, #3
 80014b2:	2b03      	cmp	r3, #3
 80014b4:	d106      	bne.n	80014c4 <HAL_RCC_OscConfig+0x178>
      if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80014b6:	6823      	ldr	r3, [r4, #0]
 80014b8:	039a      	lsls	r2, r3, #14
 80014ba:	d58a      	bpl.n	80013d2 <HAL_RCC_OscConfig+0x86>
 80014bc:	686b      	ldr	r3, [r5, #4]
 80014be:	2b00      	cmp	r3, #0
 80014c0:	d187      	bne.n	80013d2 <HAL_RCC_OscConfig+0x86>
 80014c2:	e753      	b.n	800136c <HAL_RCC_OscConfig+0x20>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80014c4:	686b      	ldr	r3, [r5, #4]
 80014c6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80014ca:	d110      	bne.n	80014ee <HAL_RCC_OscConfig+0x1a2>
 80014cc:	6823      	ldr	r3, [r4, #0]
 80014ce:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80014d2:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 80014d4:	f7ff fd14 	bl	8000f00 <HAL_GetTick>
 80014d8:	4606      	mov	r6, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == RESET)
 80014da:	6823      	ldr	r3, [r4, #0]
 80014dc:	039b      	lsls	r3, r3, #14
 80014de:	f53f af78 	bmi.w	80013d2 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80014e2:	f7ff fd0d 	bl	8000f00 <HAL_GetTick>
 80014e6:	1b80      	subs	r0, r0, r6
 80014e8:	2864      	cmp	r0, #100	; 0x64
 80014ea:	d9f6      	bls.n	80014da <HAL_RCC_OscConfig+0x18e>
 80014ec:	e7bf      	b.n	800146e <HAL_RCC_OscConfig+0x122>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80014ee:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80014f2:	d104      	bne.n	80014fe <HAL_RCC_OscConfig+0x1b2>
 80014f4:	6823      	ldr	r3, [r4, #0]
 80014f6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80014fa:	6023      	str	r3, [r4, #0]
 80014fc:	e7e6      	b.n	80014cc <HAL_RCC_OscConfig+0x180>
 80014fe:	6822      	ldr	r2, [r4, #0]
 8001500:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001504:	6022      	str	r2, [r4, #0]
 8001506:	6822      	ldr	r2, [r4, #0]
 8001508:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800150c:	6022      	str	r2, [r4, #0]
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 800150e:	2b00      	cmp	r3, #0
 8001510:	d1e0      	bne.n	80014d4 <HAL_RCC_OscConfig+0x188>
        tickstart = HAL_GetTick();
 8001512:	f7ff fcf5 	bl	8000f00 <HAL_GetTick>
 8001516:	4606      	mov	r6, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET)
 8001518:	6823      	ldr	r3, [r4, #0]
 800151a:	039f      	lsls	r7, r3, #14
 800151c:	f57f af59 	bpl.w	80013d2 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001520:	f7ff fcee 	bl	8000f00 <HAL_GetTick>
 8001524:	1b80      	subs	r0, r0, r6
 8001526:	2864      	cmp	r0, #100	; 0x64
 8001528:	d9f6      	bls.n	8001518 <HAL_RCC_OscConfig+0x1cc>
 800152a:	e7a0      	b.n	800146e <HAL_RCC_OscConfig+0x122>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||
 800152c:	4c36      	ldr	r4, [pc, #216]	; (8001608 <HAL_RCC_OscConfig+0x2bc>)
 800152e:	68a3      	ldr	r3, [r4, #8]
 8001530:	f003 030c 	and.w	r3, r3, #12
 8001534:	2b04      	cmp	r3, #4
 8001536:	d009      	beq.n	800154c <HAL_RCC_OscConfig+0x200>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8001538:	68a3      	ldr	r3, [r4, #8]
 800153a:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||
 800153e:	2b0c      	cmp	r3, #12
 8001540:	d113      	bne.n	800156a <HAL_RCC_OscConfig+0x21e>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8001542:	68e3      	ldr	r3, [r4, #12]
 8001544:	f003 0303 	and.w	r3, r3, #3
 8001548:	2b02      	cmp	r3, #2
 800154a:	d10e      	bne.n	800156a <HAL_RCC_OscConfig+0x21e>
      if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 800154c:	6823      	ldr	r3, [r4, #0]
 800154e:	055e      	lsls	r6, r3, #21
 8001550:	d503      	bpl.n	800155a <HAL_RCC_OscConfig+0x20e>
 8001552:	68eb      	ldr	r3, [r5, #12]
 8001554:	2b00      	cmp	r3, #0
 8001556:	f43f af09 	beq.w	800136c <HAL_RCC_OscConfig+0x20>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800155a:	6863      	ldr	r3, [r4, #4]
 800155c:	692a      	ldr	r2, [r5, #16]
 800155e:	f023 53f8 	bic.w	r3, r3, #520093696	; 0x1f000000
 8001562:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001566:	6063      	str	r3, [r4, #4]
 8001568:	e737      	b.n	80013da <HAL_RCC_OscConfig+0x8e>
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800156a:	68eb      	ldr	r3, [r5, #12]
 800156c:	b17b      	cbz	r3, 800158e <HAL_RCC_OscConfig+0x242>
        __HAL_RCC_HSI_ENABLE();
 800156e:	6823      	ldr	r3, [r4, #0]
 8001570:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001574:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001576:	f7ff fcc3 	bl	8000f00 <HAL_GetTick>
 800157a:	4606      	mov	r6, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
 800157c:	6823      	ldr	r3, [r4, #0]
 800157e:	0558      	lsls	r0, r3, #21
 8001580:	d4eb      	bmi.n	800155a <HAL_RCC_OscConfig+0x20e>
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001582:	f7ff fcbd 	bl	8000f00 <HAL_GetTick>
 8001586:	1b80      	subs	r0, r0, r6
 8001588:	2802      	cmp	r0, #2
 800158a:	d9f7      	bls.n	800157c <HAL_RCC_OscConfig+0x230>
 800158c:	e76f      	b.n	800146e <HAL_RCC_OscConfig+0x122>
        __HAL_RCC_HSI_DISABLE();
 800158e:	6823      	ldr	r3, [r4, #0]
 8001590:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001594:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001596:	f7ff fcb3 	bl	8000f00 <HAL_GetTick>
 800159a:	4606      	mov	r6, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != RESET)
 800159c:	6823      	ldr	r3, [r4, #0]
 800159e:	0559      	lsls	r1, r3, #21
 80015a0:	f57f af1b 	bpl.w	80013da <HAL_RCC_OscConfig+0x8e>
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80015a4:	f7ff fcac 	bl	8000f00 <HAL_GetTick>
 80015a8:	1b80      	subs	r0, r0, r6
 80015aa:	2802      	cmp	r0, #2
 80015ac:	d9f6      	bls.n	800159c <HAL_RCC_OscConfig+0x250>
 80015ae:	e75e      	b.n	800146e <HAL_RCC_OscConfig+0x122>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 80015b0:	696b      	ldr	r3, [r5, #20]
 80015b2:	4c15      	ldr	r4, [pc, #84]	; (8001608 <HAL_RCC_OscConfig+0x2bc>)
 80015b4:	b19b      	cbz	r3, 80015de <HAL_RCC_OscConfig+0x292>
      __HAL_RCC_LSI_ENABLE();
 80015b6:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 80015ba:	f043 0301 	orr.w	r3, r3, #1
 80015be:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
      tickstart = HAL_GetTick();
 80015c2:	f7ff fc9d 	bl	8000f00 <HAL_GetTick>
 80015c6:	4606      	mov	r6, r0
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == RESET)
 80015c8:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 80015cc:	079f      	lsls	r7, r3, #30
 80015ce:	f53f af08 	bmi.w	80013e2 <HAL_RCC_OscConfig+0x96>
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80015d2:	f7ff fc95 	bl	8000f00 <HAL_GetTick>
 80015d6:	1b80      	subs	r0, r0, r6
 80015d8:	2802      	cmp	r0, #2
 80015da:	d9f5      	bls.n	80015c8 <HAL_RCC_OscConfig+0x27c>
 80015dc:	e747      	b.n	800146e <HAL_RCC_OscConfig+0x122>
      __HAL_RCC_LSI_DISABLE();
 80015de:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 80015e2:	f023 0301 	bic.w	r3, r3, #1
 80015e6:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
      tickstart = HAL_GetTick();
 80015ea:	f7ff fc89 	bl	8000f00 <HAL_GetTick>
 80015ee:	4606      	mov	r6, r0
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != RESET)
 80015f0:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 80015f4:	0798      	lsls	r0, r3, #30
 80015f6:	f57f aef4 	bpl.w	80013e2 <HAL_RCC_OscConfig+0x96>
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80015fa:	f7ff fc81 	bl	8000f00 <HAL_GetTick>
 80015fe:	1b80      	subs	r0, r0, r6
 8001600:	2802      	cmp	r0, #2
 8001602:	d9f5      	bls.n	80015f0 <HAL_RCC_OscConfig+0x2a4>
 8001604:	e733      	b.n	800146e <HAL_RCC_OscConfig+0x122>
 8001606:	bf00      	nop
 8001608:	40021000 	.word	0x40021000
 800160c:	08006451 	.word	0x08006451
 8001610:	20000000 	.word	0x20000000
    if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 8001614:	4c79      	ldr	r4, [pc, #484]	; (80017fc <HAL_RCC_OscConfig+0x4b0>)
 8001616:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001618:	00d9      	lsls	r1, r3, #3
 800161a:	d427      	bmi.n	800166c <HAL_RCC_OscConfig+0x320>
      __HAL_RCC_PWR_CLK_ENABLE();
 800161c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800161e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001622:	65a3      	str	r3, [r4, #88]	; 0x58
 8001624:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001626:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800162a:	9301      	str	r3, [sp, #4]
 800162c:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800162e:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8001630:	4e73      	ldr	r6, [pc, #460]	; (8001800 <HAL_RCC_OscConfig+0x4b4>)
 8001632:	6833      	ldr	r3, [r6, #0]
 8001634:	05da      	lsls	r2, r3, #23
 8001636:	d51b      	bpl.n	8001670 <HAL_RCC_OscConfig+0x324>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001638:	68ab      	ldr	r3, [r5, #8]
 800163a:	2b01      	cmp	r3, #1
 800163c:	d129      	bne.n	8001692 <HAL_RCC_OscConfig+0x346>
 800163e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8001642:	f043 0301 	orr.w	r3, r3, #1
 8001646:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
      tickstart = HAL_GetTick();
 800164a:	f7ff fc59 	bl	8000f00 <HAL_GetTick>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800164e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8001652:	4606      	mov	r6, r0
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == RESET)
 8001654:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8001658:	0798      	lsls	r0, r3, #30
 800165a:	d540      	bpl.n	80016de <HAL_RCC_OscConfig+0x392>
    if(pwrclkchanged == SET)
 800165c:	2f00      	cmp	r7, #0
 800165e:	f43f aec4 	beq.w	80013ea <HAL_RCC_OscConfig+0x9e>
      __HAL_RCC_PWR_CLK_DISABLE();
 8001662:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001664:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001668:	65a3      	str	r3, [r4, #88]	; 0x58
 800166a:	e6be      	b.n	80013ea <HAL_RCC_OscConfig+0x9e>
    FlagStatus       pwrclkchanged = RESET;
 800166c:	2700      	movs	r7, #0
 800166e:	e7df      	b.n	8001630 <HAL_RCC_OscConfig+0x2e4>
      SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8001670:	6833      	ldr	r3, [r6, #0]
 8001672:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001676:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8001678:	f7ff fc42 	bl	8000f00 <HAL_GetTick>
 800167c:	4680      	mov	r8, r0
      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800167e:	6833      	ldr	r3, [r6, #0]
 8001680:	05db      	lsls	r3, r3, #23
 8001682:	d4d9      	bmi.n	8001638 <HAL_RCC_OscConfig+0x2ec>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001684:	f7ff fc3c 	bl	8000f00 <HAL_GetTick>
 8001688:	eba0 0008 	sub.w	r0, r0, r8
 800168c:	2802      	cmp	r0, #2
 800168e:	d9f6      	bls.n	800167e <HAL_RCC_OscConfig+0x332>
 8001690:	e6ed      	b.n	800146e <HAL_RCC_OscConfig+0x122>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001692:	2b05      	cmp	r3, #5
 8001694:	d106      	bne.n	80016a4 <HAL_RCC_OscConfig+0x358>
 8001696:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800169a:	f043 0304 	orr.w	r3, r3, #4
 800169e:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 80016a2:	e7cc      	b.n	800163e <HAL_RCC_OscConfig+0x2f2>
 80016a4:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 80016a8:	f022 0201 	bic.w	r2, r2, #1
 80016ac:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
 80016b0:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 80016b4:	f022 0204 	bic.w	r2, r2, #4
 80016b8:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 80016bc:	2b00      	cmp	r3, #0
 80016be:	d1c4      	bne.n	800164a <HAL_RCC_OscConfig+0x2fe>
      tickstart = HAL_GetTick();
 80016c0:	f7ff fc1e 	bl	8000f00 <HAL_GetTick>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80016c4:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80016c8:	4606      	mov	r6, r0
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != RESET)
 80016ca:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80016ce:	0799      	lsls	r1, r3, #30
 80016d0:	d5c4      	bpl.n	800165c <HAL_RCC_OscConfig+0x310>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80016d2:	f7ff fc15 	bl	8000f00 <HAL_GetTick>
 80016d6:	1b80      	subs	r0, r0, r6
 80016d8:	4540      	cmp	r0, r8
 80016da:	d9f6      	bls.n	80016ca <HAL_RCC_OscConfig+0x37e>
 80016dc:	e6c7      	b.n	800146e <HAL_RCC_OscConfig+0x122>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80016de:	f7ff fc0f 	bl	8000f00 <HAL_GetTick>
 80016e2:	1b80      	subs	r0, r0, r6
 80016e4:	4540      	cmp	r0, r8
 80016e6:	d9b5      	bls.n	8001654 <HAL_RCC_OscConfig+0x308>
 80016e8:	e6c1      	b.n	800146e <HAL_RCC_OscConfig+0x122>
    if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 80016ea:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80016ec:	4c43      	ldr	r4, [pc, #268]	; (80017fc <HAL_RCC_OscConfig+0x4b0>)
 80016ee:	b19b      	cbz	r3, 8001718 <HAL_RCC_OscConfig+0x3cc>
      __HAL_RCC_HSI48_ENABLE();
 80016f0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 80016f4:	f043 0301 	orr.w	r3, r3, #1
 80016f8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
      tickstart = HAL_GetTick();
 80016fc:	f7ff fc00 	bl	8000f00 <HAL_GetTick>
 8001700:	4606      	mov	r6, r0
      while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == RESET)
 8001702:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8001706:	079b      	lsls	r3, r3, #30
 8001708:	f53f ae73 	bmi.w	80013f2 <HAL_RCC_OscConfig+0xa6>
        if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 800170c:	f7ff fbf8 	bl	8000f00 <HAL_GetTick>
 8001710:	1b80      	subs	r0, r0, r6
 8001712:	2802      	cmp	r0, #2
 8001714:	d9f5      	bls.n	8001702 <HAL_RCC_OscConfig+0x3b6>
 8001716:	e6aa      	b.n	800146e <HAL_RCC_OscConfig+0x122>
      __HAL_RCC_HSI48_DISABLE();
 8001718:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800171c:	f023 0301 	bic.w	r3, r3, #1
 8001720:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
      tickstart = HAL_GetTick();
 8001724:	f7ff fbec 	bl	8000f00 <HAL_GetTick>
 8001728:	4606      	mov	r6, r0
      while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != RESET)
 800172a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800172e:	079f      	lsls	r7, r3, #30
 8001730:	f57f ae5f 	bpl.w	80013f2 <HAL_RCC_OscConfig+0xa6>
        if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8001734:	f7ff fbe4 	bl	8000f00 <HAL_GetTick>
 8001738:	1b80      	subs	r0, r0, r6
 800173a:	2802      	cmp	r0, #2
 800173c:	d9f5      	bls.n	800172a <HAL_RCC_OscConfig+0x3de>
 800173e:	e696      	b.n	800146e <HAL_RCC_OscConfig+0x122>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8001740:	4c2e      	ldr	r4, [pc, #184]	; (80017fc <HAL_RCC_OscConfig+0x4b0>)
 8001742:	68a3      	ldr	r3, [r4, #8]
 8001744:	f003 030c 	and.w	r3, r3, #12
 8001748:	2b0c      	cmp	r3, #12
 800174a:	f43f ae0f 	beq.w	800136c <HAL_RCC_OscConfig+0x20>
        __HAL_RCC_PLL_DISABLE();
 800174e:	6823      	ldr	r3, [r4, #0]
      if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 8001750:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
 8001752:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8001756:	6023      	str	r3, [r4, #0]
      if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 8001758:	d136      	bne.n	80017c8 <HAL_RCC_OscConfig+0x47c>
        tickstart = HAL_GetTick();
 800175a:	f7ff fbd1 	bl	8000f00 <HAL_GetTick>
 800175e:	4606      	mov	r6, r0
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 8001760:	6823      	ldr	r3, [r4, #0]
 8001762:	0198      	lsls	r0, r3, #6
 8001764:	d42a      	bmi.n	80017bc <HAL_RCC_OscConfig+0x470>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001766:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8001768:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 800176a:	06db      	lsls	r3, r3, #27
 800176c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001770:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8001772:	4313      	orrs	r3, r2
 8001774:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 8001776:	3a01      	subs	r2, #1
 8001778:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800177c:	6bea      	ldr	r2, [r5, #60]	; 0x3c
 800177e:	0852      	lsrs	r2, r2, #1
 8001780:	3a01      	subs	r2, #1
 8001782:	ea43 5342 	orr.w	r3, r3, r2, lsl #21
 8001786:	6c2a      	ldr	r2, [r5, #64]	; 0x40
 8001788:	0852      	lsrs	r2, r2, #1
 800178a:	3a01      	subs	r2, #1
 800178c:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 8001790:	60e3      	str	r3, [r4, #12]
        __HAL_RCC_PLL_ENABLE();
 8001792:	6823      	ldr	r3, [r4, #0]
 8001794:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001798:	6023      	str	r3, [r4, #0]
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 800179a:	68e3      	ldr	r3, [r4, #12]
 800179c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80017a0:	60e3      	str	r3, [r4, #12]
        tickstart = HAL_GetTick();
 80017a2:	f7ff fbad 	bl	8000f00 <HAL_GetTick>
 80017a6:	4605      	mov	r5, r0
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == RESET)
 80017a8:	6823      	ldr	r3, [r4, #0]
 80017aa:	0199      	lsls	r1, r3, #6
 80017ac:	f53f ae25 	bmi.w	80013fa <HAL_RCC_OscConfig+0xae>
          if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80017b0:	f7ff fba6 	bl	8000f00 <HAL_GetTick>
 80017b4:	1b40      	subs	r0, r0, r5
 80017b6:	2802      	cmp	r0, #2
 80017b8:	d9f6      	bls.n	80017a8 <HAL_RCC_OscConfig+0x45c>
 80017ba:	e658      	b.n	800146e <HAL_RCC_OscConfig+0x122>
          if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80017bc:	f7ff fba0 	bl	8000f00 <HAL_GetTick>
 80017c0:	1b80      	subs	r0, r0, r6
 80017c2:	2802      	cmp	r0, #2
 80017c4:	d9cc      	bls.n	8001760 <HAL_RCC_OscConfig+0x414>
 80017c6:	e652      	b.n	800146e <HAL_RCC_OscConfig+0x122>
        if((READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == RESET)
 80017c8:	6823      	ldr	r3, [r4, #0]
 80017ca:	011a      	lsls	r2, r3, #4
          MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 80017cc:	bf5e      	ittt	pl
 80017ce:	68e3      	ldrpl	r3, [r4, #12]
 80017d0:	f023 0303 	bicpl.w	r3, r3, #3
 80017d4:	60e3      	strpl	r3, [r4, #12]
        __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI2CLK);
 80017d6:	68e3      	ldr	r3, [r4, #12]
 80017d8:	f023 7388 	bic.w	r3, r3, #17825792	; 0x1100000
 80017dc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80017e0:	60e3      	str	r3, [r4, #12]
        tickstart = HAL_GetTick();
 80017e2:	f7ff fb8d 	bl	8000f00 <HAL_GetTick>
 80017e6:	4605      	mov	r5, r0
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 80017e8:	6823      	ldr	r3, [r4, #0]
 80017ea:	019b      	lsls	r3, r3, #6
 80017ec:	f57f ae05 	bpl.w	80013fa <HAL_RCC_OscConfig+0xae>
          if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80017f0:	f7ff fb86 	bl	8000f00 <HAL_GetTick>
 80017f4:	1b40      	subs	r0, r0, r5
 80017f6:	2802      	cmp	r0, #2
 80017f8:	d9f6      	bls.n	80017e8 <HAL_RCC_OscConfig+0x49c>
 80017fa:	e638      	b.n	800146e <HAL_RCC_OscConfig+0x122>
 80017fc:	40021000 	.word	0x40021000
 8001800:	40007000 	.word	0x40007000

08001804 <HAL_RCC_ClockConfig>:
  if(FLatency > READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY))
 8001804:	4a56      	ldr	r2, [pc, #344]	; (8001960 <HAL_RCC_ClockConfig+0x15c>)
 8001806:	6813      	ldr	r3, [r2, #0]
 8001808:	f003 0307 	and.w	r3, r3, #7
 800180c:	428b      	cmp	r3, r1
{
 800180e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001812:	4605      	mov	r5, r0
 8001814:	460e      	mov	r6, r1
  if(FLatency > READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY))
 8001816:	d32b      	bcc.n	8001870 <HAL_RCC_ClockConfig+0x6c>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001818:	682b      	ldr	r3, [r5, #0]
 800181a:	07d9      	lsls	r1, r3, #31
 800181c:	d435      	bmi.n	800188a <HAL_RCC_ClockConfig+0x86>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800181e:	6829      	ldr	r1, [r5, #0]
 8001820:	078a      	lsls	r2, r1, #30
 8001822:	f100 8083 	bmi.w	800192c <HAL_RCC_ClockConfig+0x128>
  if(FLatency < READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY))
 8001826:	4a4e      	ldr	r2, [pc, #312]	; (8001960 <HAL_RCC_ClockConfig+0x15c>)
 8001828:	6813      	ldr	r3, [r2, #0]
 800182a:	f003 0307 	and.w	r3, r3, #7
 800182e:	429e      	cmp	r6, r3
 8001830:	f0c0 8084 	bcc.w	800193c <HAL_RCC_ClockConfig+0x138>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001834:	f011 0f04 	tst.w	r1, #4
 8001838:	4c4a      	ldr	r4, [pc, #296]	; (8001964 <HAL_RCC_ClockConfig+0x160>)
 800183a:	f040 808a 	bne.w	8001952 <HAL_RCC_ClockConfig+0x14e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800183e:	070b      	lsls	r3, r1, #28
 8001840:	d506      	bpl.n	8001850 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8001842:	68a3      	ldr	r3, [r4, #8]
 8001844:	692a      	ldr	r2, [r5, #16]
 8001846:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 800184a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800184e:	60a3      	str	r3, [r4, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001850:	f7ff fd14 	bl	800127c <HAL_RCC_GetSysClockFreq>
 8001854:	68a3      	ldr	r3, [r4, #8]
 8001856:	4a44      	ldr	r2, [pc, #272]	; (8001968 <HAL_RCC_ClockConfig+0x164>)
 8001858:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800185c:	5cd3      	ldrb	r3, [r2, r3]
 800185e:	40d8      	lsrs	r0, r3
 8001860:	4b42      	ldr	r3, [pc, #264]	; (800196c <HAL_RCC_ClockConfig+0x168>)
 8001862:	6018      	str	r0, [r3, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 8001864:	2000      	movs	r0, #0
 8001866:	f7ff fb23 	bl	8000eb0 <HAL_InitTick>
  return HAL_OK;
 800186a:	2000      	movs	r0, #0
}
 800186c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001870:	6813      	ldr	r3, [r2, #0]
 8001872:	f023 0307 	bic.w	r3, r3, #7
 8001876:	430b      	orrs	r3, r1
 8001878:	6013      	str	r3, [r2, #0]
    if(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY) != FLatency)
 800187a:	6813      	ldr	r3, [r2, #0]
 800187c:	f003 0307 	and.w	r3, r3, #7
 8001880:	4299      	cmp	r1, r3
 8001882:	d0c9      	beq.n	8001818 <HAL_RCC_ClockConfig+0x14>
      return HAL_ERROR;
 8001884:	2001      	movs	r0, #1
 8001886:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800188a:	686a      	ldr	r2, [r5, #4]
 800188c:	4c35      	ldr	r4, [pc, #212]	; (8001964 <HAL_RCC_ClockConfig+0x160>)
 800188e:	2a03      	cmp	r2, #3
      if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == RESET)
 8001890:	6823      	ldr	r3, [r4, #0]
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001892:	d11c      	bne.n	80018ce <HAL_RCC_ClockConfig+0xca>
      if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == RESET)
 8001894:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
        if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
 8001898:	d0f4      	beq.n	8001884 <HAL_RCC_ClockConfig+0x80>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 800189a:	68a3      	ldr	r3, [r4, #8]
 800189c:	f023 0303 	bic.w	r3, r3, #3
 80018a0:	4313      	orrs	r3, r2
 80018a2:	60a3      	str	r3, [r4, #8]
    tickstart = HAL_GetTick();
 80018a4:	f7ff fb2c 	bl	8000f00 <HAL_GetTick>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80018a8:	686b      	ldr	r3, [r5, #4]
 80018aa:	2b03      	cmp	r3, #3
    tickstart = HAL_GetTick();
 80018ac:	4607      	mov	r7, r0
        if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80018ae:	f241 3888 	movw	r8, #5000	; 0x1388
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80018b2:	d118      	bne.n	80018e6 <HAL_RCC_ClockConfig+0xe2>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80018b4:	68a3      	ldr	r3, [r4, #8]
 80018b6:	f003 030c 	and.w	r3, r3, #12
 80018ba:	2b0c      	cmp	r3, #12
 80018bc:	d0af      	beq.n	800181e <HAL_RCC_ClockConfig+0x1a>
        if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80018be:	f7ff fb1f 	bl	8000f00 <HAL_GetTick>
 80018c2:	1bc0      	subs	r0, r0, r7
 80018c4:	4540      	cmp	r0, r8
 80018c6:	d9f5      	bls.n	80018b4 <HAL_RCC_ClockConfig+0xb0>
          return HAL_TIMEOUT;
 80018c8:	2003      	movs	r0, #3
 80018ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80018ce:	2a02      	cmp	r2, #2
 80018d0:	d102      	bne.n	80018d8 <HAL_RCC_ClockConfig+0xd4>
        if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == RESET)
 80018d2:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80018d6:	e7df      	b.n	8001898 <HAL_RCC_ClockConfig+0x94>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 80018d8:	b912      	cbnz	r2, 80018e0 <HAL_RCC_ClockConfig+0xdc>
        if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == RESET)
 80018da:	f013 0f02 	tst.w	r3, #2
 80018de:	e7db      	b.n	8001898 <HAL_RCC_ClockConfig+0x94>
        if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
 80018e0:	f413 6f80 	tst.w	r3, #1024	; 0x400
 80018e4:	e7d8      	b.n	8001898 <HAL_RCC_ClockConfig+0x94>
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80018e6:	2b02      	cmp	r3, #2
 80018e8:	d10a      	bne.n	8001900 <HAL_RCC_ClockConfig+0xfc>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSE)
 80018ea:	68a3      	ldr	r3, [r4, #8]
 80018ec:	f003 030c 	and.w	r3, r3, #12
 80018f0:	2b08      	cmp	r3, #8
 80018f2:	d094      	beq.n	800181e <HAL_RCC_ClockConfig+0x1a>
          if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80018f4:	f7ff fb04 	bl	8000f00 <HAL_GetTick>
 80018f8:	1bc0      	subs	r0, r0, r7
 80018fa:	4540      	cmp	r0, r8
 80018fc:	d9f5      	bls.n	80018ea <HAL_RCC_ClockConfig+0xe6>
 80018fe:	e7e3      	b.n	80018c8 <HAL_RCC_ClockConfig+0xc4>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8001900:	b973      	cbnz	r3, 8001920 <HAL_RCC_ClockConfig+0x11c>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_MSI)
 8001902:	68a3      	ldr	r3, [r4, #8]
 8001904:	f013 0f0c 	tst.w	r3, #12
 8001908:	d089      	beq.n	800181e <HAL_RCC_ClockConfig+0x1a>
          if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800190a:	f7ff faf9 	bl	8000f00 <HAL_GetTick>
 800190e:	1bc0      	subs	r0, r0, r7
 8001910:	4540      	cmp	r0, r8
 8001912:	d9f6      	bls.n	8001902 <HAL_RCC_ClockConfig+0xfe>
 8001914:	e7d8      	b.n	80018c8 <HAL_RCC_ClockConfig+0xc4>
          if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001916:	f7ff faf3 	bl	8000f00 <HAL_GetTick>
 800191a:	1bc0      	subs	r0, r0, r7
 800191c:	4540      	cmp	r0, r8
 800191e:	d8d3      	bhi.n	80018c8 <HAL_RCC_ClockConfig+0xc4>
        while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSI)
 8001920:	68a3      	ldr	r3, [r4, #8]
 8001922:	f003 030c 	and.w	r3, r3, #12
 8001926:	2b04      	cmp	r3, #4
 8001928:	d1f5      	bne.n	8001916 <HAL_RCC_ClockConfig+0x112>
 800192a:	e778      	b.n	800181e <HAL_RCC_ClockConfig+0x1a>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800192c:	4a0d      	ldr	r2, [pc, #52]	; (8001964 <HAL_RCC_ClockConfig+0x160>)
 800192e:	68a8      	ldr	r0, [r5, #8]
 8001930:	6893      	ldr	r3, [r2, #8]
 8001932:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001936:	4303      	orrs	r3, r0
 8001938:	6093      	str	r3, [r2, #8]
 800193a:	e774      	b.n	8001826 <HAL_RCC_ClockConfig+0x22>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800193c:	6813      	ldr	r3, [r2, #0]
 800193e:	f023 0307 	bic.w	r3, r3, #7
 8001942:	4333      	orrs	r3, r6
 8001944:	6013      	str	r3, [r2, #0]
    if(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY) != FLatency)
 8001946:	6813      	ldr	r3, [r2, #0]
 8001948:	f003 0307 	and.w	r3, r3, #7
 800194c:	429e      	cmp	r6, r3
 800194e:	d199      	bne.n	8001884 <HAL_RCC_ClockConfig+0x80>
 8001950:	e770      	b.n	8001834 <HAL_RCC_ClockConfig+0x30>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001952:	68a3      	ldr	r3, [r4, #8]
 8001954:	68ea      	ldr	r2, [r5, #12]
 8001956:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800195a:	4313      	orrs	r3, r2
 800195c:	60a3      	str	r3, [r4, #8]
 800195e:	e76e      	b.n	800183e <HAL_RCC_ClockConfig+0x3a>
 8001960:	40022000 	.word	0x40022000
 8001964:	40021000 	.word	0x40021000
 8001968:	08006451 	.word	0x08006451
 800196c:	20000000 	.word	0x20000000

08001970 <HAL_RCC_GetHCLKFreq>:
}
 8001970:	4b01      	ldr	r3, [pc, #4]	; (8001978 <HAL_RCC_GetHCLKFreq+0x8>)
 8001972:	6818      	ldr	r0, [r3, #0]
 8001974:	4770      	bx	lr
 8001976:	bf00      	nop
 8001978:	20000000 	.word	0x20000000

0800197c <HAL_RCC_GetPCLK1Freq>:
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 800197c:	4b04      	ldr	r3, [pc, #16]	; (8001990 <HAL_RCC_GetPCLK1Freq+0x14>)
 800197e:	4a05      	ldr	r2, [pc, #20]	; (8001994 <HAL_RCC_GetPCLK1Freq+0x18>)
 8001980:	689b      	ldr	r3, [r3, #8]
 8001982:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8001986:	5cd3      	ldrb	r3, [r2, r3]
 8001988:	4a03      	ldr	r2, [pc, #12]	; (8001998 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800198a:	6810      	ldr	r0, [r2, #0]
}
 800198c:	40d8      	lsrs	r0, r3
 800198e:	4770      	bx	lr
 8001990:	40021000 	.word	0x40021000
 8001994:	08006461 	.word	0x08006461
 8001998:	20000000 	.word	0x20000000

0800199c <HAL_RCC_GetPCLK2Freq>:
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 800199c:	4b04      	ldr	r3, [pc, #16]	; (80019b0 <HAL_RCC_GetPCLK2Freq+0x14>)
 800199e:	4a05      	ldr	r2, [pc, #20]	; (80019b4 <HAL_RCC_GetPCLK2Freq+0x18>)
 80019a0:	689b      	ldr	r3, [r3, #8]
 80019a2:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 80019a6:	5cd3      	ldrb	r3, [r2, r3]
 80019a8:	4a03      	ldr	r2, [pc, #12]	; (80019b8 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80019aa:	6810      	ldr	r0, [r2, #0]
}
 80019ac:	40d8      	lsrs	r0, r3
 80019ae:	4770      	bx	lr
 80019b0:	40021000 	.word	0x40021000
 80019b4:	08006461 	.word	0x08006461
 80019b8:	20000000 	.word	0x20000000

080019bc <RCCEx_PLLSAI1_Config>:
  * @note   PLLSAI1 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI1_Config(RCC_PLLSAI1InitTypeDef *PllSai1, uint32_t Divider)
{
 80019bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLLSAI1M_VALUE(PllSai1->PLLSAI1M));
  assert_param(IS_RCC_PLLSAI1N_VALUE(PllSai1->PLLSAI1N));
  assert_param(IS_RCC_PLLSAI1CLOCKOUT_VALUE(PllSai1->PLLSAI1ClockOut));

  /* Check that PLLSAI1 clock source and divider M can be applied */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 80019be:	4b44      	ldr	r3, [pc, #272]	; (8001ad0 <RCCEx_PLLSAI1_Config+0x114>)
 80019c0:	68da      	ldr	r2, [r3, #12]
 80019c2:	f012 0f03 	tst.w	r2, #3
{
 80019c6:	4605      	mov	r5, r0
 80019c8:	460e      	mov	r6, r1
 80019ca:	461c      	mov	r4, r3
 80019cc:	6800      	ldr	r0, [r0, #0]
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 80019ce:	d039      	beq.n	8001a44 <RCCEx_PLLSAI1_Config+0x88>
  {
    /* PLL clock source and divider M already set, check that no request for change  */
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai1->PLLSAI1Source)
 80019d0:	68da      	ldr	r2, [r3, #12]
 80019d2:	f002 0203 	and.w	r2, r2, #3
 80019d6:	4282      	cmp	r2, r0
 80019d8:	d14b      	bne.n	8001a72 <RCCEx_PLLSAI1_Config+0xb6>
       ||
 80019da:	2a00      	cmp	r2, #0
 80019dc:	d049      	beq.n	8001a72 <RCCEx_PLLSAI1_Config+0xb6>
       (PllSai1->PLLSAI1Source == RCC_PLLSOURCE_NONE)
#if !defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
       ||
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSAI1M)
 80019de:	68db      	ldr	r3, [r3, #12]
       ||
 80019e0:	686a      	ldr	r2, [r5, #4]
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSAI1M)
 80019e2:	f3c3 1302 	ubfx	r3, r3, #4, #3
 80019e6:	3301      	adds	r3, #1
       ||
 80019e8:	4293      	cmp	r3, r2
 80019ea:	d142      	bne.n	8001a72 <RCCEx_PLLSAI1_Config+0xb6>
  }

  if(status == HAL_OK)
  {
    /* Disable the PLLSAI1 */
    __HAL_RCC_PLLSAI1_DISABLE();
 80019ec:	6823      	ldr	r3, [r4, #0]
 80019ee:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80019f2:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80019f4:	f7ff fa84 	bl	8000f00 <HAL_GetTick>
 80019f8:	4607      	mov	r7, r0

    /* Wait till PLLSAI1 is ready to be updated */
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != RESET)
 80019fa:	6823      	ldr	r3, [r4, #0]
 80019fc:	011a      	lsls	r2, r3, #4
 80019fe:	d441      	bmi.n	8001a84 <RCCEx_PLLSAI1_Config+0xc8>
 8001a00:	68af      	ldr	r7, [r5, #8]
      }
    }

    if(status == HAL_OK)
    {
      if(Divider == DIVIDER_P_UPDATE)
 8001a02:	2e00      	cmp	r6, #0
 8001a04:	d045      	beq.n	8001a92 <RCCEx_PLLSAI1_Config+0xd6>
                   ((PllSai1->PLLSAI1P >> 4U) << RCC_PLLSAI1CFGR_PLLSAI1P_Pos));
#endif /* RCC_PLLSAI1P_DIV_2_31_SUPPORT */

#endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
      }
      else if(Divider == DIVIDER_Q_UPDATE)
 8001a06:	2e01      	cmp	r6, #1
 8001a08:	d14f      	bne.n	8001aaa <RCCEx_PLLSAI1_Config+0xee>
                   (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
                   (((PllSai1->PLLSAI1Q >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1Q_Pos) |
                   ((PllSai1->PLLSAI1M - 1U) << RCC_PLLSAI1CFGR_PLLSAI1M_Pos));
#else
        /* Configure the PLLSAI1 Division factor Q and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8001a0a:	6922      	ldr	r2, [r4, #16]
 8001a0c:	6928      	ldr	r0, [r5, #16]
 8001a0e:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8001a12:	0840      	lsrs	r0, r0, #1
 8001a14:	f422 42fe 	bic.w	r2, r2, #32512	; 0x7f00
 8001a18:	3801      	subs	r0, #1
 8001a1a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 8001a1e:	ea42 5240 	orr.w	r2, r2, r0, lsl #21
 8001a22:	6122      	str	r2, [r4, #16]
                   (((PllSai1->PLLSAI1R >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1R_Pos));
#endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
      }

      /* Enable the PLLSAI1 again by setting PLLSAI1ON to 1*/
      __HAL_RCC_PLLSAI1_ENABLE();
 8001a24:	6823      	ldr	r3, [r4, #0]
 8001a26:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001a2a:	6023      	str	r3, [r4, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8001a2c:	f7ff fa68 	bl	8000f00 <HAL_GetTick>
 8001a30:	4606      	mov	r6, r0

      /* Wait till PLLSAI1 is ready */
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == RESET)
 8001a32:	6823      	ldr	r3, [r4, #0]
 8001a34:	011b      	lsls	r3, r3, #4
 8001a36:	d545      	bpl.n	8001ac4 <RCCEx_PLLSAI1_Config+0x108>
      }

      if(status == HAL_OK)
      {
        /* Configure the PLLSAI1 Clock output(s) */
        __HAL_RCC_PLLSAI1CLKOUT_ENABLE(PllSai1->PLLSAI1ClockOut);
 8001a38:	6923      	ldr	r3, [r4, #16]
 8001a3a:	69aa      	ldr	r2, [r5, #24]
 8001a3c:	4313      	orrs	r3, r2
 8001a3e:	6123      	str	r3, [r4, #16]
 8001a40:	2000      	movs	r0, #0
      }
    }
  }

  return status;
}
 8001a42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch(PllSai1->PLLSAI1Source)
 8001a44:	2802      	cmp	r0, #2
 8001a46:	d010      	beq.n	8001a6a <RCCEx_PLLSAI1_Config+0xae>
 8001a48:	2803      	cmp	r0, #3
 8001a4a:	d014      	beq.n	8001a76 <RCCEx_PLLSAI1_Config+0xba>
 8001a4c:	2801      	cmp	r0, #1
 8001a4e:	d110      	bne.n	8001a72 <RCCEx_PLLSAI1_Config+0xb6>
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	079f      	lsls	r7, r3, #30
 8001a54:	d5f5      	bpl.n	8001a42 <RCCEx_PLLSAI1_Config+0x86>
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai1->PLLSAI1Source | (PllSai1->PLLSAI1M - 1U) << RCC_PLLCFGR_PLLM_Pos);
 8001a56:	68e3      	ldr	r3, [r4, #12]
 8001a58:	686a      	ldr	r2, [r5, #4]
 8001a5a:	f023 0373 	bic.w	r3, r3, #115	; 0x73
 8001a5e:	3a01      	subs	r2, #1
 8001a60:	4318      	orrs	r0, r3
 8001a62:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8001a66:	60e0      	str	r0, [r4, #12]
 8001a68:	e7c0      	b.n	80019ec <RCCEx_PLLSAI1_Config+0x30>
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	f413 6f80 	tst.w	r3, #1024	; 0x400
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY) && HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 8001a70:	d1f1      	bne.n	8001a56 <RCCEx_PLLSAI1_Config+0x9a>
 8001a72:	2001      	movs	r0, #1
 8001a74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001a76:	681a      	ldr	r2, [r3, #0]
 8001a78:	0391      	lsls	r1, r2, #14
 8001a7a:	d4ec      	bmi.n	8001a56 <RCCEx_PLLSAI1_Config+0x9a>
 8001a7c:	681b      	ldr	r3, [r3, #0]
 8001a7e:	f413 2f80 	tst.w	r3, #262144	; 0x40000
 8001a82:	e7f5      	b.n	8001a70 <RCCEx_PLLSAI1_Config+0xb4>
      if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8001a84:	f7ff fa3c 	bl	8000f00 <HAL_GetTick>
 8001a88:	1bc0      	subs	r0, r0, r7
 8001a8a:	2802      	cmp	r0, #2
 8001a8c:	d9b5      	bls.n	80019fa <RCCEx_PLLSAI1_Config+0x3e>
        status = HAL_TIMEOUT;
 8001a8e:	2003      	movs	r0, #3
 8001a90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8001a92:	6922      	ldr	r2, [r4, #16]
 8001a94:	68e9      	ldr	r1, [r5, #12]
 8001a96:	f022 4278 	bic.w	r2, r2, #4160749568	; 0xf8000000
 8001a9a:	06c9      	lsls	r1, r1, #27
 8001a9c:	ea41 2307 	orr.w	r3, r1, r7, lsl #8
 8001aa0:	f422 42fe 	bic.w	r2, r2, #32512	; 0x7f00
 8001aa4:	4313      	orrs	r3, r2
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8001aa6:	6123      	str	r3, [r4, #16]
 8001aa8:	e7bc      	b.n	8001a24 <RCCEx_PLLSAI1_Config+0x68>
 8001aaa:	6923      	ldr	r3, [r4, #16]
 8001aac:	6968      	ldr	r0, [r5, #20]
 8001aae:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8001ab2:	0840      	lsrs	r0, r0, #1
 8001ab4:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001ab8:	3801      	subs	r0, #1
 8001aba:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 8001abe:	ea43 6340 	orr.w	r3, r3, r0, lsl #25
 8001ac2:	e7f0      	b.n	8001aa6 <RCCEx_PLLSAI1_Config+0xea>
        if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8001ac4:	f7ff fa1c 	bl	8000f00 <HAL_GetTick>
 8001ac8:	1b80      	subs	r0, r0, r6
 8001aca:	2802      	cmp	r0, #2
 8001acc:	d9b1      	bls.n	8001a32 <RCCEx_PLLSAI1_Config+0x76>
 8001ace:	e7de      	b.n	8001a8e <RCCEx_PLLSAI1_Config+0xd2>
 8001ad0:	40021000 	.word	0x40021000

08001ad4 <HAL_RCCEx_PeriphCLKConfig>:
{
 8001ad4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8001ad8:	6805      	ldr	r5, [r0, #0]
 8001ada:	f415 6500 	ands.w	r5, r5, #2048	; 0x800
{
 8001ade:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8001ae0:	d00e      	beq.n	8001b00 <HAL_RCCEx_PeriphCLKConfig+0x2c>
    switch(PeriphClkInit->Sai1ClockSelection)
 8001ae2:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
 8001ae4:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8001ae8:	d05b      	beq.n	8001ba2 <HAL_RCCEx_PeriphCLKConfig+0xce>
 8001aea:	f5b1 0f40 	cmp.w	r1, #12582912	; 0xc00000
 8001aee:	d05d      	beq.n	8001bac <HAL_RCCEx_PeriphCLKConfig+0xd8>
 8001af0:	2900      	cmp	r1, #0
 8001af2:	d166      	bne.n	8001bc2 <HAL_RCCEx_PeriphCLKConfig+0xee>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 8001af4:	3004      	adds	r0, #4
 8001af6:	f7ff ff61 	bl	80019bc <RCCEx_PLLSAI1_Config>
    if(ret == HAL_OK)
 8001afa:	4605      	mov	r5, r0
 8001afc:	2800      	cmp	r0, #0
 8001afe:	d055      	beq.n	8001bac <HAL_RCCEx_PeriphCLKConfig+0xd8>
  if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8001b00:	6823      	ldr	r3, [r4, #0]
 8001b02:	039e      	lsls	r6, r3, #14
 8001b04:	d56d      	bpl.n	8001be2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8001b06:	4e92      	ldr	r6, [pc, #584]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001b08:	6db3      	ldr	r3, [r6, #88]	; 0x58
 8001b0a:	00d8      	lsls	r0, r3, #3
 8001b0c:	d45b      	bmi.n	8001bc6 <HAL_RCCEx_PeriphCLKConfig+0xf2>
      __HAL_RCC_PWR_CLK_ENABLE();
 8001b0e:	6db3      	ldr	r3, [r6, #88]	; 0x58
 8001b10:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001b14:	65b3      	str	r3, [r6, #88]	; 0x58
 8001b16:	6db3      	ldr	r3, [r6, #88]	; 0x58
 8001b18:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b1c:	9301      	str	r3, [sp, #4]
 8001b1e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8001b20:	2701      	movs	r7, #1
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8001b22:	f8df 8230 	ldr.w	r8, [pc, #560]	; 8001d54 <HAL_RCCEx_PeriphCLKConfig+0x280>
 8001b26:	f8d8 3000 	ldr.w	r3, [r8]
 8001b2a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001b2e:	f8c8 3000 	str.w	r3, [r8]
    tickstart = HAL_GetTick();
 8001b32:	f7ff f9e5 	bl	8000f00 <HAL_GetTick>
 8001b36:	4681      	mov	r9, r0
    while(READ_BIT(PWR->CR1, PWR_CR1_DBP) == RESET)
 8001b38:	f8d8 3000 	ldr.w	r3, [r8]
 8001b3c:	05d9      	lsls	r1, r3, #23
 8001b3e:	d544      	bpl.n	8001bca <HAL_RCCEx_PeriphCLKConfig+0xf6>
    if(ret == HAL_OK)
 8001b40:	2d00      	cmp	r5, #0
 8001b42:	d149      	bne.n	8001bd8 <HAL_RCCEx_PeriphCLKConfig+0x104>
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8001b44:	f8d6 3090 	ldr.w	r3, [r6, #144]	; 0x90
      if((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 8001b48:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8001b4c:	d014      	beq.n	8001b78 <HAL_RCCEx_PeriphCLKConfig+0xa4>
 8001b4e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001b50:	4293      	cmp	r3, r2
 8001b52:	d011      	beq.n	8001b78 <HAL_RCCEx_PeriphCLKConfig+0xa4>
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8001b54:	f8d6 3090 	ldr.w	r3, [r6, #144]	; 0x90
        __HAL_RCC_BACKUPRESET_FORCE();
 8001b58:	f8d6 2090 	ldr.w	r2, [r6, #144]	; 0x90
 8001b5c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001b60:	f8c6 2090 	str.w	r2, [r6, #144]	; 0x90
        __HAL_RCC_BACKUPRESET_RELEASE();
 8001b64:	f8d6 2090 	ldr.w	r2, [r6, #144]	; 0x90
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8001b68:	f423 7340 	bic.w	r3, r3, #768	; 0x300
        __HAL_RCC_BACKUPRESET_RELEASE();
 8001b6c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001b70:	f8c6 2090 	str.w	r2, [r6, #144]	; 0x90
        RCC->BDCR = tmpregister;
 8001b74:	f8c6 3090 	str.w	r3, [r6, #144]	; 0x90
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 8001b78:	07da      	lsls	r2, r3, #31
 8001b7a:	d509      	bpl.n	8001b90 <HAL_RCCEx_PeriphCLKConfig+0xbc>
        tickstart = HAL_GetTick();
 8001b7c:	f7ff f9c0 	bl	8000f00 <HAL_GetTick>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001b80:	f241 3988 	movw	r9, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8001b84:	4680      	mov	r8, r0
        while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == RESET)
 8001b86:	f8d6 3090 	ldr.w	r3, [r6, #144]	; 0x90
 8001b8a:	079b      	lsls	r3, r3, #30
 8001b8c:	f140 80c2 	bpl.w	8001d14 <HAL_RCCEx_PeriphCLKConfig+0x240>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8001b90:	f8d6 3090 	ldr.w	r3, [r6, #144]	; 0x90
 8001b94:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001b96:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8001b9a:	4313      	orrs	r3, r2
 8001b9c:	f8c6 3090 	str.w	r3, [r6, #144]	; 0x90
 8001ba0:	e01a      	b.n	8001bd8 <HAL_RCCEx_PeriphCLKConfig+0x104>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI2CLK);
 8001ba2:	4a6b      	ldr	r2, [pc, #428]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001ba4:	68d3      	ldr	r3, [r2, #12]
 8001ba6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001baa:	60d3      	str	r3, [r2, #12]
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8001bac:	4a68      	ldr	r2, [pc, #416]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001bae:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8001bb0:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001bb4:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8001bb8:	430b      	orrs	r3, r1
 8001bba:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001bbe:	2500      	movs	r5, #0
 8001bc0:	e79e      	b.n	8001b00 <HAL_RCCEx_PeriphCLKConfig+0x2c>
      ret = HAL_ERROR;
 8001bc2:	2501      	movs	r5, #1
 8001bc4:	e79c      	b.n	8001b00 <HAL_RCCEx_PeriphCLKConfig+0x2c>
    FlagStatus       pwrclkchanged = RESET;
 8001bc6:	2700      	movs	r7, #0
 8001bc8:	e7ab      	b.n	8001b22 <HAL_RCCEx_PeriphCLKConfig+0x4e>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001bca:	f7ff f999 	bl	8000f00 <HAL_GetTick>
 8001bce:	eba0 0009 	sub.w	r0, r0, r9
 8001bd2:	2802      	cmp	r0, #2
 8001bd4:	d9b0      	bls.n	8001b38 <HAL_RCCEx_PeriphCLKConfig+0x64>
        ret = HAL_TIMEOUT;
 8001bd6:	2503      	movs	r5, #3
    if(pwrclkchanged == SET)
 8001bd8:	b11f      	cbz	r7, 8001be2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      __HAL_RCC_PWR_CLK_DISABLE();
 8001bda:	6db3      	ldr	r3, [r6, #88]	; 0x58
 8001bdc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001be0:	65b3      	str	r3, [r6, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8001be2:	6823      	ldr	r3, [r4, #0]
 8001be4:	07df      	lsls	r7, r3, #31
 8001be6:	d508      	bpl.n	8001bfa <HAL_RCCEx_PeriphCLKConfig+0x126>
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8001be8:	4959      	ldr	r1, [pc, #356]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001bea:	6a20      	ldr	r0, [r4, #32]
 8001bec:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001bf0:	f022 0203 	bic.w	r2, r2, #3
 8001bf4:	4302      	orrs	r2, r0
 8001bf6:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8001bfa:	079e      	lsls	r6, r3, #30
 8001bfc:	d508      	bpl.n	8001c10 <HAL_RCCEx_PeriphCLKConfig+0x13c>
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8001bfe:	4954      	ldr	r1, [pc, #336]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001c00:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001c02:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001c06:	f022 020c 	bic.w	r2, r2, #12
 8001c0a:	4302      	orrs	r2, r0
 8001c0c:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8001c10:	0698      	lsls	r0, r3, #26
 8001c12:	d508      	bpl.n	8001c26 <HAL_RCCEx_PeriphCLKConfig+0x152>
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8001c14:	494e      	ldr	r1, [pc, #312]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001c16:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8001c18:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001c1c:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8001c20:	4302      	orrs	r2, r0
 8001c22:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 8001c26:	0599      	lsls	r1, r3, #22
 8001c28:	d508      	bpl.n	8001c3c <HAL_RCCEx_PeriphCLKConfig+0x168>
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8001c2a:	4949      	ldr	r1, [pc, #292]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001c2c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001c2e:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001c32:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8001c36:	4302      	orrs	r2, r0
 8001c38:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 8001c3c:	055a      	lsls	r2, r3, #21
 8001c3e:	d508      	bpl.n	8001c52 <HAL_RCCEx_PeriphCLKConfig+0x17e>
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 8001c40:	4943      	ldr	r1, [pc, #268]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001c42:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001c44:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001c48:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8001c4c:	4302      	orrs	r2, r0
 8001c4e:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8001c52:	065f      	lsls	r7, r3, #25
 8001c54:	d508      	bpl.n	8001c68 <HAL_RCCEx_PeriphCLKConfig+0x194>
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8001c56:	493e      	ldr	r1, [pc, #248]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001c58:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8001c5a:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001c5e:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8001c62:	4302      	orrs	r2, r0
 8001c64:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8001c68:	05de      	lsls	r6, r3, #23
 8001c6a:	d508      	bpl.n	8001c7e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8001c6c:	4938      	ldr	r1, [pc, #224]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001c6e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001c70:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001c74:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8001c78:	4302      	orrs	r2, r0
 8001c7a:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 8001c7e:	0498      	lsls	r0, r3, #18
 8001c80:	d50f      	bpl.n	8001ca2 <HAL_RCCEx_PeriphCLKConfig+0x1ce>
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8001c82:	4a33      	ldr	r2, [pc, #204]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001c84:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8001c86:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001c8a:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8001c8e:	430b      	orrs	r3, r1
    if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 8001c90:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8001c94:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
    if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 8001c98:	d144      	bne.n	8001d24 <HAL_RCCEx_PeriphCLKConfig+0x250>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 8001c9a:	68d3      	ldr	r3, [r2, #12]
 8001c9c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001ca0:	60d3      	str	r3, [r2, #12]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == (RCC_PERIPHCLK_RNG))
 8001ca2:	6823      	ldr	r3, [r4, #0]
 8001ca4:	0359      	lsls	r1, r3, #13
 8001ca6:	d50f      	bpl.n	8001cc8 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8001ca8:	4a29      	ldr	r2, [pc, #164]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001caa:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8001cac:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001cb0:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8001cb4:	430b      	orrs	r3, r1
    if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 8001cb6:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8001cba:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
    if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 8001cbe:	d13c      	bne.n	8001d3a <HAL_RCCEx_PeriphCLKConfig+0x266>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 8001cc0:	68d3      	ldr	r3, [r2, #12]
 8001cc2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001cc6:	60d3      	str	r3, [r2, #12]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8001cc8:	6823      	ldr	r3, [r4, #0]
 8001cca:	045a      	lsls	r2, r3, #17
 8001ccc:	d512      	bpl.n	8001cf4 <HAL_RCCEx_PeriphCLKConfig+0x220>
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8001cce:	4920      	ldr	r1, [pc, #128]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001cd0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8001cd2:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8001cd6:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8001cda:	4313      	orrs	r3, r2
    if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 8001cdc:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8001ce0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 8001ce4:	d106      	bne.n	8001cf4 <HAL_RCCEx_PeriphCLKConfig+0x220>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_R_UPDATE);
 8001ce6:	2102      	movs	r1, #2
 8001ce8:	1d20      	adds	r0, r4, #4
 8001cea:	f7ff fe67 	bl	80019bc <RCCEx_PLLSAI1_Config>
      if(ret != HAL_OK)
 8001cee:	2800      	cmp	r0, #0
 8001cf0:	bf18      	it	ne
 8001cf2:	4605      	movne	r5, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8001cf4:	6823      	ldr	r3, [r4, #0]
 8001cf6:	041b      	lsls	r3, r3, #16
 8001cf8:	d508      	bpl.n	8001d0c <HAL_RCCEx_PeriphCLKConfig+0x238>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8001cfa:	4a15      	ldr	r2, [pc, #84]	; (8001d50 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8001cfc:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8001cfe:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001d02:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8001d06:	430b      	orrs	r3, r1
 8001d08:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
}
 8001d0c:	4628      	mov	r0, r5
 8001d0e:	b003      	add	sp, #12
 8001d10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001d14:	f7ff f8f4 	bl	8000f00 <HAL_GetTick>
 8001d18:	eba0 0008 	sub.w	r0, r0, r8
 8001d1c:	4548      	cmp	r0, r9
 8001d1e:	f67f af32 	bls.w	8001b86 <HAL_RCCEx_PeriphCLKConfig+0xb2>
 8001d22:	e758      	b.n	8001bd6 <HAL_RCCEx_PeriphCLKConfig+0x102>
      if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLLSAI1)
 8001d24:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8001d28:	d1bb      	bne.n	8001ca2 <HAL_RCCEx_PeriphCLKConfig+0x1ce>
        ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 8001d2a:	2101      	movs	r1, #1
 8001d2c:	1d20      	adds	r0, r4, #4
 8001d2e:	f7ff fe45 	bl	80019bc <RCCEx_PLLSAI1_Config>
        if(ret != HAL_OK)
 8001d32:	2800      	cmp	r0, #0
 8001d34:	bf18      	it	ne
 8001d36:	4605      	movne	r5, r0
 8001d38:	e7b3      	b.n	8001ca2 <HAL_RCCEx_PeriphCLKConfig+0x1ce>
    else if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLLSAI1)
 8001d3a:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8001d3e:	d1c3      	bne.n	8001cc8 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 8001d40:	2101      	movs	r1, #1
 8001d42:	1d20      	adds	r0, r4, #4
 8001d44:	f7ff fe3a 	bl	80019bc <RCCEx_PLLSAI1_Config>
      if(ret != HAL_OK)
 8001d48:	2800      	cmp	r0, #0
 8001d4a:	bf18      	it	ne
 8001d4c:	4605      	movne	r5, r0
 8001d4e:	e7bb      	b.n	8001cc8 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
 8001d50:	40021000 	.word	0x40021000
 8001d54:	40007000 	.word	0x40007000

08001d58 <UART_SetConfig>:
  uint32_t lpuart_ker_ck_pres         = 0x00000000U;
  
  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  if(UART_INSTANCE_LOWPOWER(huart))
 8001d58:	6802      	ldr	r2, [r0, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8001d5a:	69c1      	ldr	r1, [r0, #28]
{
 8001d5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001d5e:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8001d60:	6883      	ldr	r3, [r0, #8]
 8001d62:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8001d64:	6815      	ldr	r5, [r2, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8001d66:	4303      	orrs	r3, r0
 8001d68:	6960      	ldr	r0, [r4, #20]
 8001d6a:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8001d6c:	4882      	ldr	r0, [pc, #520]	; (8001f78 <UART_SetConfig+0x220>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8001d6e:	430b      	orrs	r3, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8001d70:	4028      	ands	r0, r5
 8001d72:	4303      	orrs	r3, r0
 8001d74:	6013      	str	r3, [r2, #0]
  
  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8001d76:	6853      	ldr	r3, [r2, #4]
 8001d78:	68e0      	ldr	r0, [r4, #12]
 8001d7a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001d7e:	4303      	orrs	r3, r0
 8001d80:	6053      	str	r3, [r2, #4]
  *   to huart->Init.OneBitSampling (not applicable to LPUART)
  * - set TXFTCFG bit according to huart->Init.TxFifoThreshold value
  * - set RXFTCFG bit according to huart->Init.RxFifoThreshold value */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
  
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 8001d82:	4b7e      	ldr	r3, [pc, #504]	; (8001f7c <UART_SetConfig+0x224>)
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8001d84:	69a0      	ldr	r0, [r4, #24]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 8001d86:	429a      	cmp	r2, r3
  {
    tmpreg |= huart->Init.OneBitSampling;
 8001d88:	bf1c      	itt	ne
 8001d8a:	6a23      	ldrne	r3, [r4, #32]
 8001d8c:	4318      	orrne	r0, r3
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8001d8e:	6893      	ldr	r3, [r2, #8]
 8001d90:	f423 6330 	bic.w	r3, r3, #2816	; 0xb00
 8001d94:	4303      	orrs	r3, r0
 8001d96:	6093      	str	r3, [r2, #8]
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
#endif
  
  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8001d98:	4b79      	ldr	r3, [pc, #484]	; (8001f80 <UART_SetConfig+0x228>)
 8001d9a:	429a      	cmp	r2, r3
 8001d9c:	d114      	bne.n	8001dc8 <UART_SetConfig+0x70>
 8001d9e:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 8001da2:	4a78      	ldr	r2, [pc, #480]	; (8001f84 <UART_SetConfig+0x22c>)
 8001da4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001da8:	f003 0303 	and.w	r3, r3, #3
        }
      }  /*   if ( (tmpreg < (3 * huart->Init.BaudRate) ) || (tmpreg > (4096 * huart->Init.BaudRate) )) */
    } /* if (tmpreg != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8001dac:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 8001db0:	5cd3      	ldrb	r3, [r2, r3]
 8001db2:	f040 80aa 	bne.w	8001f0a <UART_SetConfig+0x1b2>
  {
    switch (clocksource)
 8001db6:	2b08      	cmp	r3, #8
 8001db8:	d820      	bhi.n	8001dfc <UART_SetConfig+0xa4>
 8001dba:	e8df f003 	tbb	[pc, r3]
 8001dbe:	8f77      	.short	0x8f77
 8001dc0:	1f9b1f92 	.word	0x1f9b1f92
 8001dc4:	1f1f      	.short	0x1f1f
 8001dc6:	9e          	.byte	0x9e
 8001dc7:	00          	.byte	0x00
  UART_GETCLOCKSOURCE(huart, clocksource);
 8001dc8:	4b6f      	ldr	r3, [pc, #444]	; (8001f88 <UART_SetConfig+0x230>)
 8001dca:	429a      	cmp	r2, r3
 8001dcc:	d107      	bne.n	8001dde <UART_SetConfig+0x86>
 8001dce:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8001dd2:	4a6e      	ldr	r2, [pc, #440]	; (8001f8c <UART_SetConfig+0x234>)
 8001dd4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001dd8:	f003 030c 	and.w	r3, r3, #12
 8001ddc:	e7e6      	b.n	8001dac <UART_SetConfig+0x54>
 8001dde:	4b67      	ldr	r3, [pc, #412]	; (8001f7c <UART_SetConfig+0x224>)
 8001de0:	429a      	cmp	r2, r3
 8001de2:	f040 80c2 	bne.w	8001f6a <UART_SetConfig+0x212>
 8001de6:	f503 33c8 	add.w	r3, r3, #102400	; 0x19000
 8001dea:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001dee:	f405 6540 	and.w	r5, r5, #3072	; 0xc00
 8001df2:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8001df6:	d02a      	beq.n	8001e4e <UART_SetConfig+0xf6>
 8001df8:	d806      	bhi.n	8001e08 <UART_SetConfig+0xb0>
 8001dfa:	b315      	cbz	r5, 8001e42 <UART_SetConfig+0xea>
        ret = HAL_ERROR;
 8001dfc:	2201      	movs	r2, #1
  huart->NbTxDataToProcess = 1;
  huart->NbRxDataToProcess = 1;
#endif
    
  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8001dfe:	2300      	movs	r3, #0
 8001e00:	6623      	str	r3, [r4, #96]	; 0x60
  huart->TxISR = NULL;
 8001e02:	6663      	str	r3, [r4, #100]	; 0x64
  
  return ret;
}
 8001e04:	4610      	mov	r0, r2
 8001e06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 8001e08:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8001e0c:	d006      	beq.n	8001e1c <UART_SetConfig+0xc4>
 8001e0e:	f5b5 6f40 	cmp.w	r5, #3072	; 0xc00
 8001e12:	d1f3      	bne.n	8001dfc <UART_SetConfig+0xa4>
      lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
 8001e14:	f44f 4000 	mov.w	r0, #32768	; 0x8000
  UART_GETCLOCKSOURCE(huart, clocksource);
 8001e18:	2508      	movs	r5, #8
 8001e1a:	e001      	b.n	8001e20 <UART_SetConfig+0xc8>
      lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
 8001e1c:	485c      	ldr	r0, [pc, #368]	; (8001f90 <UART_SetConfig+0x238>)
  UART_GETCLOCKSOURCE(huart, clocksource);
 8001e1e:	2502      	movs	r5, #2
      if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
 8001e20:	6862      	ldr	r2, [r4, #4]
 8001e22:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8001e26:	4283      	cmp	r3, r0
 8001e28:	d8e8      	bhi.n	8001dfc <UART_SetConfig+0xa4>
 8001e2a:	ebb0 3f02 	cmp.w	r0, r2, lsl #12
 8001e2e:	d8e5      	bhi.n	8001dfc <UART_SetConfig+0xa4>
        switch (clocksource)
 8001e30:	2d08      	cmp	r5, #8
 8001e32:	d838      	bhi.n	8001ea6 <UART_SetConfig+0x14e>
 8001e34:	e8df f005 	tbb	[pc, r5]
 8001e38:	3726370f 	.word	0x3726370f
 8001e3c:	3737372e 	.word	0x3737372e
 8001e40:	31          	.byte	0x31
 8001e41:	00          	.byte	0x00
      lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
 8001e42:	f7ff fd9b 	bl	800197c <HAL_RCC_GetPCLK1Freq>
    if (lpuart_ker_ck_pres != 0U)
 8001e46:	2800      	cmp	r0, #0
 8001e48:	d1ea      	bne.n	8001e20 <UART_SetConfig+0xc8>
 8001e4a:	4602      	mov	r2, r0
 8001e4c:	e7d7      	b.n	8001dfe <UART_SetConfig+0xa6>
      lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
 8001e4e:	f7ff fa15 	bl	800127c <HAL_RCC_GetSysClockFreq>
      break;
 8001e52:	2504      	movs	r5, #4
 8001e54:	e7f7      	b.n	8001e46 <UART_SetConfig+0xee>
          usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 8001e56:	f7ff fd91 	bl	800197c <HAL_RCC_GetPCLK1Freq>
          usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8001e5a:	6862      	ldr	r2, [r4, #4]
 8001e5c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001e60:	0856      	lsrs	r6, r2, #1
 8001e62:	2700      	movs	r7, #0
 8001e64:	fbe1 6700 	umlal	r6, r7, r1, r0
 8001e68:	2300      	movs	r3, #0
 8001e6a:	4630      	mov	r0, r6
 8001e6c:	4639      	mov	r1, r7
          usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
 8001e6e:	f7fe fe97 	bl	8000ba0 <__aeabi_uldivmod>
          break;
 8001e72:	2200      	movs	r2, #0
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 8001e74:	4b47      	ldr	r3, [pc, #284]	; (8001f94 <UART_SetConfig+0x23c>)
 8001e76:	f5a0 7140 	sub.w	r1, r0, #768	; 0x300
 8001e7a:	4299      	cmp	r1, r3
 8001e7c:	d8be      	bhi.n	8001dfc <UART_SetConfig+0xa4>
          huart->Instance->BRR = usartdiv;
 8001e7e:	6823      	ldr	r3, [r4, #0]
 8001e80:	60d8      	str	r0, [r3, #12]
 8001e82:	e7bc      	b.n	8001dfe <UART_SetConfig+0xa6>
          usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate));
 8001e84:	4844      	ldr	r0, [pc, #272]	; (8001f98 <UART_SetConfig+0x240>)
 8001e86:	0855      	lsrs	r5, r2, #1
 8001e88:	2300      	movs	r3, #0
 8001e8a:	2100      	movs	r1, #0
 8001e8c:	1940      	adds	r0, r0, r5
          usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
 8001e8e:	f141 0100 	adc.w	r1, r1, #0
 8001e92:	e7ec      	b.n	8001e6e <UART_SetConfig+0x116>
          usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8001e94:	f7ff f9f2 	bl	800127c <HAL_RCC_GetSysClockFreq>
 8001e98:	e7df      	b.n	8001e5a <UART_SetConfig+0x102>
          usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
 8001e9a:	0850      	lsrs	r0, r2, #1
 8001e9c:	2100      	movs	r1, #0
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	f510 0000 	adds.w	r0, r0, #8388608	; 0x800000
 8001ea4:	e7f3      	b.n	8001e8e <UART_SetConfig+0x136>
          ret = HAL_ERROR;
 8001ea6:	2201      	movs	r2, #1
  uint32_t usartdiv                   = 0x00000000U;
 8001ea8:	2000      	movs	r0, #0
 8001eaa:	e7e3      	b.n	8001e74 <UART_SetConfig+0x11c>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 8001eac:	f7ff fd66 	bl	800197c <HAL_RCC_GetPCLK1Freq>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8001eb0:	6861      	ldr	r1, [r4, #4]
 8001eb2:	084a      	lsrs	r2, r1, #1
 8001eb4:	eb02 0340 	add.w	r3, r2, r0, lsl #1
 8001eb8:	fbb3 f3f1 	udiv	r3, r3, r1
 8001ebc:	b29b      	uxth	r3, r3
  HAL_StatusTypeDef ret               = HAL_OK;
 8001ebe:	2200      	movs	r2, #0
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8001ec0:	f1a3 0010 	sub.w	r0, r3, #16
 8001ec4:	f64f 71ef 	movw	r1, #65519	; 0xffef
 8001ec8:	4288      	cmp	r0, r1
 8001eca:	d897      	bhi.n	8001dfc <UART_SetConfig+0xa4>
      brrtemp = usartdiv & 0xFFF0U;
 8001ecc:	f023 010f 	bic.w	r1, r3, #15
      huart->Instance->BRR = brrtemp;
 8001ed0:	6820      	ldr	r0, [r4, #0]
      brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8001ed2:	f3c3 0342 	ubfx	r3, r3, #1, #3
      huart->Instance->BRR = brrtemp;
 8001ed6:	430b      	orrs	r3, r1
 8001ed8:	60c3      	str	r3, [r0, #12]
 8001eda:	e790      	b.n	8001dfe <UART_SetConfig+0xa6>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 8001edc:	f7ff fd5e 	bl	800199c <HAL_RCC_GetPCLK2Freq>
 8001ee0:	e7e6      	b.n	8001eb0 <UART_SetConfig+0x158>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 8001ee2:	6860      	ldr	r0, [r4, #4]
 8001ee4:	0843      	lsrs	r3, r0, #1
 8001ee6:	f103 73f4 	add.w	r3, r3, #31981568	; 0x1e80000
 8001eea:	f503 4390 	add.w	r3, r3, #18432	; 0x4800
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 8001eee:	fbb3 f3f0 	udiv	r3, r3, r0
 8001ef2:	e7e3      	b.n	8001ebc <UART_SetConfig+0x164>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8001ef4:	f7ff f9c2 	bl	800127c <HAL_RCC_GetSysClockFreq>
 8001ef8:	e7da      	b.n	8001eb0 <UART_SetConfig+0x158>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 8001efa:	6860      	ldr	r0, [r4, #4]
 8001efc:	0843      	lsrs	r3, r0, #1
 8001efe:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 8001f02:	e7f4      	b.n	8001eee <UART_SetConfig+0x196>
      ret = HAL_ERROR;
 8001f04:	2201      	movs	r2, #1
  uint32_t usartdiv                   = 0x00000000U;
 8001f06:	2300      	movs	r3, #0
 8001f08:	e7da      	b.n	8001ec0 <UART_SetConfig+0x168>
    switch (clocksource)
 8001f0a:	2b08      	cmp	r3, #8
 8001f0c:	d830      	bhi.n	8001f70 <UART_SetConfig+0x218>
 8001f0e:	e8df f003 	tbb	[pc, r3]
 8001f12:	1805      	.short	0x1805
 8001f14:	2f242f1b 	.word	0x2f242f1b
 8001f18:	2f2f      	.short	0x2f2f
 8001f1a:	27          	.byte	0x27
 8001f1b:	00          	.byte	0x00
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 8001f1c:	f7ff fd2e 	bl	800197c <HAL_RCC_GetPCLK1Freq>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 8001f20:	6862      	ldr	r2, [r4, #4]
 8001f22:	eb00 0352 	add.w	r3, r0, r2, lsr #1
 8001f26:	fbb3 f3f2 	udiv	r3, r3, r2
 8001f2a:	b29b      	uxth	r3, r3
  HAL_StatusTypeDef ret               = HAL_OK;
 8001f2c:	2200      	movs	r2, #0
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8001f2e:	f1a3 0010 	sub.w	r0, r3, #16
 8001f32:	f64f 71ef 	movw	r1, #65519	; 0xffef
 8001f36:	4288      	cmp	r0, r1
 8001f38:	f63f af60 	bhi.w	8001dfc <UART_SetConfig+0xa4>
      huart->Instance->BRR = usartdiv;
 8001f3c:	6821      	ldr	r1, [r4, #0]
 8001f3e:	60cb      	str	r3, [r1, #12]
 8001f40:	e75d      	b.n	8001dfe <UART_SetConfig+0xa6>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 8001f42:	f7ff fd2b 	bl	800199c <HAL_RCC_GetPCLK2Freq>
 8001f46:	e7eb      	b.n	8001f20 <UART_SetConfig+0x1c8>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 8001f48:	6860      	ldr	r0, [r4, #4]
 8001f4a:	0843      	lsrs	r3, r0, #1
 8001f4c:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
 8001f50:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 8001f54:	fbb3 f3f0 	udiv	r3, r3, r0
 8001f58:	e7e7      	b.n	8001f2a <UART_SetConfig+0x1d2>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8001f5a:	f7ff f98f 	bl	800127c <HAL_RCC_GetSysClockFreq>
 8001f5e:	e7df      	b.n	8001f20 <UART_SetConfig+0x1c8>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 8001f60:	6860      	ldr	r0, [r4, #4]
 8001f62:	0843      	lsrs	r3, r0, #1
 8001f64:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8001f68:	e7f4      	b.n	8001f54 <UART_SetConfig+0x1fc>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8001f6a:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 8001f6e:	d0c9      	beq.n	8001f04 <UART_SetConfig+0x1ac>
      ret = HAL_ERROR;
 8001f70:	2201      	movs	r2, #1
  uint32_t usartdiv                   = 0x00000000U;
 8001f72:	2300      	movs	r3, #0
 8001f74:	e7db      	b.n	8001f2e <UART_SetConfig+0x1d6>
 8001f76:	bf00      	nop
 8001f78:	efff69f3 	.word	0xefff69f3
 8001f7c:	40008000 	.word	0x40008000
 8001f80:	40013800 	.word	0x40013800
 8001f84:	08006430 	.word	0x08006430
 8001f88:	40004400 	.word	0x40004400
 8001f8c:	08006434 	.word	0x08006434
 8001f90:	00f42400 	.word	0x00f42400
 8001f94:	000ffcff 	.word	0x000ffcff
 8001f98:	f4240000 	.word	0xf4240000

08001f9c <UART_AdvFeatureConfig>:
{
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
  
  /* if required, configure TX pin active level inversion */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8001f9c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8001f9e:	07da      	lsls	r2, r3, #31
{
 8001fa0:	b510      	push	{r4, lr}
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8001fa2:	d506      	bpl.n	8001fb2 <UART_AdvFeatureConfig+0x16>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8001fa4:	6801      	ldr	r1, [r0, #0]
 8001fa6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8001fa8:	684a      	ldr	r2, [r1, #4]
 8001faa:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8001fae:	4322      	orrs	r2, r4
 8001fb0:	604a      	str	r2, [r1, #4]
  }
  
  /* if required, configure RX pin active level inversion */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8001fb2:	079c      	lsls	r4, r3, #30
 8001fb4:	d506      	bpl.n	8001fc4 <UART_AdvFeatureConfig+0x28>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8001fb6:	6801      	ldr	r1, [r0, #0]
 8001fb8:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8001fba:	684a      	ldr	r2, [r1, #4]
 8001fbc:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001fc0:	4322      	orrs	r2, r4
 8001fc2:	604a      	str	r2, [r1, #4]
  }
  
  /* if required, configure data inversion */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8001fc4:	0759      	lsls	r1, r3, #29
 8001fc6:	d506      	bpl.n	8001fd6 <UART_AdvFeatureConfig+0x3a>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8001fc8:	6801      	ldr	r1, [r0, #0]
 8001fca:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8001fcc:	684a      	ldr	r2, [r1, #4]
 8001fce:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8001fd2:	4322      	orrs	r2, r4
 8001fd4:	604a      	str	r2, [r1, #4]
  }
  
  /* if required, configure RX/TX pins swap */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8001fd6:	071a      	lsls	r2, r3, #28
 8001fd8:	d506      	bpl.n	8001fe8 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8001fda:	6801      	ldr	r1, [r0, #0]
 8001fdc:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8001fde:	684a      	ldr	r2, [r1, #4]
 8001fe0:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8001fe4:	4322      	orrs	r2, r4
 8001fe6:	604a      	str	r2, [r1, #4]
  }
  
  /* if required, configure RX overrun detection disabling */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8001fe8:	06dc      	lsls	r4, r3, #27
 8001fea:	d506      	bpl.n	8001ffa <UART_AdvFeatureConfig+0x5e>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8001fec:	6801      	ldr	r1, [r0, #0]
 8001fee:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8001ff0:	688a      	ldr	r2, [r1, #8]
 8001ff2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8001ff6:	4322      	orrs	r2, r4
 8001ff8:	608a      	str	r2, [r1, #8]
  }
  
  /* if required, configure DMA disabling on reception error */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8001ffa:	0699      	lsls	r1, r3, #26
 8001ffc:	d506      	bpl.n	800200c <UART_AdvFeatureConfig+0x70>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8001ffe:	6801      	ldr	r1, [r0, #0]
 8002000:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8002002:	688a      	ldr	r2, [r1, #8]
 8002004:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002008:	4322      	orrs	r2, r4
 800200a:	608a      	str	r2, [r1, #8]
  }
  
  /* if required, configure auto Baud rate detection scheme */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 800200c:	065a      	lsls	r2, r3, #25
 800200e:	d50f      	bpl.n	8002030 <UART_AdvFeatureConfig+0x94>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8002010:	6801      	ldr	r1, [r0, #0]
 8002012:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8002014:	684a      	ldr	r2, [r1, #4]
 8002016:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 800201a:	4322      	orrs	r2, r4
    /* set auto Baudrate detection parameters if detection is enabled */
    if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800201c:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8002020:	604a      	str	r2, [r1, #4]
    if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8002022:	d105      	bne.n	8002030 <UART_AdvFeatureConfig+0x94>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8002024:	684a      	ldr	r2, [r1, #4]
 8002026:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8002028:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 800202c:	4322      	orrs	r2, r4
 800202e:	604a      	str	r2, [r1, #4]
    }
  }
  
  /* if required, configure MSB first on communication line */
  if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8002030:	061b      	lsls	r3, r3, #24
 8002032:	d506      	bpl.n	8002042 <UART_AdvFeatureConfig+0xa6>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8002034:	6802      	ldr	r2, [r0, #0]
 8002036:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8002038:	6853      	ldr	r3, [r2, #4]
 800203a:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 800203e:	430b      	orrs	r3, r1
 8002040:	6053      	str	r3, [r2, #4]
 8002042:	bd10      	pop	{r4, pc}

08002044 <UART_WaitOnFlagUntilTimeout>:
  * @param Tickstart Tick start value
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 8002044:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002048:	9d06      	ldr	r5, [sp, #24]
 800204a:	4604      	mov	r4, r0
 800204c:	460f      	mov	r7, r1
 800204e:	4616      	mov	r6, r2
 8002050:	4698      	mov	r8, r3
  /* Wait until flag is set */
  while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8002052:	6821      	ldr	r1, [r4, #0]
 8002054:	69ca      	ldr	r2, [r1, #28]
 8002056:	ea37 0302 	bics.w	r3, r7, r2
 800205a:	bf0c      	ite	eq
 800205c:	2201      	moveq	r2, #1
 800205e:	2200      	movne	r2, #0
 8002060:	42b2      	cmp	r2, r6
 8002062:	d002      	beq.n	800206a <UART_WaitOnFlagUntilTimeout+0x26>
        
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8002064:	2000      	movs	r0, #0
}
 8002066:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if(Timeout != HAL_MAX_DELAY)
 800206a:	1c6b      	adds	r3, r5, #1
 800206c:	d0f2      	beq.n	8002054 <UART_WaitOnFlagUntilTimeout+0x10>
      if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
 800206e:	b99d      	cbnz	r5, 8002098 <UART_WaitOnFlagUntilTimeout+0x54>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8002070:	6823      	ldr	r3, [r4, #0]
 8002072:	681a      	ldr	r2, [r3, #0]
 8002074:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8002078:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800207a:	689a      	ldr	r2, [r3, #8]
 800207c:	f022 0201 	bic.w	r2, r2, #1
 8002080:	609a      	str	r2, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 8002082:	2320      	movs	r3, #32
 8002084:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
        huart->RxState = HAL_UART_STATE_READY;
 8002088:	f884 3072 	strb.w	r3, [r4, #114]	; 0x72
        __HAL_UNLOCK(huart);
 800208c:	2300      	movs	r3, #0
 800208e:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
 8002092:	2003      	movs	r0, #3
 8002094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
 8002098:	f7fe ff32 	bl	8000f00 <HAL_GetTick>
 800209c:	eba0 0008 	sub.w	r0, r0, r8
 80020a0:	4285      	cmp	r5, r0
 80020a2:	d2d6      	bcs.n	8002052 <UART_WaitOnFlagUntilTimeout+0xe>
 80020a4:	e7e4      	b.n	8002070 <UART_WaitOnFlagUntilTimeout+0x2c>

080020a6 <HAL_UART_Transmit>:
{
 80020a6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80020aa:	461f      	mov	r7, r3
  if(huart->gState == HAL_UART_STATE_READY)
 80020ac:	f890 3071 	ldrb.w	r3, [r0, #113]	; 0x71
 80020b0:	2b20      	cmp	r3, #32
{
 80020b2:	4604      	mov	r4, r0
 80020b4:	460d      	mov	r5, r1
 80020b6:	4690      	mov	r8, r2
  if(huart->gState == HAL_UART_STATE_READY)
 80020b8:	d14a      	bne.n	8002150 <HAL_UART_Transmit+0xaa>
    if((pData == NULL ) || (Size == 0U))
 80020ba:	2900      	cmp	r1, #0
 80020bc:	d046      	beq.n	800214c <HAL_UART_Transmit+0xa6>
 80020be:	2a00      	cmp	r2, #0
 80020c0:	d044      	beq.n	800214c <HAL_UART_Transmit+0xa6>
    __HAL_LOCK(huart);
 80020c2:	f890 3070 	ldrb.w	r3, [r0, #112]	; 0x70
 80020c6:	2b01      	cmp	r3, #1
 80020c8:	d042      	beq.n	8002150 <HAL_UART_Transmit+0xaa>
 80020ca:	2301      	movs	r3, #1
 80020cc:	f880 3070 	strb.w	r3, [r0, #112]	; 0x70
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80020d0:	2300      	movs	r3, #0
 80020d2:	6743      	str	r3, [r0, #116]	; 0x74
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80020d4:	2321      	movs	r3, #33	; 0x21
 80020d6:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
    tickstart = HAL_GetTick();
 80020da:	f7fe ff11 	bl	8000f00 <HAL_GetTick>
    huart->TxXferSize  = Size;
 80020de:	f8a4 8050 	strh.w	r8, [r4, #80]	; 0x50
    tickstart = HAL_GetTick();
 80020e2:	4606      	mov	r6, r0
    huart->TxXferCount = Size;
 80020e4:	f8a4 8052 	strh.w	r8, [r4, #82]	; 0x52
    while(huart->TxXferCount > 0U)
 80020e8:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
      if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80020ec:	9700      	str	r7, [sp, #0]
    while(huart->TxXferCount > 0U)
 80020ee:	b292      	uxth	r2, r2
      if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80020f0:	4633      	mov	r3, r6
    while(huart->TxXferCount > 0U)
 80020f2:	b952      	cbnz	r2, 800210a <HAL_UART_Transmit+0x64>
    if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80020f4:	2140      	movs	r1, #64	; 0x40
 80020f6:	4620      	mov	r0, r4
 80020f8:	f7ff ffa4 	bl	8002044 <UART_WaitOnFlagUntilTimeout>
 80020fc:	b958      	cbnz	r0, 8002116 <HAL_UART_Transmit+0x70>
    huart->gState = HAL_UART_STATE_READY;
 80020fe:	2320      	movs	r3, #32
 8002100:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
    __HAL_UNLOCK(huart);
 8002104:	f884 0070 	strb.w	r0, [r4, #112]	; 0x70
    return HAL_OK;
 8002108:	e006      	b.n	8002118 <HAL_UART_Transmit+0x72>
      if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800210a:	2200      	movs	r2, #0
 800210c:	2180      	movs	r1, #128	; 0x80
 800210e:	4620      	mov	r0, r4
 8002110:	f7ff ff98 	bl	8002044 <UART_WaitOnFlagUntilTimeout>
 8002114:	b118      	cbz	r0, 800211e <HAL_UART_Transmit+0x78>
        return HAL_TIMEOUT;
 8002116:	2003      	movs	r0, #3
}
 8002118:	b002      	add	sp, #8
 800211a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800211e:	68a3      	ldr	r3, [r4, #8]
 8002120:	6822      	ldr	r2, [r4, #0]
 8002122:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002126:	d10d      	bne.n	8002144 <HAL_UART_Transmit+0x9e>
 8002128:	6923      	ldr	r3, [r4, #16]
 800212a:	b95b      	cbnz	r3, 8002144 <HAL_UART_Transmit+0x9e>
        huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 800212c:	f835 3b02 	ldrh.w	r3, [r5], #2
 8002130:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002134:	8513      	strh	r3, [r2, #40]	; 0x28
      huart->TxXferCount--;
 8002136:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 800213a:	3b01      	subs	r3, #1
 800213c:	b29b      	uxth	r3, r3
 800213e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8002142:	e7d1      	b.n	80020e8 <HAL_UART_Transmit+0x42>
        huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 8002144:	782b      	ldrb	r3, [r5, #0]
 8002146:	8513      	strh	r3, [r2, #40]	; 0x28
 8002148:	3501      	adds	r5, #1
 800214a:	e7f4      	b.n	8002136 <HAL_UART_Transmit+0x90>
      return  HAL_ERROR;
 800214c:	2001      	movs	r0, #1
 800214e:	e7e3      	b.n	8002118 <HAL_UART_Transmit+0x72>
    return HAL_BUSY;
 8002150:	2002      	movs	r0, #2
 8002152:	e7e1      	b.n	8002118 <HAL_UART_Transmit+0x72>

08002154 <UART_CheckIdleState>:
{
 8002154:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002156:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8002158:	2600      	movs	r6, #0
 800215a:	6746      	str	r6, [r0, #116]	; 0x74
  tickstart = HAL_GetTick();
 800215c:	f7fe fed0 	bl	8000f00 <HAL_GetTick>
  if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8002160:	6823      	ldr	r3, [r4, #0]
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	071a      	lsls	r2, r3, #28
  tickstart = HAL_GetTick();
 8002166:	4605      	mov	r5, r0
  if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8002168:	d417      	bmi.n	800219a <UART_CheckIdleState+0x46>
  if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 800216a:	6823      	ldr	r3, [r4, #0]
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	075b      	lsls	r3, r3, #29
 8002170:	d50a      	bpl.n	8002188 <UART_CheckIdleState+0x34>
    if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8002172:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8002176:	9300      	str	r3, [sp, #0]
 8002178:	2200      	movs	r2, #0
 800217a:	462b      	mov	r3, r5
 800217c:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8002180:	4620      	mov	r0, r4
 8002182:	f7ff ff5f 	bl	8002044 <UART_WaitOnFlagUntilTimeout>
 8002186:	b9a0      	cbnz	r0, 80021b2 <UART_CheckIdleState+0x5e>
  huart->gState= HAL_UART_STATE_READY;
 8002188:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 800218a:	2000      	movs	r0, #0
  huart->gState= HAL_UART_STATE_READY;
 800218c:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
  __HAL_UNLOCK(huart);
 8002190:	f884 0070 	strb.w	r0, [r4, #112]	; 0x70
  huart->RxState= HAL_UART_STATE_READY;
 8002194:	f884 3072 	strb.w	r3, [r4, #114]	; 0x72
  return HAL_OK;
 8002198:	e00c      	b.n	80021b4 <UART_CheckIdleState+0x60>
    if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800219a:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800219e:	9300      	str	r3, [sp, #0]
 80021a0:	4632      	mov	r2, r6
 80021a2:	4603      	mov	r3, r0
 80021a4:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80021a8:	4620      	mov	r0, r4
 80021aa:	f7ff ff4b 	bl	8002044 <UART_WaitOnFlagUntilTimeout>
 80021ae:	2800      	cmp	r0, #0
 80021b0:	d0db      	beq.n	800216a <UART_CheckIdleState+0x16>
      return HAL_TIMEOUT;
 80021b2:	2003      	movs	r0, #3
}
 80021b4:	b002      	add	sp, #8
 80021b6:	bd70      	pop	{r4, r5, r6, pc}

080021b8 <HAL_UART_Init>:
{
 80021b8:	b510      	push	{r4, lr}
  if(huart == NULL)
 80021ba:	4604      	mov	r4, r0
 80021bc:	b360      	cbz	r0, 8002218 <HAL_UART_Init+0x60>
  if(huart->gState == HAL_UART_STATE_RESET)
 80021be:	f890 3071 	ldrb.w	r3, [r0, #113]	; 0x71
 80021c2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80021c6:	b91b      	cbnz	r3, 80021d0 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 80021c8:	f880 2070 	strb.w	r2, [r0, #112]	; 0x70
    HAL_UART_MspInit(huart);
 80021cc:	f000 f93a 	bl	8002444 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 80021d0:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 80021d2:	2324      	movs	r3, #36	; 0x24
 80021d4:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
  __HAL_UART_DISABLE(huart);
 80021d8:	6813      	ldr	r3, [r2, #0]
 80021da:	f023 0301 	bic.w	r3, r3, #1
 80021de:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 80021e0:	4620      	mov	r0, r4
 80021e2:	f7ff fdb9 	bl	8001d58 <UART_SetConfig>
 80021e6:	2801      	cmp	r0, #1
 80021e8:	d016      	beq.n	8002218 <HAL_UART_Init+0x60>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80021ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80021ec:	b113      	cbz	r3, 80021f4 <HAL_UART_Init+0x3c>
    UART_AdvFeatureConfig(huart);
 80021ee:	4620      	mov	r0, r4
 80021f0:	f7ff fed4 	bl	8001f9c <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80021f4:	6823      	ldr	r3, [r4, #0]
 80021f6:	685a      	ldr	r2, [r3, #4]
 80021f8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80021fc:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80021fe:	689a      	ldr	r2, [r3, #8]
 8002200:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002204:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8002206:	681a      	ldr	r2, [r3, #0]
 8002208:	f042 0201 	orr.w	r2, r2, #1
  return (UART_CheckIdleState(huart));
 800220c:	4620      	mov	r0, r4
  __HAL_UART_ENABLE(huart);
 800220e:	601a      	str	r2, [r3, #0]
}
 8002210:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  return (UART_CheckIdleState(huart));
 8002214:	f7ff bf9e 	b.w	8002154 <UART_CheckIdleState>
}
 8002218:	2001      	movs	r0, #1
 800221a:	bd10      	pop	{r4, pc}

0800221c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800221c:	b510      	push	{r4, lr}
 800221e:	b0ac      	sub	sp, #176	; 0xb0
  RCC_PeriphCLKInitTypeDef PeriphClkInit;

    /**Initializes the CPU, AHB and APB busses clocks 
    */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002220:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002224:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.HSICalibrationValue = 16;
 8002226:	2310      	movs	r3, #16
 8002228:	930a      	str	r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  RCC_OscInitStruct.PLL.PLLN = 10;
 800222a:	230a      	movs	r3, #10
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800222c:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLN = 10;
 800222e:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002230:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 8002232:	2307      	movs	r3, #7
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002234:	9406      	str	r4, [sp, #24]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002236:	9410      	str	r4, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002238:	9411      	str	r4, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 800223a:	9314      	str	r3, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 800223c:	9415      	str	r4, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 800223e:	9416      	str	r4, [sp, #88]	; 0x58
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002240:	f7ff f884 	bl	800134c <HAL_RCC_OscConfig>
 8002244:	b100      	cbz	r0, 8002248 <SystemClock_Config+0x2c>
 8002246:	e7fe      	b.n	8002246 <SystemClock_Config+0x2a>
    _Error_Handler(__FILE__, __LINE__);
  }

    /**Initializes the CPU, AHB and APB busses clocks 
    */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002248:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800224a:	2104      	movs	r1, #4
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800224c:	9301      	str	r3, [sp, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800224e:	9003      	str	r0, [sp, #12]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002250:	2303      	movs	r3, #3
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002252:	9004      	str	r0, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8002254:	9005      	str	r0, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8002256:	eb0d 0001 	add.w	r0, sp, r1
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800225a:	9302      	str	r3, [sp, #8]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800225c:	f7ff fad2 	bl	8001804 <HAL_RCC_ClockConfig>
 8002260:	b100      	cbz	r0, 8002264 <SystemClock_Config+0x48>
 8002262:	e7fe      	b.n	8002262 <SystemClock_Config+0x46>
  {
    _Error_Handler(__FILE__, __LINE__);
  }

  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8002264:	9020      	str	r0, [sp, #128]	; 0x80
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002266:	a817      	add	r0, sp, #92	; 0x5c
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8002268:	9417      	str	r4, [sp, #92]	; 0x5c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800226a:	f7ff fc33 	bl	8001ad4 <HAL_RCCEx_PeriphCLKConfig>
 800226e:	b100      	cbz	r0, 8002272 <SystemClock_Config+0x56>
 8002270:	e7fe      	b.n	8002270 <SystemClock_Config+0x54>
    _Error_Handler(__FILE__, __LINE__);
  }

    /**Configure the main internal regulator output voltage 
    */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8002272:	f44f 7000 	mov.w	r0, #512	; 0x200
 8002276:	f7fe ff8b 	bl	8001190 <HAL_PWREx_ControlVoltageScaling>
 800227a:	4604      	mov	r4, r0
 800227c:	b100      	cbz	r0, 8002280 <SystemClock_Config+0x64>
 800227e:	e7fe      	b.n	800227e <SystemClock_Config+0x62>
    _Error_Handler(__FILE__, __LINE__);
  }

    /**Configure the Systick interrupt time 
    */
  HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 8002280:	f7ff fb76 	bl	8001970 <HAL_RCC_GetHCLKFreq>
 8002284:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002288:	fbb0 f0f3 	udiv	r0, r0, r3
 800228c:	f7fe fe92 	bl	8000fb4 <HAL_SYSTICK_Config>

    /**Configure the Systick 
    */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 8002290:	2004      	movs	r0, #4
 8002292:	f7fe fea5 	bl	8000fe0 <HAL_SYSTICK_CLKSourceConfig>

  /* SysTick_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 8002296:	4622      	mov	r2, r4
 8002298:	4621      	mov	r1, r4
 800229a:	f04f 30ff 	mov.w	r0, #4294967295
 800229e:	f7fe fe55 	bl	8000f4c <HAL_NVIC_SetPriority>
}
 80022a2:	b02c      	add	sp, #176	; 0xb0
 80022a4:	bd10      	pop	{r4, pc}
	...

080022a8 <main>:
{
 80022a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80022ac:	b099      	sub	sp, #100	; 0x64
  HAL_Init();
 80022ae:	f7fe fe13 	bl	8000ed8 <HAL_Init>
  SystemClock_Config();
 80022b2:	f7ff ffb3 	bl	800221c <SystemClock_Config>
{

  GPIO_InitTypeDef GPIO_InitStruct;

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80022b6:	4b3a      	ldr	r3, [pc, #232]	; (80023a0 <main+0xf8>)
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 80022b8:	483a      	ldr	r0, [pc, #232]	; (80023a4 <main+0xfc>)
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80022ba:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80022bc:	f042 0204 	orr.w	r2, r2, #4
 80022c0:	64da      	str	r2, [r3, #76]	; 0x4c
 80022c2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80022c4:	f002 0204 	and.w	r2, r2, #4
 80022c8:	9201      	str	r2, [sp, #4]
 80022ca:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80022cc:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80022ce:	f042 0201 	orr.w	r2, r2, #1
 80022d2:	64da      	str	r2, [r3, #76]	; 0x4c
 80022d4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80022d6:	f002 0201 	and.w	r2, r2, #1
 80022da:	9202      	str	r2, [sp, #8]
 80022dc:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80022de:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80022e0:	f042 0202 	orr.w	r2, r2, #2
 80022e4:	64da      	str	r2, [r3, #76]	; 0x4c
 80022e6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80022e8:	f003 0302 	and.w	r3, r3, #2
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 80022ec:	2200      	movs	r2, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80022ee:	9303      	str	r3, [sp, #12]
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 80022f0:	2108      	movs	r1, #8
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80022f2:	9b03      	ldr	r3, [sp, #12]
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 80022f4:	f7fe ff3a 	bl	800116c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LD3_Pin */
  GPIO_InitStruct.Pin = LD3_Pin;
 80022f8:	2308      	movs	r3, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022fa:	2400      	movs	r4, #0
  GPIO_InitStruct.Pin = LD3_Pin;
 80022fc:	9304      	str	r3, [sp, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 80022fe:	4829      	ldr	r0, [pc, #164]	; (80023a4 <main+0xfc>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002300:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002302:	2301      	movs	r3, #1
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 8002304:	a904      	add	r1, sp, #16
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002306:	9305      	str	r3, [sp, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002308:	9407      	str	r4, [sp, #28]
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 800230a:	f7fe fe7b 	bl	8001004 <HAL_GPIO_Init>
  huart2.Instance = USART2;
 800230e:	4826      	ldr	r0, [pc, #152]	; (80023a8 <main+0x100>)
  huart2.Init.BaudRate = 115200;
 8002310:	4a26      	ldr	r2, [pc, #152]	; (80023ac <main+0x104>)
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002312:	6084      	str	r4, [r0, #8]
  huart2.Init.BaudRate = 115200;
 8002314:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8002318:	e880 000c 	stmia.w	r0, {r2, r3}
  huart2.Init.Mode = UART_MODE_TX_RX;
 800231c:	230c      	movs	r3, #12
  huart2.Init.StopBits = UART_STOPBITS_1;
 800231e:	60c4      	str	r4, [r0, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002320:	6104      	str	r4, [r0, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002322:	6143      	str	r3, [r0, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002324:	6184      	str	r4, [r0, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002326:	61c4      	str	r4, [r0, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002328:	6204      	str	r4, [r0, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800232a:	6244      	str	r4, [r0, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800232c:	f7ff ff44 	bl	80021b8 <HAL_UART_Init>
 8002330:	bb78      	cbnz	r0, 8002392 <main+0xea>
	  sprintf(str,"DATA : %10.4f\r\n",sin(n++*3.14/180));
 8002332:	a719      	add	r7, pc, #100	; (adr r7, 8002398 <main+0xf0>)
 8002334:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002338:	4d1d      	ldr	r5, [pc, #116]	; (80023b0 <main+0x108>)
 800233a:	f8df 9078 	ldr.w	r9, [pc, #120]	; 80023b4 <main+0x10c>
 800233e:	2400      	movs	r4, #0
 8002340:	f100 0801 	add.w	r8, r0, #1
 8002344:	f7fe f8ee 	bl	8000524 <__aeabi_i2d>
 8002348:	4632      	mov	r2, r6
 800234a:	463b      	mov	r3, r7
 800234c:	f7fe f950 	bl	80005f0 <__aeabi_dmul>
 8002350:	4622      	mov	r2, r4
 8002352:	462b      	mov	r3, r5
 8002354:	f7fe fa76 	bl	8000844 <__aeabi_ddiv>
 8002358:	ec41 0b10 	vmov	d0, r0, r1
 800235c:	f003 f808 	bl	8005370 <sin>
 8002360:	4649      	mov	r1, r9
 8002362:	ec53 2b10 	vmov	r2, r3, d0
 8002366:	a804      	add	r0, sp, #16
 8002368:	f000 f916 	bl	8002598 <sprintf>
	  HAL_UART_Transmit(&huart2,(uint8_t *)str,(uint16_t)strlen(str),1000);
 800236c:	a804      	add	r0, sp, #16
 800236e:	f7fd ff2f 	bl	80001d0 <strlen>
 8002372:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002376:	b282      	uxth	r2, r0
 8002378:	a904      	add	r1, sp, #16
 800237a:	480b      	ldr	r0, [pc, #44]	; (80023a8 <main+0x100>)
 800237c:	f7ff fe93 	bl	80020a6 <HAL_UART_Transmit>
	  HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 8002380:	2108      	movs	r1, #8
 8002382:	4808      	ldr	r0, [pc, #32]	; (80023a4 <main+0xfc>)
 8002384:	f7fe fef7 	bl	8001176 <HAL_GPIO_TogglePin>
 	  HAL_Delay(2);
 8002388:	2002      	movs	r0, #2
 800238a:	f7fe fdbf 	bl	8000f0c <HAL_Delay>
	  sprintf(str,"DATA : %10.4f\r\n",sin(n++*3.14/180));
 800238e:	4640      	mov	r0, r8
 8002390:	e7d6      	b.n	8002340 <main+0x98>
 8002392:	e7fe      	b.n	8002392 <main+0xea>
 8002394:	f3af 8000 	nop.w
 8002398:	51eb851f 	.word	0x51eb851f
 800239c:	40091eb8 	.word	0x40091eb8
 80023a0:	40021000 	.word	0x40021000
 80023a4:	48000400 	.word	0x48000400
 80023a8:	200006cc 	.word	0x200006cc
 80023ac:	40004400 	.word	0x40004400
 80023b0:	40668000 	.word	0x40668000
 80023b4:	08006441 	.word	0x08006441

080023b8 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80023b8:	4b21      	ldr	r3, [pc, #132]	; (8002440 <HAL_MspInit+0x88>)
{
 80023ba:	b507      	push	{r0, r1, r2, lr}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80023bc:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80023be:	f042 0201 	orr.w	r2, r2, #1
 80023c2:	661a      	str	r2, [r3, #96]	; 0x60
 80023c4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80023c6:	f002 0201 	and.w	r2, r2, #1
 80023ca:	9200      	str	r2, [sp, #0]
 80023cc:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80023ce:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80023d0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80023d4:	659a      	str	r2, [r3, #88]	; 0x58
 80023d6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80023d8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80023dc:	9301      	str	r3, [sp, #4]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80023de:	2003      	movs	r0, #3
  __HAL_RCC_PWR_CLK_ENABLE();
 80023e0:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80023e2:	f7fe fda1 	bl	8000f28 <HAL_NVIC_SetPriorityGrouping>

  /* System interrupt init*/
  /* MemoryManagement_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
 80023e6:	2200      	movs	r2, #0
 80023e8:	4611      	mov	r1, r2
 80023ea:	f06f 000b 	mvn.w	r0, #11
 80023ee:	f7fe fdad 	bl	8000f4c <HAL_NVIC_SetPriority>
  /* BusFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
 80023f2:	2200      	movs	r2, #0
 80023f4:	4611      	mov	r1, r2
 80023f6:	f06f 000a 	mvn.w	r0, #10
 80023fa:	f7fe fda7 	bl	8000f4c <HAL_NVIC_SetPriority>
  /* UsageFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
 80023fe:	2200      	movs	r2, #0
 8002400:	4611      	mov	r1, r2
 8002402:	f06f 0009 	mvn.w	r0, #9
 8002406:	f7fe fda1 	bl	8000f4c <HAL_NVIC_SetPriority>
  /* SVCall_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
 800240a:	2200      	movs	r2, #0
 800240c:	4611      	mov	r1, r2
 800240e:	f06f 0004 	mvn.w	r0, #4
 8002412:	f7fe fd9b 	bl	8000f4c <HAL_NVIC_SetPriority>
  /* DebugMonitor_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
 8002416:	2200      	movs	r2, #0
 8002418:	4611      	mov	r1, r2
 800241a:	f06f 0003 	mvn.w	r0, #3
 800241e:	f7fe fd95 	bl	8000f4c <HAL_NVIC_SetPriority>
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
 8002422:	2200      	movs	r2, #0
 8002424:	4611      	mov	r1, r2
 8002426:	f06f 0001 	mvn.w	r0, #1
 800242a:	f7fe fd8f 	bl	8000f4c <HAL_NVIC_SetPriority>
  /* SysTick_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 800242e:	2200      	movs	r2, #0
 8002430:	4611      	mov	r1, r2
 8002432:	f04f 30ff 	mov.w	r0, #4294967295
 8002436:	f7fe fd89 	bl	8000f4c <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800243a:	b003      	add	sp, #12
 800243c:	f85d fb04 	ldr.w	pc, [sp], #4
 8002440:	40021000 	.word	0x40021000

08002444 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002444:	b570      	push	{r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct;
  if(huart->Instance==USART2)
 8002446:	6802      	ldr	r2, [r0, #0]
 8002448:	4b15      	ldr	r3, [pc, #84]	; (80024a0 <HAL_UART_MspInit+0x5c>)
 800244a:	429a      	cmp	r2, r3
{
 800244c:	b086      	sub	sp, #24
  if(huart->Instance==USART2)
 800244e:	d125      	bne.n	800249c <HAL_UART_MspInit+0x58>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8002450:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
    PA15 (JTDI)     ------> USART2_RX 
    */
    GPIO_InitStruct.Pin = VCP_TX_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002454:	2403      	movs	r4, #3
    __HAL_RCC_USART2_CLK_ENABLE();
 8002456:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8002458:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800245c:	659a      	str	r2, [r3, #88]	; 0x58
 800245e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002460:	9404      	str	r4, [sp, #16]
    __HAL_RCC_USART2_CLK_ENABLE();
 8002462:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002466:	9300      	str	r3, [sp, #0]
 8002468:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = VCP_TX_Pin;
 800246a:	2304      	movs	r3, #4
 800246c:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800246e:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002470:	2307      	movs	r3, #7
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002472:	2500      	movs	r5, #0
    HAL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);
 8002474:	a901      	add	r1, sp, #4
 8002476:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800247a:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800247c:	9602      	str	r6, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800247e:	9503      	str	r5, [sp, #12]
    HAL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);
 8002480:	f7fe fdc0 	bl	8001004 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = VCP_RX_Pin;
 8002484:	f44f 4300 	mov.w	r3, #32768	; 0x8000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF3_USART2;
    HAL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 8002488:	a901      	add	r1, sp, #4
 800248a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
    GPIO_InitStruct.Pin = VCP_RX_Pin;
 800248e:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002490:	9602      	str	r6, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002492:	9503      	str	r5, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002494:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF3_USART2;
 8002496:	9405      	str	r4, [sp, #20]
    HAL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 8002498:	f7fe fdb4 	bl	8001004 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800249c:	b006      	add	sp, #24
 800249e:	bd70      	pop	{r4, r5, r6, pc}
 80024a0:	40004400 	.word	0x40004400

080024a4 <SysTick_Handler>:

/**
* @brief This function handles System tick timer.
*/
void SysTick_Handler(void)
{
 80024a4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80024a6:	f7fe fd23 	bl	8000ef0 <HAL_IncTick>
  HAL_SYSTICK_IRQHandler();
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80024aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_SYSTICK_IRQHandler();
 80024ae:	f7fe bda4 	b.w	8000ffa <HAL_SYSTICK_IRQHandler>
	...

080024b4 <SystemInit>:

void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80024b4:	490f      	ldr	r1, [pc, #60]	; (80024f4 <SystemInit+0x40>)
 80024b6:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 80024ba:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80024be:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR |= RCC_CR_MSION;
 80024c2:	4b0d      	ldr	r3, [pc, #52]	; (80024f8 <SystemInit+0x44>)
 80024c4:	681a      	ldr	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000U;
 80024c6:	2000      	movs	r0, #0
  RCC->CR |= RCC_CR_MSION;
 80024c8:	f042 0201 	orr.w	r2, r2, #1
 80024cc:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000U;
 80024ce:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON , HSION, and PLLON bits */
  RCC->CR &= 0xEAF6FFFFU;
 80024d0:	681a      	ldr	r2, [r3, #0]
 80024d2:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 80024d6:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 80024da:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x00001000U;
 80024dc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80024e0:	60da      	str	r2, [r3, #12]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 80024e2:	681a      	ldr	r2, [r3, #0]
 80024e4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80024e8:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000U;
 80024ea:	6198      	str	r0, [r3, #24]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80024ec:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80024f0:	608b      	str	r3, [r1, #8]
 80024f2:	4770      	bx	lr
 80024f4:	e000ed00 	.word	0xe000ed00
 80024f8:	40021000 	.word	0x40021000

080024fc <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 80024fc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002534 <LoopForever+0x2>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8002500:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8002502:	e003      	b.n	800250c <LoopCopyDataInit>

08002504 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8002504:	4b0c      	ldr	r3, [pc, #48]	; (8002538 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8002506:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8002508:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 800250a:	3104      	adds	r1, #4

0800250c <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 800250c:	480b      	ldr	r0, [pc, #44]	; (800253c <LoopForever+0xa>)
	ldr	r3, =_edata
 800250e:	4b0c      	ldr	r3, [pc, #48]	; (8002540 <LoopForever+0xe>)
	adds	r2, r0, r1
 8002510:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8002512:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8002514:	d3f6      	bcc.n	8002504 <CopyDataInit>
	ldr	r2, =_sbss
 8002516:	4a0b      	ldr	r2, [pc, #44]	; (8002544 <LoopForever+0x12>)
	b	LoopFillZerobss
 8002518:	e002      	b.n	8002520 <LoopFillZerobss>

0800251a <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 800251a:	2300      	movs	r3, #0
	str	r3, [r2], #4
 800251c:	f842 3b04 	str.w	r3, [r2], #4

08002520 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8002520:	4b09      	ldr	r3, [pc, #36]	; (8002548 <LoopForever+0x16>)
	cmp	r2, r3
 8002522:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8002524:	d3f9      	bcc.n	800251a <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8002526:	f7ff ffc5 	bl	80024b4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800252a:	f000 f811 	bl	8002550 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 800252e:	f7ff febb 	bl	80022a8 <main>

08002532 <LoopForever>:

LoopForever:
    b LoopForever
 8002532:	e7fe      	b.n	8002532 <LoopForever>
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8002534:	20010000 	.word	0x20010000
	ldr	r3, =_sidata
 8002538:	080068f0 	.word	0x080068f0
	ldr	r0, =_sdata
 800253c:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8002540:	20000674 	.word	0x20000674
	ldr	r2, =_sbss
 8002544:	20000674 	.word	0x20000674
	ldr	r3, = _ebss
 8002548:	20000754 	.word	0x20000754

0800254c <ADC1_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 800254c:	e7fe      	b.n	800254c <ADC1_IRQHandler>
	...

08002550 <__libc_init_array>:
 8002550:	b570      	push	{r4, r5, r6, lr}
 8002552:	4e0d      	ldr	r6, [pc, #52]	; (8002588 <__libc_init_array+0x38>)
 8002554:	4c0d      	ldr	r4, [pc, #52]	; (800258c <__libc_init_array+0x3c>)
 8002556:	1ba4      	subs	r4, r4, r6
 8002558:	10a4      	asrs	r4, r4, #2
 800255a:	2500      	movs	r5, #0
 800255c:	42a5      	cmp	r5, r4
 800255e:	d109      	bne.n	8002574 <__libc_init_array+0x24>
 8002560:	4e0b      	ldr	r6, [pc, #44]	; (8002590 <__libc_init_array+0x40>)
 8002562:	4c0c      	ldr	r4, [pc, #48]	; (8002594 <__libc_init_array+0x44>)
 8002564:	f003 ff56 	bl	8006414 <_init>
 8002568:	1ba4      	subs	r4, r4, r6
 800256a:	10a4      	asrs	r4, r4, #2
 800256c:	2500      	movs	r5, #0
 800256e:	42a5      	cmp	r5, r4
 8002570:	d105      	bne.n	800257e <__libc_init_array+0x2e>
 8002572:	bd70      	pop	{r4, r5, r6, pc}
 8002574:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002578:	4798      	blx	r3
 800257a:	3501      	adds	r5, #1
 800257c:	e7ee      	b.n	800255c <__libc_init_array+0xc>
 800257e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002582:	4798      	blx	r3
 8002584:	3501      	adds	r5, #1
 8002586:	e7f2      	b.n	800256e <__libc_init_array+0x1e>
 8002588:	080068e8 	.word	0x080068e8
 800258c:	080068e8 	.word	0x080068e8
 8002590:	080068e8 	.word	0x080068e8
 8002594:	080068ec 	.word	0x080068ec

08002598 <sprintf>:
 8002598:	b40e      	push	{r1, r2, r3}
 800259a:	b500      	push	{lr}
 800259c:	b09c      	sub	sp, #112	; 0x70
 800259e:	f44f 7102 	mov.w	r1, #520	; 0x208
 80025a2:	ab1d      	add	r3, sp, #116	; 0x74
 80025a4:	f8ad 1014 	strh.w	r1, [sp, #20]
 80025a8:	9002      	str	r0, [sp, #8]
 80025aa:	9006      	str	r0, [sp, #24]
 80025ac:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80025b0:	480a      	ldr	r0, [pc, #40]	; (80025dc <sprintf+0x44>)
 80025b2:	9104      	str	r1, [sp, #16]
 80025b4:	9107      	str	r1, [sp, #28]
 80025b6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80025ba:	f853 2b04 	ldr.w	r2, [r3], #4
 80025be:	f8ad 1016 	strh.w	r1, [sp, #22]
 80025c2:	6800      	ldr	r0, [r0, #0]
 80025c4:	9301      	str	r3, [sp, #4]
 80025c6:	a902      	add	r1, sp, #8
 80025c8:	f000 f80a 	bl	80025e0 <_svfprintf_r>
 80025cc:	9b02      	ldr	r3, [sp, #8]
 80025ce:	2200      	movs	r2, #0
 80025d0:	701a      	strb	r2, [r3, #0]
 80025d2:	b01c      	add	sp, #112	; 0x70
 80025d4:	f85d eb04 	ldr.w	lr, [sp], #4
 80025d8:	b003      	add	sp, #12
 80025da:	4770      	bx	lr
 80025dc:	20000004 	.word	0x20000004

080025e0 <_svfprintf_r>:
 80025e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025e4:	b0bd      	sub	sp, #244	; 0xf4
 80025e6:	468a      	mov	sl, r1
 80025e8:	4615      	mov	r5, r2
 80025ea:	461f      	mov	r7, r3
 80025ec:	4683      	mov	fp, r0
 80025ee:	f001 fe25 	bl	800423c <_localeconv_r>
 80025f2:	6803      	ldr	r3, [r0, #0]
 80025f4:	930d      	str	r3, [sp, #52]	; 0x34
 80025f6:	4618      	mov	r0, r3
 80025f8:	f7fd fdea 	bl	80001d0 <strlen>
 80025fc:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002600:	9008      	str	r0, [sp, #32]
 8002602:	061b      	lsls	r3, r3, #24
 8002604:	d518      	bpl.n	8002638 <_svfprintf_r+0x58>
 8002606:	f8da 3010 	ldr.w	r3, [sl, #16]
 800260a:	b9ab      	cbnz	r3, 8002638 <_svfprintf_r+0x58>
 800260c:	2140      	movs	r1, #64	; 0x40
 800260e:	4658      	mov	r0, fp
 8002610:	f001 fe2a 	bl	8004268 <_malloc_r>
 8002614:	f8ca 0000 	str.w	r0, [sl]
 8002618:	f8ca 0010 	str.w	r0, [sl, #16]
 800261c:	b948      	cbnz	r0, 8002632 <_svfprintf_r+0x52>
 800261e:	230c      	movs	r3, #12
 8002620:	f8cb 3000 	str.w	r3, [fp]
 8002624:	f04f 33ff 	mov.w	r3, #4294967295
 8002628:	9309      	str	r3, [sp, #36]	; 0x24
 800262a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800262c:	b03d      	add	sp, #244	; 0xf4
 800262e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002632:	2340      	movs	r3, #64	; 0x40
 8002634:	f8ca 3014 	str.w	r3, [sl, #20]
 8002638:	ed9f 7b99 	vldr	d7, [pc, #612]	; 80028a0 <_svfprintf_r+0x2c0>
 800263c:	ed8d 7b06 	vstr	d7, [sp, #24]
 8002640:	2300      	movs	r3, #0
 8002642:	ac2c      	add	r4, sp, #176	; 0xb0
 8002644:	941f      	str	r4, [sp, #124]	; 0x7c
 8002646:	9321      	str	r3, [sp, #132]	; 0x84
 8002648:	9320      	str	r3, [sp, #128]	; 0x80
 800264a:	9505      	str	r5, [sp, #20]
 800264c:	9303      	str	r3, [sp, #12]
 800264e:	9311      	str	r3, [sp, #68]	; 0x44
 8002650:	9310      	str	r3, [sp, #64]	; 0x40
 8002652:	9309      	str	r3, [sp, #36]	; 0x24
 8002654:	9d05      	ldr	r5, [sp, #20]
 8002656:	462b      	mov	r3, r5
 8002658:	f813 2b01 	ldrb.w	r2, [r3], #1
 800265c:	b112      	cbz	r2, 8002664 <_svfprintf_r+0x84>
 800265e:	2a25      	cmp	r2, #37	; 0x25
 8002660:	f040 8083 	bne.w	800276a <_svfprintf_r+0x18a>
 8002664:	9b05      	ldr	r3, [sp, #20]
 8002666:	1aee      	subs	r6, r5, r3
 8002668:	d00d      	beq.n	8002686 <_svfprintf_r+0xa6>
 800266a:	e884 0048 	stmia.w	r4, {r3, r6}
 800266e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002670:	4433      	add	r3, r6
 8002672:	9321      	str	r3, [sp, #132]	; 0x84
 8002674:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002676:	3301      	adds	r3, #1
 8002678:	2b07      	cmp	r3, #7
 800267a:	9320      	str	r3, [sp, #128]	; 0x80
 800267c:	dc77      	bgt.n	800276e <_svfprintf_r+0x18e>
 800267e:	3408      	adds	r4, #8
 8002680:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002682:	4433      	add	r3, r6
 8002684:	9309      	str	r3, [sp, #36]	; 0x24
 8002686:	782b      	ldrb	r3, [r5, #0]
 8002688:	2b00      	cmp	r3, #0
 800268a:	f000 8729 	beq.w	80034e0 <_svfprintf_r+0xf00>
 800268e:	2300      	movs	r3, #0
 8002690:	1c69      	adds	r1, r5, #1
 8002692:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8002696:	461a      	mov	r2, r3
 8002698:	f04f 39ff 	mov.w	r9, #4294967295
 800269c:	930a      	str	r3, [sp, #40]	; 0x28
 800269e:	461d      	mov	r5, r3
 80026a0:	200a      	movs	r0, #10
 80026a2:	1c4e      	adds	r6, r1, #1
 80026a4:	7809      	ldrb	r1, [r1, #0]
 80026a6:	9605      	str	r6, [sp, #20]
 80026a8:	9102      	str	r1, [sp, #8]
 80026aa:	9902      	ldr	r1, [sp, #8]
 80026ac:	3920      	subs	r1, #32
 80026ae:	2958      	cmp	r1, #88	; 0x58
 80026b0:	f200 8418 	bhi.w	8002ee4 <_svfprintf_r+0x904>
 80026b4:	e8df f011 	tbh	[pc, r1, lsl #1]
 80026b8:	041600a6 	.word	0x041600a6
 80026bc:	00ab0416 	.word	0x00ab0416
 80026c0:	04160416 	.word	0x04160416
 80026c4:	04160416 	.word	0x04160416
 80026c8:	04160416 	.word	0x04160416
 80026cc:	006500ae 	.word	0x006500ae
 80026d0:	00b70416 	.word	0x00b70416
 80026d4:	041600ba 	.word	0x041600ba
 80026d8:	00da00d7 	.word	0x00da00d7
 80026dc:	00da00da 	.word	0x00da00da
 80026e0:	00da00da 	.word	0x00da00da
 80026e4:	00da00da 	.word	0x00da00da
 80026e8:	00da00da 	.word	0x00da00da
 80026ec:	04160416 	.word	0x04160416
 80026f0:	04160416 	.word	0x04160416
 80026f4:	04160416 	.word	0x04160416
 80026f8:	04160416 	.word	0x04160416
 80026fc:	04160416 	.word	0x04160416
 8002700:	012b0115 	.word	0x012b0115
 8002704:	012b0416 	.word	0x012b0416
 8002708:	04160416 	.word	0x04160416
 800270c:	04160416 	.word	0x04160416
 8002710:	041600ed 	.word	0x041600ed
 8002714:	03400416 	.word	0x03400416
 8002718:	04160416 	.word	0x04160416
 800271c:	04160416 	.word	0x04160416
 8002720:	03a80416 	.word	0x03a80416
 8002724:	04160416 	.word	0x04160416
 8002728:	04160086 	.word	0x04160086
 800272c:	04160416 	.word	0x04160416
 8002730:	04160416 	.word	0x04160416
 8002734:	04160416 	.word	0x04160416
 8002738:	04160416 	.word	0x04160416
 800273c:	01070416 	.word	0x01070416
 8002740:	012b006b 	.word	0x012b006b
 8002744:	012b012b 	.word	0x012b012b
 8002748:	006b00f0 	.word	0x006b00f0
 800274c:	04160416 	.word	0x04160416
 8002750:	041600fa 	.word	0x041600fa
 8002754:	03420322 	.word	0x03420322
 8002758:	01010376 	.word	0x01010376
 800275c:	03870416 	.word	0x03870416
 8002760:	03aa0416 	.word	0x03aa0416
 8002764:	04160416 	.word	0x04160416
 8002768:	03c2      	.short	0x03c2
 800276a:	461d      	mov	r5, r3
 800276c:	e773      	b.n	8002656 <_svfprintf_r+0x76>
 800276e:	aa1f      	add	r2, sp, #124	; 0x7c
 8002770:	4651      	mov	r1, sl
 8002772:	4658      	mov	r0, fp
 8002774:	f002 fa7e 	bl	8004c74 <__ssprint_r>
 8002778:	2800      	cmp	r0, #0
 800277a:	f040 8692 	bne.w	80034a2 <_svfprintf_r+0xec2>
 800277e:	ac2c      	add	r4, sp, #176	; 0xb0
 8002780:	e77e      	b.n	8002680 <_svfprintf_r+0xa0>
 8002782:	2301      	movs	r3, #1
 8002784:	222b      	movs	r2, #43	; 0x2b
 8002786:	9905      	ldr	r1, [sp, #20]
 8002788:	e78b      	b.n	80026a2 <_svfprintf_r+0xc2>
 800278a:	460f      	mov	r7, r1
 800278c:	e7fb      	b.n	8002786 <_svfprintf_r+0x1a6>
 800278e:	b10b      	cbz	r3, 8002794 <_svfprintf_r+0x1b4>
 8002790:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002794:	06ae      	lsls	r6, r5, #26
 8002796:	f140 80aa 	bpl.w	80028ee <_svfprintf_r+0x30e>
 800279a:	3707      	adds	r7, #7
 800279c:	f027 0707 	bic.w	r7, r7, #7
 80027a0:	f107 0308 	add.w	r3, r7, #8
 80027a4:	e9d7 6700 	ldrd	r6, r7, [r7]
 80027a8:	9304      	str	r3, [sp, #16]
 80027aa:	2e00      	cmp	r6, #0
 80027ac:	f177 0300 	sbcs.w	r3, r7, #0
 80027b0:	da06      	bge.n	80027c0 <_svfprintf_r+0x1e0>
 80027b2:	4276      	negs	r6, r6
 80027b4:	f04f 032d 	mov.w	r3, #45	; 0x2d
 80027b8:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 80027bc:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 80027c0:	2301      	movs	r3, #1
 80027c2:	e2ca      	b.n	8002d5a <_svfprintf_r+0x77a>
 80027c4:	b10b      	cbz	r3, 80027ca <_svfprintf_r+0x1ea>
 80027c6:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 80027ca:	4b37      	ldr	r3, [pc, #220]	; (80028a8 <_svfprintf_r+0x2c8>)
 80027cc:	9311      	str	r3, [sp, #68]	; 0x44
 80027ce:	06ab      	lsls	r3, r5, #26
 80027d0:	f140 8339 	bpl.w	8002e46 <_svfprintf_r+0x866>
 80027d4:	3707      	adds	r7, #7
 80027d6:	f027 0707 	bic.w	r7, r7, #7
 80027da:	f107 0308 	add.w	r3, r7, #8
 80027de:	e9d7 6700 	ldrd	r6, r7, [r7]
 80027e2:	9304      	str	r3, [sp, #16]
 80027e4:	07e8      	lsls	r0, r5, #31
 80027e6:	d50b      	bpl.n	8002800 <_svfprintf_r+0x220>
 80027e8:	ea56 0307 	orrs.w	r3, r6, r7
 80027ec:	d008      	beq.n	8002800 <_svfprintf_r+0x220>
 80027ee:	2330      	movs	r3, #48	; 0x30
 80027f0:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 80027f4:	f89d 3008 	ldrb.w	r3, [sp, #8]
 80027f8:	f88d 3061 	strb.w	r3, [sp, #97]	; 0x61
 80027fc:	f045 0502 	orr.w	r5, r5, #2
 8002800:	2302      	movs	r3, #2
 8002802:	e2a7      	b.n	8002d54 <_svfprintf_r+0x774>
 8002804:	2a00      	cmp	r2, #0
 8002806:	d1be      	bne.n	8002786 <_svfprintf_r+0x1a6>
 8002808:	2301      	movs	r3, #1
 800280a:	2220      	movs	r2, #32
 800280c:	e7bb      	b.n	8002786 <_svfprintf_r+0x1a6>
 800280e:	f045 0501 	orr.w	r5, r5, #1
 8002812:	e7b8      	b.n	8002786 <_svfprintf_r+0x1a6>
 8002814:	683e      	ldr	r6, [r7, #0]
 8002816:	960a      	str	r6, [sp, #40]	; 0x28
 8002818:	2e00      	cmp	r6, #0
 800281a:	f107 0104 	add.w	r1, r7, #4
 800281e:	dab4      	bge.n	800278a <_svfprintf_r+0x1aa>
 8002820:	4276      	negs	r6, r6
 8002822:	960a      	str	r6, [sp, #40]	; 0x28
 8002824:	460f      	mov	r7, r1
 8002826:	f045 0504 	orr.w	r5, r5, #4
 800282a:	e7ac      	b.n	8002786 <_svfprintf_r+0x1a6>
 800282c:	9905      	ldr	r1, [sp, #20]
 800282e:	1c4e      	adds	r6, r1, #1
 8002830:	7809      	ldrb	r1, [r1, #0]
 8002832:	9102      	str	r1, [sp, #8]
 8002834:	292a      	cmp	r1, #42	; 0x2a
 8002836:	d010      	beq.n	800285a <_svfprintf_r+0x27a>
 8002838:	f04f 0900 	mov.w	r9, #0
 800283c:	9605      	str	r6, [sp, #20]
 800283e:	9902      	ldr	r1, [sp, #8]
 8002840:	3930      	subs	r1, #48	; 0x30
 8002842:	2909      	cmp	r1, #9
 8002844:	f63f af31 	bhi.w	80026aa <_svfprintf_r+0xca>
 8002848:	fb00 1909 	mla	r9, r0, r9, r1
 800284c:	9905      	ldr	r1, [sp, #20]
 800284e:	460e      	mov	r6, r1
 8002850:	f816 1b01 	ldrb.w	r1, [r6], #1
 8002854:	9102      	str	r1, [sp, #8]
 8002856:	9605      	str	r6, [sp, #20]
 8002858:	e7f1      	b.n	800283e <_svfprintf_r+0x25e>
 800285a:	6839      	ldr	r1, [r7, #0]
 800285c:	9605      	str	r6, [sp, #20]
 800285e:	ea41 79e1 	orr.w	r9, r1, r1, asr #31
 8002862:	3704      	adds	r7, #4
 8002864:	e78f      	b.n	8002786 <_svfprintf_r+0x1a6>
 8002866:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 800286a:	e78c      	b.n	8002786 <_svfprintf_r+0x1a6>
 800286c:	2100      	movs	r1, #0
 800286e:	910a      	str	r1, [sp, #40]	; 0x28
 8002870:	9902      	ldr	r1, [sp, #8]
 8002872:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8002874:	3930      	subs	r1, #48	; 0x30
 8002876:	fb00 1106 	mla	r1, r0, r6, r1
 800287a:	910a      	str	r1, [sp, #40]	; 0x28
 800287c:	9905      	ldr	r1, [sp, #20]
 800287e:	460e      	mov	r6, r1
 8002880:	f816 1b01 	ldrb.w	r1, [r6], #1
 8002884:	9102      	str	r1, [sp, #8]
 8002886:	9902      	ldr	r1, [sp, #8]
 8002888:	9605      	str	r6, [sp, #20]
 800288a:	3930      	subs	r1, #48	; 0x30
 800288c:	2909      	cmp	r1, #9
 800288e:	d9ef      	bls.n	8002870 <_svfprintf_r+0x290>
 8002890:	e70b      	b.n	80026aa <_svfprintf_r+0xca>
 8002892:	f045 0508 	orr.w	r5, r5, #8
 8002896:	e776      	b.n	8002786 <_svfprintf_r+0x1a6>
 8002898:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 800289c:	e773      	b.n	8002786 <_svfprintf_r+0x1a6>
 800289e:	bf00      	nop
	...
 80028a8:	080064ac 	.word	0x080064ac
 80028ac:	9905      	ldr	r1, [sp, #20]
 80028ae:	7809      	ldrb	r1, [r1, #0]
 80028b0:	296c      	cmp	r1, #108	; 0x6c
 80028b2:	d105      	bne.n	80028c0 <_svfprintf_r+0x2e0>
 80028b4:	9905      	ldr	r1, [sp, #20]
 80028b6:	3101      	adds	r1, #1
 80028b8:	9105      	str	r1, [sp, #20]
 80028ba:	f045 0520 	orr.w	r5, r5, #32
 80028be:	e762      	b.n	8002786 <_svfprintf_r+0x1a6>
 80028c0:	f045 0510 	orr.w	r5, r5, #16
 80028c4:	e75f      	b.n	8002786 <_svfprintf_r+0x1a6>
 80028c6:	1d3b      	adds	r3, r7, #4
 80028c8:	9304      	str	r3, [sp, #16]
 80028ca:	2600      	movs	r6, #0
 80028cc:	683b      	ldr	r3, [r7, #0]
 80028ce:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 80028d2:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 80028d6:	f04f 0901 	mov.w	r9, #1
 80028da:	4637      	mov	r7, r6
 80028dc:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 80028e0:	e11b      	b.n	8002b1a <_svfprintf_r+0x53a>
 80028e2:	b10b      	cbz	r3, 80028e8 <_svfprintf_r+0x308>
 80028e4:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 80028e8:	f045 0510 	orr.w	r5, r5, #16
 80028ec:	e752      	b.n	8002794 <_svfprintf_r+0x1b4>
 80028ee:	f015 0f10 	tst.w	r5, #16
 80028f2:	f107 0304 	add.w	r3, r7, #4
 80028f6:	d003      	beq.n	8002900 <_svfprintf_r+0x320>
 80028f8:	683e      	ldr	r6, [r7, #0]
 80028fa:	9304      	str	r3, [sp, #16]
 80028fc:	17f7      	asrs	r7, r6, #31
 80028fe:	e754      	b.n	80027aa <_svfprintf_r+0x1ca>
 8002900:	683e      	ldr	r6, [r7, #0]
 8002902:	9304      	str	r3, [sp, #16]
 8002904:	f015 0f40 	tst.w	r5, #64	; 0x40
 8002908:	bf18      	it	ne
 800290a:	b236      	sxthne	r6, r6
 800290c:	e7f6      	b.n	80028fc <_svfprintf_r+0x31c>
 800290e:	b10b      	cbz	r3, 8002914 <_svfprintf_r+0x334>
 8002910:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002914:	3707      	adds	r7, #7
 8002916:	f027 0707 	bic.w	r7, r7, #7
 800291a:	f107 0308 	add.w	r3, r7, #8
 800291e:	9304      	str	r3, [sp, #16]
 8002920:	ed97 7b00 	vldr	d7, [r7]
 8002924:	ed8d 7b06 	vstr	d7, [sp, #24]
 8002928:	9b06      	ldr	r3, [sp, #24]
 800292a:	9312      	str	r3, [sp, #72]	; 0x48
 800292c:	9b07      	ldr	r3, [sp, #28]
 800292e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002932:	9313      	str	r3, [sp, #76]	; 0x4c
 8002934:	f04f 32ff 	mov.w	r2, #4294967295
 8002938:	4b4a      	ldr	r3, [pc, #296]	; (8002a64 <_svfprintf_r+0x484>)
 800293a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 800293e:	f7fe f8f1 	bl	8000b24 <__aeabi_dcmpun>
 8002942:	2800      	cmp	r0, #0
 8002944:	f040 85d5 	bne.w	80034f2 <_svfprintf_r+0xf12>
 8002948:	f04f 32ff 	mov.w	r2, #4294967295
 800294c:	4b45      	ldr	r3, [pc, #276]	; (8002a64 <_svfprintf_r+0x484>)
 800294e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 8002952:	f7fe f8c9 	bl	8000ae8 <__aeabi_dcmple>
 8002956:	2800      	cmp	r0, #0
 8002958:	f040 85cb 	bne.w	80034f2 <_svfprintf_r+0xf12>
 800295c:	2200      	movs	r2, #0
 800295e:	2300      	movs	r3, #0
 8002960:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002964:	f7fe f8b6 	bl	8000ad4 <__aeabi_dcmplt>
 8002968:	b110      	cbz	r0, 8002970 <_svfprintf_r+0x390>
 800296a:	232d      	movs	r3, #45	; 0x2d
 800296c:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8002970:	4b3d      	ldr	r3, [pc, #244]	; (8002a68 <_svfprintf_r+0x488>)
 8002972:	4a3e      	ldr	r2, [pc, #248]	; (8002a6c <_svfprintf_r+0x48c>)
 8002974:	9902      	ldr	r1, [sp, #8]
 8002976:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 800297a:	2947      	cmp	r1, #71	; 0x47
 800297c:	bfcc      	ite	gt
 800297e:	4690      	movgt	r8, r2
 8002980:	4698      	movle	r8, r3
 8002982:	f04f 0903 	mov.w	r9, #3
 8002986:	2600      	movs	r6, #0
 8002988:	4637      	mov	r7, r6
 800298a:	e0c6      	b.n	8002b1a <_svfprintf_r+0x53a>
 800298c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8002990:	d022      	beq.n	80029d8 <_svfprintf_r+0x3f8>
 8002992:	9b02      	ldr	r3, [sp, #8]
 8002994:	f023 0320 	bic.w	r3, r3, #32
 8002998:	2b47      	cmp	r3, #71	; 0x47
 800299a:	d104      	bne.n	80029a6 <_svfprintf_r+0x3c6>
 800299c:	f1b9 0f00 	cmp.w	r9, #0
 80029a0:	bf08      	it	eq
 80029a2:	f04f 0901 	moveq.w	r9, #1
 80029a6:	f445 7380 	orr.w	r3, r5, #256	; 0x100
 80029aa:	930c      	str	r3, [sp, #48]	; 0x30
 80029ac:	9b07      	ldr	r3, [sp, #28]
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	da15      	bge.n	80029de <_svfprintf_r+0x3fe>
 80029b2:	9b06      	ldr	r3, [sp, #24]
 80029b4:	930e      	str	r3, [sp, #56]	; 0x38
 80029b6:	9b07      	ldr	r3, [sp, #28]
 80029b8:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80029bc:	930f      	str	r3, [sp, #60]	; 0x3c
 80029be:	232d      	movs	r3, #45	; 0x2d
 80029c0:	930b      	str	r3, [sp, #44]	; 0x2c
 80029c2:	9b02      	ldr	r3, [sp, #8]
 80029c4:	f023 0720 	bic.w	r7, r3, #32
 80029c8:	2f46      	cmp	r7, #70	; 0x46
 80029ca:	d00e      	beq.n	80029ea <_svfprintf_r+0x40a>
 80029cc:	2f45      	cmp	r7, #69	; 0x45
 80029ce:	d146      	bne.n	8002a5e <_svfprintf_r+0x47e>
 80029d0:	f109 0601 	add.w	r6, r9, #1
 80029d4:	2102      	movs	r1, #2
 80029d6:	e00a      	b.n	80029ee <_svfprintf_r+0x40e>
 80029d8:	f04f 0906 	mov.w	r9, #6
 80029dc:	e7e3      	b.n	80029a6 <_svfprintf_r+0x3c6>
 80029de:	ed9d 7b06 	vldr	d7, [sp, #24]
 80029e2:	2300      	movs	r3, #0
 80029e4:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 80029e8:	e7ea      	b.n	80029c0 <_svfprintf_r+0x3e0>
 80029ea:	464e      	mov	r6, r9
 80029ec:	2103      	movs	r1, #3
 80029ee:	ab1d      	add	r3, sp, #116	; 0x74
 80029f0:	9301      	str	r3, [sp, #4]
 80029f2:	ab1a      	add	r3, sp, #104	; 0x68
 80029f4:	9300      	str	r3, [sp, #0]
 80029f6:	4632      	mov	r2, r6
 80029f8:	ab19      	add	r3, sp, #100	; 0x64
 80029fa:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
 80029fe:	4658      	mov	r0, fp
 8002a00:	f000 fe4e 	bl	80036a0 <_dtoa_r>
 8002a04:	2f47      	cmp	r7, #71	; 0x47
 8002a06:	4680      	mov	r8, r0
 8002a08:	d102      	bne.n	8002a10 <_svfprintf_r+0x430>
 8002a0a:	07e8      	lsls	r0, r5, #31
 8002a0c:	f140 857e 	bpl.w	800350c <_svfprintf_r+0xf2c>
 8002a10:	eb08 0306 	add.w	r3, r8, r6
 8002a14:	2f46      	cmp	r7, #70	; 0x46
 8002a16:	9303      	str	r3, [sp, #12]
 8002a18:	d111      	bne.n	8002a3e <_svfprintf_r+0x45e>
 8002a1a:	f898 3000 	ldrb.w	r3, [r8]
 8002a1e:	2b30      	cmp	r3, #48	; 0x30
 8002a20:	d109      	bne.n	8002a36 <_svfprintf_r+0x456>
 8002a22:	2200      	movs	r2, #0
 8002a24:	2300      	movs	r3, #0
 8002a26:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8002a2a:	f7fe f849 	bl	8000ac0 <__aeabi_dcmpeq>
 8002a2e:	b910      	cbnz	r0, 8002a36 <_svfprintf_r+0x456>
 8002a30:	f1c6 0601 	rsb	r6, r6, #1
 8002a34:	9619      	str	r6, [sp, #100]	; 0x64
 8002a36:	9a03      	ldr	r2, [sp, #12]
 8002a38:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002a3a:	441a      	add	r2, r3
 8002a3c:	9203      	str	r2, [sp, #12]
 8002a3e:	2200      	movs	r2, #0
 8002a40:	2300      	movs	r3, #0
 8002a42:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8002a46:	f7fe f83b 	bl	8000ac0 <__aeabi_dcmpeq>
 8002a4a:	b988      	cbnz	r0, 8002a70 <_svfprintf_r+0x490>
 8002a4c:	2230      	movs	r2, #48	; 0x30
 8002a4e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002a50:	9903      	ldr	r1, [sp, #12]
 8002a52:	4299      	cmp	r1, r3
 8002a54:	d90e      	bls.n	8002a74 <_svfprintf_r+0x494>
 8002a56:	1c59      	adds	r1, r3, #1
 8002a58:	911d      	str	r1, [sp, #116]	; 0x74
 8002a5a:	701a      	strb	r2, [r3, #0]
 8002a5c:	e7f7      	b.n	8002a4e <_svfprintf_r+0x46e>
 8002a5e:	464e      	mov	r6, r9
 8002a60:	e7b8      	b.n	80029d4 <_svfprintf_r+0x3f4>
 8002a62:	bf00      	nop
 8002a64:	7fefffff 	.word	0x7fefffff
 8002a68:	0800649c 	.word	0x0800649c
 8002a6c:	080064a0 	.word	0x080064a0
 8002a70:	9b03      	ldr	r3, [sp, #12]
 8002a72:	931d      	str	r3, [sp, #116]	; 0x74
 8002a74:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002a76:	2f47      	cmp	r7, #71	; 0x47
 8002a78:	eba3 0308 	sub.w	r3, r3, r8
 8002a7c:	9303      	str	r3, [sp, #12]
 8002a7e:	f040 80fa 	bne.w	8002c76 <_svfprintf_r+0x696>
 8002a82:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002a84:	1cd9      	adds	r1, r3, #3
 8002a86:	db02      	blt.n	8002a8e <_svfprintf_r+0x4ae>
 8002a88:	4599      	cmp	r9, r3
 8002a8a:	f280 8120 	bge.w	8002cce <_svfprintf_r+0x6ee>
 8002a8e:	9b02      	ldr	r3, [sp, #8]
 8002a90:	3b02      	subs	r3, #2
 8002a92:	9302      	str	r3, [sp, #8]
 8002a94:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8002a96:	f89d 1008 	ldrb.w	r1, [sp, #8]
 8002a9a:	f88d 106c 	strb.w	r1, [sp, #108]	; 0x6c
 8002a9e:	1e53      	subs	r3, r2, #1
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	9319      	str	r3, [sp, #100]	; 0x64
 8002aa4:	bfb6      	itet	lt
 8002aa6:	f1c2 0301 	rsblt	r3, r2, #1
 8002aaa:	222b      	movge	r2, #43	; 0x2b
 8002aac:	222d      	movlt	r2, #45	; 0x2d
 8002aae:	2b09      	cmp	r3, #9
 8002ab0:	f88d 206d 	strb.w	r2, [sp, #109]	; 0x6d
 8002ab4:	f340 80fb 	ble.w	8002cae <_svfprintf_r+0x6ce>
 8002ab8:	f10d 027b 	add.w	r2, sp, #123	; 0x7b
 8002abc:	260a      	movs	r6, #10
 8002abe:	fb93 f0f6 	sdiv	r0, r3, r6
 8002ac2:	fb06 3310 	mls	r3, r6, r0, r3
 8002ac6:	3330      	adds	r3, #48	; 0x30
 8002ac8:	2809      	cmp	r0, #9
 8002aca:	f802 3c01 	strb.w	r3, [r2, #-1]
 8002ace:	f102 31ff 	add.w	r1, r2, #4294967295
 8002ad2:	4603      	mov	r3, r0
 8002ad4:	f300 80e4 	bgt.w	8002ca0 <_svfprintf_r+0x6c0>
 8002ad8:	3330      	adds	r3, #48	; 0x30
 8002ada:	f801 3c01 	strb.w	r3, [r1, #-1]
 8002ade:	3a02      	subs	r2, #2
 8002ae0:	f10d 036e 	add.w	r3, sp, #110	; 0x6e
 8002ae4:	f10d 007b 	add.w	r0, sp, #123	; 0x7b
 8002ae8:	4282      	cmp	r2, r0
 8002aea:	4619      	mov	r1, r3
 8002aec:	f0c0 80da 	bcc.w	8002ca4 <_svfprintf_r+0x6c4>
 8002af0:	9a03      	ldr	r2, [sp, #12]
 8002af2:	ab1b      	add	r3, sp, #108	; 0x6c
 8002af4:	1acb      	subs	r3, r1, r3
 8002af6:	2a01      	cmp	r2, #1
 8002af8:	9310      	str	r3, [sp, #64]	; 0x40
 8002afa:	eb03 0902 	add.w	r9, r3, r2
 8002afe:	dc02      	bgt.n	8002b06 <_svfprintf_r+0x526>
 8002b00:	f015 0701 	ands.w	r7, r5, #1
 8002b04:	d002      	beq.n	8002b0c <_svfprintf_r+0x52c>
 8002b06:	9b08      	ldr	r3, [sp, #32]
 8002b08:	2700      	movs	r7, #0
 8002b0a:	4499      	add	r9, r3
 8002b0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002b0e:	b113      	cbz	r3, 8002b16 <_svfprintf_r+0x536>
 8002b10:	232d      	movs	r3, #45	; 0x2d
 8002b12:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8002b16:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002b18:	2600      	movs	r6, #0
 8002b1a:	454e      	cmp	r6, r9
 8002b1c:	4633      	mov	r3, r6
 8002b1e:	bfb8      	it	lt
 8002b20:	464b      	movlt	r3, r9
 8002b22:	930b      	str	r3, [sp, #44]	; 0x2c
 8002b24:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 8002b28:	b113      	cbz	r3, 8002b30 <_svfprintf_r+0x550>
 8002b2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002b2c:	3301      	adds	r3, #1
 8002b2e:	930b      	str	r3, [sp, #44]	; 0x2c
 8002b30:	f015 0302 	ands.w	r3, r5, #2
 8002b34:	9314      	str	r3, [sp, #80]	; 0x50
 8002b36:	bf1e      	ittt	ne
 8002b38:	9b0b      	ldrne	r3, [sp, #44]	; 0x2c
 8002b3a:	3302      	addne	r3, #2
 8002b3c:	930b      	strne	r3, [sp, #44]	; 0x2c
 8002b3e:	f015 0384 	ands.w	r3, r5, #132	; 0x84
 8002b42:	9315      	str	r3, [sp, #84]	; 0x54
 8002b44:	d118      	bne.n	8002b78 <_svfprintf_r+0x598>
 8002b46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002b48:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002b4a:	1a9b      	subs	r3, r3, r2
 8002b4c:	2b00      	cmp	r3, #0
 8002b4e:	930c      	str	r3, [sp, #48]	; 0x30
 8002b50:	dd12      	ble.n	8002b78 <_svfprintf_r+0x598>
 8002b52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002b54:	2b10      	cmp	r3, #16
 8002b56:	4ba9      	ldr	r3, [pc, #676]	; (8002dfc <_svfprintf_r+0x81c>)
 8002b58:	6023      	str	r3, [r4, #0]
 8002b5a:	f300 81d5 	bgt.w	8002f08 <_svfprintf_r+0x928>
 8002b5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002b60:	6063      	str	r3, [r4, #4]
 8002b62:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002b64:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002b66:	4413      	add	r3, r2
 8002b68:	9321      	str	r3, [sp, #132]	; 0x84
 8002b6a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002b6c:	3301      	adds	r3, #1
 8002b6e:	2b07      	cmp	r3, #7
 8002b70:	9320      	str	r3, [sp, #128]	; 0x80
 8002b72:	f300 81e2 	bgt.w	8002f3a <_svfprintf_r+0x95a>
 8002b76:	3408      	adds	r4, #8
 8002b78:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 8002b7c:	b173      	cbz	r3, 8002b9c <_svfprintf_r+0x5bc>
 8002b7e:	f10d 035f 	add.w	r3, sp, #95	; 0x5f
 8002b82:	6023      	str	r3, [r4, #0]
 8002b84:	2301      	movs	r3, #1
 8002b86:	6063      	str	r3, [r4, #4]
 8002b88:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002b8a:	3301      	adds	r3, #1
 8002b8c:	9321      	str	r3, [sp, #132]	; 0x84
 8002b8e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002b90:	3301      	adds	r3, #1
 8002b92:	2b07      	cmp	r3, #7
 8002b94:	9320      	str	r3, [sp, #128]	; 0x80
 8002b96:	f300 81da 	bgt.w	8002f4e <_svfprintf_r+0x96e>
 8002b9a:	3408      	adds	r4, #8
 8002b9c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8002b9e:	b16b      	cbz	r3, 8002bbc <_svfprintf_r+0x5dc>
 8002ba0:	ab18      	add	r3, sp, #96	; 0x60
 8002ba2:	6023      	str	r3, [r4, #0]
 8002ba4:	2302      	movs	r3, #2
 8002ba6:	6063      	str	r3, [r4, #4]
 8002ba8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002baa:	3302      	adds	r3, #2
 8002bac:	9321      	str	r3, [sp, #132]	; 0x84
 8002bae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002bb0:	3301      	adds	r3, #1
 8002bb2:	2b07      	cmp	r3, #7
 8002bb4:	9320      	str	r3, [sp, #128]	; 0x80
 8002bb6:	f300 81d4 	bgt.w	8002f62 <_svfprintf_r+0x982>
 8002bba:	3408      	adds	r4, #8
 8002bbc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002bbe:	2b80      	cmp	r3, #128	; 0x80
 8002bc0:	d114      	bne.n	8002bec <_svfprintf_r+0x60c>
 8002bc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002bc4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002bc6:	1a9b      	subs	r3, r3, r2
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	dd0f      	ble.n	8002bec <_svfprintf_r+0x60c>
 8002bcc:	4a8c      	ldr	r2, [pc, #560]	; (8002e00 <_svfprintf_r+0x820>)
 8002bce:	6022      	str	r2, [r4, #0]
 8002bd0:	2b10      	cmp	r3, #16
 8002bd2:	f300 81d0 	bgt.w	8002f76 <_svfprintf_r+0x996>
 8002bd6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002bd8:	6063      	str	r3, [r4, #4]
 8002bda:	4413      	add	r3, r2
 8002bdc:	9321      	str	r3, [sp, #132]	; 0x84
 8002bde:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002be0:	3301      	adds	r3, #1
 8002be2:	2b07      	cmp	r3, #7
 8002be4:	9320      	str	r3, [sp, #128]	; 0x80
 8002be6:	f300 81df 	bgt.w	8002fa8 <_svfprintf_r+0x9c8>
 8002bea:	3408      	adds	r4, #8
 8002bec:	eba6 0609 	sub.w	r6, r6, r9
 8002bf0:	2e00      	cmp	r6, #0
 8002bf2:	dd0f      	ble.n	8002c14 <_svfprintf_r+0x634>
 8002bf4:	4b82      	ldr	r3, [pc, #520]	; (8002e00 <_svfprintf_r+0x820>)
 8002bf6:	6023      	str	r3, [r4, #0]
 8002bf8:	2e10      	cmp	r6, #16
 8002bfa:	f300 81df 	bgt.w	8002fbc <_svfprintf_r+0x9dc>
 8002bfe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002c00:	9821      	ldr	r0, [sp, #132]	; 0x84
 8002c02:	6066      	str	r6, [r4, #4]
 8002c04:	3301      	adds	r3, #1
 8002c06:	4406      	add	r6, r0
 8002c08:	2b07      	cmp	r3, #7
 8002c0a:	9621      	str	r6, [sp, #132]	; 0x84
 8002c0c:	9320      	str	r3, [sp, #128]	; 0x80
 8002c0e:	f300 81ec 	bgt.w	8002fea <_svfprintf_r+0xa0a>
 8002c12:	3408      	adds	r4, #8
 8002c14:	05eb      	lsls	r3, r5, #23
 8002c16:	f100 81f2 	bmi.w	8002ffe <_svfprintf_r+0xa1e>
 8002c1a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002c1c:	e884 0300 	stmia.w	r4, {r8, r9}
 8002c20:	444b      	add	r3, r9
 8002c22:	9321      	str	r3, [sp, #132]	; 0x84
 8002c24:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002c26:	3301      	adds	r3, #1
 8002c28:	2b07      	cmp	r3, #7
 8002c2a:	9320      	str	r3, [sp, #128]	; 0x80
 8002c2c:	f340 8419 	ble.w	8003462 <_svfprintf_r+0xe82>
 8002c30:	aa1f      	add	r2, sp, #124	; 0x7c
 8002c32:	4651      	mov	r1, sl
 8002c34:	4658      	mov	r0, fp
 8002c36:	f002 f81d 	bl	8004c74 <__ssprint_r>
 8002c3a:	2800      	cmp	r0, #0
 8002c3c:	f040 8431 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8002c40:	ac2c      	add	r4, sp, #176	; 0xb0
 8002c42:	076b      	lsls	r3, r5, #29
 8002c44:	f100 8410 	bmi.w	8003468 <_svfprintf_r+0xe88>
 8002c48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002c4c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002c4e:	428a      	cmp	r2, r1
 8002c50:	bfac      	ite	ge
 8002c52:	189b      	addge	r3, r3, r2
 8002c54:	185b      	addlt	r3, r3, r1
 8002c56:	9309      	str	r3, [sp, #36]	; 0x24
 8002c58:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002c5a:	b13b      	cbz	r3, 8002c6c <_svfprintf_r+0x68c>
 8002c5c:	aa1f      	add	r2, sp, #124	; 0x7c
 8002c5e:	4651      	mov	r1, sl
 8002c60:	4658      	mov	r0, fp
 8002c62:	f002 f807 	bl	8004c74 <__ssprint_r>
 8002c66:	2800      	cmp	r0, #0
 8002c68:	f040 841b 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8002c6c:	2300      	movs	r3, #0
 8002c6e:	9320      	str	r3, [sp, #128]	; 0x80
 8002c70:	9f04      	ldr	r7, [sp, #16]
 8002c72:	ac2c      	add	r4, sp, #176	; 0xb0
 8002c74:	e4ee      	b.n	8002654 <_svfprintf_r+0x74>
 8002c76:	9b02      	ldr	r3, [sp, #8]
 8002c78:	2b65      	cmp	r3, #101	; 0x65
 8002c7a:	f77f af0b 	ble.w	8002a94 <_svfprintf_r+0x4b4>
 8002c7e:	9b02      	ldr	r3, [sp, #8]
 8002c80:	2b66      	cmp	r3, #102	; 0x66
 8002c82:	d124      	bne.n	8002cce <_svfprintf_r+0x6ee>
 8002c84:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	dd19      	ble.n	8002cbe <_svfprintf_r+0x6de>
 8002c8a:	f1b9 0f00 	cmp.w	r9, #0
 8002c8e:	d101      	bne.n	8002c94 <_svfprintf_r+0x6b4>
 8002c90:	07ea      	lsls	r2, r5, #31
 8002c92:	d502      	bpl.n	8002c9a <_svfprintf_r+0x6ba>
 8002c94:	9a08      	ldr	r2, [sp, #32]
 8002c96:	4413      	add	r3, r2
 8002c98:	444b      	add	r3, r9
 8002c9a:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8002c9c:	4699      	mov	r9, r3
 8002c9e:	e735      	b.n	8002b0c <_svfprintf_r+0x52c>
 8002ca0:	460a      	mov	r2, r1
 8002ca2:	e70c      	b.n	8002abe <_svfprintf_r+0x4de>
 8002ca4:	f812 1b01 	ldrb.w	r1, [r2], #1
 8002ca8:	f803 1b01 	strb.w	r1, [r3], #1
 8002cac:	e71c      	b.n	8002ae8 <_svfprintf_r+0x508>
 8002cae:	2230      	movs	r2, #48	; 0x30
 8002cb0:	4413      	add	r3, r2
 8002cb2:	f88d 206e 	strb.w	r2, [sp, #110]	; 0x6e
 8002cb6:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8002cba:	a91c      	add	r1, sp, #112	; 0x70
 8002cbc:	e718      	b.n	8002af0 <_svfprintf_r+0x510>
 8002cbe:	f1b9 0f00 	cmp.w	r9, #0
 8002cc2:	d101      	bne.n	8002cc8 <_svfprintf_r+0x6e8>
 8002cc4:	07eb      	lsls	r3, r5, #31
 8002cc6:	d515      	bpl.n	8002cf4 <_svfprintf_r+0x714>
 8002cc8:	9b08      	ldr	r3, [sp, #32]
 8002cca:	3301      	adds	r3, #1
 8002ccc:	e7e4      	b.n	8002c98 <_svfprintf_r+0x6b8>
 8002cce:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8002cd0:	9b03      	ldr	r3, [sp, #12]
 8002cd2:	429a      	cmp	r2, r3
 8002cd4:	db06      	blt.n	8002ce4 <_svfprintf_r+0x704>
 8002cd6:	07ef      	lsls	r7, r5, #31
 8002cd8:	d50e      	bpl.n	8002cf8 <_svfprintf_r+0x718>
 8002cda:	9b08      	ldr	r3, [sp, #32]
 8002cdc:	4413      	add	r3, r2
 8002cde:	2267      	movs	r2, #103	; 0x67
 8002ce0:	9202      	str	r2, [sp, #8]
 8002ce2:	e7da      	b.n	8002c9a <_svfprintf_r+0x6ba>
 8002ce4:	9b03      	ldr	r3, [sp, #12]
 8002ce6:	9908      	ldr	r1, [sp, #32]
 8002ce8:	2a00      	cmp	r2, #0
 8002cea:	440b      	add	r3, r1
 8002cec:	dcf7      	bgt.n	8002cde <_svfprintf_r+0x6fe>
 8002cee:	f1c2 0201 	rsb	r2, r2, #1
 8002cf2:	e7f3      	b.n	8002cdc <_svfprintf_r+0x6fc>
 8002cf4:	2301      	movs	r3, #1
 8002cf6:	e7d0      	b.n	8002c9a <_svfprintf_r+0x6ba>
 8002cf8:	4613      	mov	r3, r2
 8002cfa:	e7f0      	b.n	8002cde <_svfprintf_r+0x6fe>
 8002cfc:	b10b      	cbz	r3, 8002d02 <_svfprintf_r+0x722>
 8002cfe:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002d02:	f015 0f20 	tst.w	r5, #32
 8002d06:	f107 0304 	add.w	r3, r7, #4
 8002d0a:	d008      	beq.n	8002d1e <_svfprintf_r+0x73e>
 8002d0c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002d0e:	683a      	ldr	r2, [r7, #0]
 8002d10:	17ce      	asrs	r6, r1, #31
 8002d12:	4608      	mov	r0, r1
 8002d14:	4631      	mov	r1, r6
 8002d16:	e9c2 0100 	strd	r0, r1, [r2]
 8002d1a:	461f      	mov	r7, r3
 8002d1c:	e49a      	b.n	8002654 <_svfprintf_r+0x74>
 8002d1e:	06ee      	lsls	r6, r5, #27
 8002d20:	d503      	bpl.n	8002d2a <_svfprintf_r+0x74a>
 8002d22:	683a      	ldr	r2, [r7, #0]
 8002d24:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002d26:	6011      	str	r1, [r2, #0]
 8002d28:	e7f7      	b.n	8002d1a <_svfprintf_r+0x73a>
 8002d2a:	0668      	lsls	r0, r5, #25
 8002d2c:	d5f9      	bpl.n	8002d22 <_svfprintf_r+0x742>
 8002d2e:	683a      	ldr	r2, [r7, #0]
 8002d30:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8002d34:	8011      	strh	r1, [r2, #0]
 8002d36:	e7f0      	b.n	8002d1a <_svfprintf_r+0x73a>
 8002d38:	f045 0510 	orr.w	r5, r5, #16
 8002d3c:	f015 0320 	ands.w	r3, r5, #32
 8002d40:	d022      	beq.n	8002d88 <_svfprintf_r+0x7a8>
 8002d42:	3707      	adds	r7, #7
 8002d44:	f027 0707 	bic.w	r7, r7, #7
 8002d48:	f107 0308 	add.w	r3, r7, #8
 8002d4c:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002d50:	9304      	str	r3, [sp, #16]
 8002d52:	2300      	movs	r3, #0
 8002d54:	2200      	movs	r2, #0
 8002d56:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002d5a:	f1b9 3fff 	cmp.w	r9, #4294967295
 8002d5e:	f000 83db 	beq.w	8003518 <_svfprintf_r+0xf38>
 8002d62:	f025 0280 	bic.w	r2, r5, #128	; 0x80
 8002d66:	920b      	str	r2, [sp, #44]	; 0x2c
 8002d68:	ea56 0207 	orrs.w	r2, r6, r7
 8002d6c:	f040 83d9 	bne.w	8003522 <_svfprintf_r+0xf42>
 8002d70:	f1b9 0f00 	cmp.w	r9, #0
 8002d74:	f000 80aa 	beq.w	8002ecc <_svfprintf_r+0x8ec>
 8002d78:	2b01      	cmp	r3, #1
 8002d7a:	d076      	beq.n	8002e6a <_svfprintf_r+0x88a>
 8002d7c:	2b02      	cmp	r3, #2
 8002d7e:	f000 8091 	beq.w	8002ea4 <_svfprintf_r+0x8c4>
 8002d82:	2600      	movs	r6, #0
 8002d84:	2700      	movs	r7, #0
 8002d86:	e3d2      	b.n	800352e <_svfprintf_r+0xf4e>
 8002d88:	1d3a      	adds	r2, r7, #4
 8002d8a:	f015 0110 	ands.w	r1, r5, #16
 8002d8e:	9204      	str	r2, [sp, #16]
 8002d90:	d002      	beq.n	8002d98 <_svfprintf_r+0x7b8>
 8002d92:	683e      	ldr	r6, [r7, #0]
 8002d94:	2700      	movs	r7, #0
 8002d96:	e7dd      	b.n	8002d54 <_svfprintf_r+0x774>
 8002d98:	f015 0340 	ands.w	r3, r5, #64	; 0x40
 8002d9c:	d0f9      	beq.n	8002d92 <_svfprintf_r+0x7b2>
 8002d9e:	883e      	ldrh	r6, [r7, #0]
 8002da0:	2700      	movs	r7, #0
 8002da2:	e7d6      	b.n	8002d52 <_svfprintf_r+0x772>
 8002da4:	1d3b      	adds	r3, r7, #4
 8002da6:	9304      	str	r3, [sp, #16]
 8002da8:	2330      	movs	r3, #48	; 0x30
 8002daa:	2278      	movs	r2, #120	; 0x78
 8002dac:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 8002db0:	4b14      	ldr	r3, [pc, #80]	; (8002e04 <_svfprintf_r+0x824>)
 8002db2:	683e      	ldr	r6, [r7, #0]
 8002db4:	9311      	str	r3, [sp, #68]	; 0x44
 8002db6:	2700      	movs	r7, #0
 8002db8:	f045 0502 	orr.w	r5, r5, #2
 8002dbc:	f88d 2061 	strb.w	r2, [sp, #97]	; 0x61
 8002dc0:	2302      	movs	r3, #2
 8002dc2:	9202      	str	r2, [sp, #8]
 8002dc4:	e7c6      	b.n	8002d54 <_svfprintf_r+0x774>
 8002dc6:	1d3b      	adds	r3, r7, #4
 8002dc8:	2600      	movs	r6, #0
 8002dca:	f1b9 3fff 	cmp.w	r9, #4294967295
 8002dce:	9304      	str	r3, [sp, #16]
 8002dd0:	f8d7 8000 	ldr.w	r8, [r7]
 8002dd4:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 8002dd8:	d00a      	beq.n	8002df0 <_svfprintf_r+0x810>
 8002dda:	464a      	mov	r2, r9
 8002ddc:	4631      	mov	r1, r6
 8002dde:	4640      	mov	r0, r8
 8002de0:	f7fd f9fe 	bl	80001e0 <memchr>
 8002de4:	2800      	cmp	r0, #0
 8002de6:	f000 808d 	beq.w	8002f04 <_svfprintf_r+0x924>
 8002dea:	eba0 0908 	sub.w	r9, r0, r8
 8002dee:	e5cb      	b.n	8002988 <_svfprintf_r+0x3a8>
 8002df0:	4640      	mov	r0, r8
 8002df2:	f7fd f9ed 	bl	80001d0 <strlen>
 8002df6:	4681      	mov	r9, r0
 8002df8:	e5c6      	b.n	8002988 <_svfprintf_r+0x3a8>
 8002dfa:	bf00      	nop
 8002dfc:	080064d0 	.word	0x080064d0
 8002e00:	080064e0 	.word	0x080064e0
 8002e04:	080064bd 	.word	0x080064bd
 8002e08:	f045 0510 	orr.w	r5, r5, #16
 8002e0c:	06a9      	lsls	r1, r5, #26
 8002e0e:	d509      	bpl.n	8002e24 <_svfprintf_r+0x844>
 8002e10:	3707      	adds	r7, #7
 8002e12:	f027 0707 	bic.w	r7, r7, #7
 8002e16:	f107 0308 	add.w	r3, r7, #8
 8002e1a:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002e1e:	9304      	str	r3, [sp, #16]
 8002e20:	2301      	movs	r3, #1
 8002e22:	e797      	b.n	8002d54 <_svfprintf_r+0x774>
 8002e24:	1d3b      	adds	r3, r7, #4
 8002e26:	f015 0f10 	tst.w	r5, #16
 8002e2a:	9304      	str	r3, [sp, #16]
 8002e2c:	d001      	beq.n	8002e32 <_svfprintf_r+0x852>
 8002e2e:	683e      	ldr	r6, [r7, #0]
 8002e30:	e002      	b.n	8002e38 <_svfprintf_r+0x858>
 8002e32:	066a      	lsls	r2, r5, #25
 8002e34:	d5fb      	bpl.n	8002e2e <_svfprintf_r+0x84e>
 8002e36:	883e      	ldrh	r6, [r7, #0]
 8002e38:	2700      	movs	r7, #0
 8002e3a:	e7f1      	b.n	8002e20 <_svfprintf_r+0x840>
 8002e3c:	b10b      	cbz	r3, 8002e42 <_svfprintf_r+0x862>
 8002e3e:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002e42:	4ba3      	ldr	r3, [pc, #652]	; (80030d0 <_svfprintf_r+0xaf0>)
 8002e44:	e4c2      	b.n	80027cc <_svfprintf_r+0x1ec>
 8002e46:	1d3b      	adds	r3, r7, #4
 8002e48:	f015 0f10 	tst.w	r5, #16
 8002e4c:	9304      	str	r3, [sp, #16]
 8002e4e:	d001      	beq.n	8002e54 <_svfprintf_r+0x874>
 8002e50:	683e      	ldr	r6, [r7, #0]
 8002e52:	e002      	b.n	8002e5a <_svfprintf_r+0x87a>
 8002e54:	066e      	lsls	r6, r5, #25
 8002e56:	d5fb      	bpl.n	8002e50 <_svfprintf_r+0x870>
 8002e58:	883e      	ldrh	r6, [r7, #0]
 8002e5a:	2700      	movs	r7, #0
 8002e5c:	e4c2      	b.n	80027e4 <_svfprintf_r+0x204>
 8002e5e:	4643      	mov	r3, r8
 8002e60:	e366      	b.n	8003530 <_svfprintf_r+0xf50>
 8002e62:	2f00      	cmp	r7, #0
 8002e64:	bf08      	it	eq
 8002e66:	2e0a      	cmpeq	r6, #10
 8002e68:	d205      	bcs.n	8002e76 <_svfprintf_r+0x896>
 8002e6a:	f10d 08f0 	add.w	r8, sp, #240	; 0xf0
 8002e6e:	3630      	adds	r6, #48	; 0x30
 8002e70:	f808 6d41 	strb.w	r6, [r8, #-65]!
 8002e74:	e377      	b.n	8003566 <_svfprintf_r+0xf86>
 8002e76:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 8002e7a:	4630      	mov	r0, r6
 8002e7c:	4639      	mov	r1, r7
 8002e7e:	220a      	movs	r2, #10
 8002e80:	2300      	movs	r3, #0
 8002e82:	f7fd fe8d 	bl	8000ba0 <__aeabi_uldivmod>
 8002e86:	3230      	adds	r2, #48	; 0x30
 8002e88:	f808 2d01 	strb.w	r2, [r8, #-1]!
 8002e8c:	2300      	movs	r3, #0
 8002e8e:	4630      	mov	r0, r6
 8002e90:	4639      	mov	r1, r7
 8002e92:	220a      	movs	r2, #10
 8002e94:	f7fd fe84 	bl	8000ba0 <__aeabi_uldivmod>
 8002e98:	4606      	mov	r6, r0
 8002e9a:	460f      	mov	r7, r1
 8002e9c:	ea56 0307 	orrs.w	r3, r6, r7
 8002ea0:	d1eb      	bne.n	8002e7a <_svfprintf_r+0x89a>
 8002ea2:	e360      	b.n	8003566 <_svfprintf_r+0xf86>
 8002ea4:	2600      	movs	r6, #0
 8002ea6:	2700      	movs	r7, #0
 8002ea8:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 8002eac:	f006 030f 	and.w	r3, r6, #15
 8002eb0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8002eb2:	5cd3      	ldrb	r3, [r2, r3]
 8002eb4:	f808 3d01 	strb.w	r3, [r8, #-1]!
 8002eb8:	0933      	lsrs	r3, r6, #4
 8002eba:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 8002ebe:	093a      	lsrs	r2, r7, #4
 8002ec0:	461e      	mov	r6, r3
 8002ec2:	4617      	mov	r7, r2
 8002ec4:	ea56 0307 	orrs.w	r3, r6, r7
 8002ec8:	d1f0      	bne.n	8002eac <_svfprintf_r+0x8cc>
 8002eca:	e34c      	b.n	8003566 <_svfprintf_r+0xf86>
 8002ecc:	b93b      	cbnz	r3, 8002ede <_svfprintf_r+0x8fe>
 8002ece:	07ea      	lsls	r2, r5, #31
 8002ed0:	d505      	bpl.n	8002ede <_svfprintf_r+0x8fe>
 8002ed2:	f10d 08f0 	add.w	r8, sp, #240	; 0xf0
 8002ed6:	2330      	movs	r3, #48	; 0x30
 8002ed8:	f808 3d41 	strb.w	r3, [r8, #-65]!
 8002edc:	e343      	b.n	8003566 <_svfprintf_r+0xf86>
 8002ede:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 8002ee2:	e340      	b.n	8003566 <_svfprintf_r+0xf86>
 8002ee4:	b10b      	cbz	r3, 8002eea <_svfprintf_r+0x90a>
 8002ee6:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002eea:	9b02      	ldr	r3, [sp, #8]
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	f000 82f7 	beq.w	80034e0 <_svfprintf_r+0xf00>
 8002ef2:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8002ef6:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 8002efa:	2600      	movs	r6, #0
 8002efc:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 8002f00:	9704      	str	r7, [sp, #16]
 8002f02:	e4e8      	b.n	80028d6 <_svfprintf_r+0x2f6>
 8002f04:	4606      	mov	r6, r0
 8002f06:	e53f      	b.n	8002988 <_svfprintf_r+0x3a8>
 8002f08:	2310      	movs	r3, #16
 8002f0a:	6063      	str	r3, [r4, #4]
 8002f0c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002f0e:	3310      	adds	r3, #16
 8002f10:	9321      	str	r3, [sp, #132]	; 0x84
 8002f12:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002f14:	3301      	adds	r3, #1
 8002f16:	2b07      	cmp	r3, #7
 8002f18:	9320      	str	r3, [sp, #128]	; 0x80
 8002f1a:	dc04      	bgt.n	8002f26 <_svfprintf_r+0x946>
 8002f1c:	3408      	adds	r4, #8
 8002f1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002f20:	3b10      	subs	r3, #16
 8002f22:	930c      	str	r3, [sp, #48]	; 0x30
 8002f24:	e615      	b.n	8002b52 <_svfprintf_r+0x572>
 8002f26:	aa1f      	add	r2, sp, #124	; 0x7c
 8002f28:	4651      	mov	r1, sl
 8002f2a:	4658      	mov	r0, fp
 8002f2c:	f001 fea2 	bl	8004c74 <__ssprint_r>
 8002f30:	2800      	cmp	r0, #0
 8002f32:	f040 82b6 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8002f36:	ac2c      	add	r4, sp, #176	; 0xb0
 8002f38:	e7f1      	b.n	8002f1e <_svfprintf_r+0x93e>
 8002f3a:	aa1f      	add	r2, sp, #124	; 0x7c
 8002f3c:	4651      	mov	r1, sl
 8002f3e:	4658      	mov	r0, fp
 8002f40:	f001 fe98 	bl	8004c74 <__ssprint_r>
 8002f44:	2800      	cmp	r0, #0
 8002f46:	f040 82ac 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8002f4a:	ac2c      	add	r4, sp, #176	; 0xb0
 8002f4c:	e614      	b.n	8002b78 <_svfprintf_r+0x598>
 8002f4e:	aa1f      	add	r2, sp, #124	; 0x7c
 8002f50:	4651      	mov	r1, sl
 8002f52:	4658      	mov	r0, fp
 8002f54:	f001 fe8e 	bl	8004c74 <__ssprint_r>
 8002f58:	2800      	cmp	r0, #0
 8002f5a:	f040 82a2 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8002f5e:	ac2c      	add	r4, sp, #176	; 0xb0
 8002f60:	e61c      	b.n	8002b9c <_svfprintf_r+0x5bc>
 8002f62:	aa1f      	add	r2, sp, #124	; 0x7c
 8002f64:	4651      	mov	r1, sl
 8002f66:	4658      	mov	r0, fp
 8002f68:	f001 fe84 	bl	8004c74 <__ssprint_r>
 8002f6c:	2800      	cmp	r0, #0
 8002f6e:	f040 8298 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8002f72:	ac2c      	add	r4, sp, #176	; 0xb0
 8002f74:	e622      	b.n	8002bbc <_svfprintf_r+0x5dc>
 8002f76:	2210      	movs	r2, #16
 8002f78:	6062      	str	r2, [r4, #4]
 8002f7a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002f7c:	3210      	adds	r2, #16
 8002f7e:	9221      	str	r2, [sp, #132]	; 0x84
 8002f80:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002f82:	3201      	adds	r2, #1
 8002f84:	2a07      	cmp	r2, #7
 8002f86:	9220      	str	r2, [sp, #128]	; 0x80
 8002f88:	dc02      	bgt.n	8002f90 <_svfprintf_r+0x9b0>
 8002f8a:	3408      	adds	r4, #8
 8002f8c:	3b10      	subs	r3, #16
 8002f8e:	e61d      	b.n	8002bcc <_svfprintf_r+0x5ec>
 8002f90:	aa1f      	add	r2, sp, #124	; 0x7c
 8002f92:	4651      	mov	r1, sl
 8002f94:	4658      	mov	r0, fp
 8002f96:	930c      	str	r3, [sp, #48]	; 0x30
 8002f98:	f001 fe6c 	bl	8004c74 <__ssprint_r>
 8002f9c:	2800      	cmp	r0, #0
 8002f9e:	f040 8280 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8002fa2:	ac2c      	add	r4, sp, #176	; 0xb0
 8002fa4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002fa6:	e7f1      	b.n	8002f8c <_svfprintf_r+0x9ac>
 8002fa8:	aa1f      	add	r2, sp, #124	; 0x7c
 8002faa:	4651      	mov	r1, sl
 8002fac:	4658      	mov	r0, fp
 8002fae:	f001 fe61 	bl	8004c74 <__ssprint_r>
 8002fb2:	2800      	cmp	r0, #0
 8002fb4:	f040 8275 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8002fb8:	ac2c      	add	r4, sp, #176	; 0xb0
 8002fba:	e617      	b.n	8002bec <_svfprintf_r+0x60c>
 8002fbc:	2310      	movs	r3, #16
 8002fbe:	6063      	str	r3, [r4, #4]
 8002fc0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002fc2:	3310      	adds	r3, #16
 8002fc4:	9321      	str	r3, [sp, #132]	; 0x84
 8002fc6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002fc8:	3301      	adds	r3, #1
 8002fca:	2b07      	cmp	r3, #7
 8002fcc:	9320      	str	r3, [sp, #128]	; 0x80
 8002fce:	dc02      	bgt.n	8002fd6 <_svfprintf_r+0x9f6>
 8002fd0:	3408      	adds	r4, #8
 8002fd2:	3e10      	subs	r6, #16
 8002fd4:	e60e      	b.n	8002bf4 <_svfprintf_r+0x614>
 8002fd6:	aa1f      	add	r2, sp, #124	; 0x7c
 8002fd8:	4651      	mov	r1, sl
 8002fda:	4658      	mov	r0, fp
 8002fdc:	f001 fe4a 	bl	8004c74 <__ssprint_r>
 8002fe0:	2800      	cmp	r0, #0
 8002fe2:	f040 825e 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8002fe6:	ac2c      	add	r4, sp, #176	; 0xb0
 8002fe8:	e7f3      	b.n	8002fd2 <_svfprintf_r+0x9f2>
 8002fea:	aa1f      	add	r2, sp, #124	; 0x7c
 8002fec:	4651      	mov	r1, sl
 8002fee:	4658      	mov	r0, fp
 8002ff0:	f001 fe40 	bl	8004c74 <__ssprint_r>
 8002ff4:	2800      	cmp	r0, #0
 8002ff6:	f040 8254 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8002ffa:	ac2c      	add	r4, sp, #176	; 0xb0
 8002ffc:	e60a      	b.n	8002c14 <_svfprintf_r+0x634>
 8002ffe:	9b02      	ldr	r3, [sp, #8]
 8003000:	2b65      	cmp	r3, #101	; 0x65
 8003002:	f340 81a9 	ble.w	8003358 <_svfprintf_r+0xd78>
 8003006:	2200      	movs	r2, #0
 8003008:	2300      	movs	r3, #0
 800300a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800300e:	f7fd fd57 	bl	8000ac0 <__aeabi_dcmpeq>
 8003012:	2800      	cmp	r0, #0
 8003014:	d062      	beq.n	80030dc <_svfprintf_r+0xafc>
 8003016:	4b2f      	ldr	r3, [pc, #188]	; (80030d4 <_svfprintf_r+0xaf4>)
 8003018:	6023      	str	r3, [r4, #0]
 800301a:	2301      	movs	r3, #1
 800301c:	6063      	str	r3, [r4, #4]
 800301e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003020:	3301      	adds	r3, #1
 8003022:	9321      	str	r3, [sp, #132]	; 0x84
 8003024:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003026:	3301      	adds	r3, #1
 8003028:	2b07      	cmp	r3, #7
 800302a:	9320      	str	r3, [sp, #128]	; 0x80
 800302c:	dc25      	bgt.n	800307a <_svfprintf_r+0xa9a>
 800302e:	3408      	adds	r4, #8
 8003030:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003032:	9a03      	ldr	r2, [sp, #12]
 8003034:	4293      	cmp	r3, r2
 8003036:	db02      	blt.n	800303e <_svfprintf_r+0xa5e>
 8003038:	07ee      	lsls	r6, r5, #31
 800303a:	f57f ae02 	bpl.w	8002c42 <_svfprintf_r+0x662>
 800303e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003040:	6023      	str	r3, [r4, #0]
 8003042:	9b08      	ldr	r3, [sp, #32]
 8003044:	6063      	str	r3, [r4, #4]
 8003046:	9a08      	ldr	r2, [sp, #32]
 8003048:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800304a:	4413      	add	r3, r2
 800304c:	9321      	str	r3, [sp, #132]	; 0x84
 800304e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003050:	3301      	adds	r3, #1
 8003052:	2b07      	cmp	r3, #7
 8003054:	9320      	str	r3, [sp, #128]	; 0x80
 8003056:	dc1a      	bgt.n	800308e <_svfprintf_r+0xaae>
 8003058:	3408      	adds	r4, #8
 800305a:	9b03      	ldr	r3, [sp, #12]
 800305c:	1e5e      	subs	r6, r3, #1
 800305e:	2e00      	cmp	r6, #0
 8003060:	f77f adef 	ble.w	8002c42 <_svfprintf_r+0x662>
 8003064:	4f1c      	ldr	r7, [pc, #112]	; (80030d8 <_svfprintf_r+0xaf8>)
 8003066:	f04f 0810 	mov.w	r8, #16
 800306a:	2e10      	cmp	r6, #16
 800306c:	6027      	str	r7, [r4, #0]
 800306e:	dc18      	bgt.n	80030a2 <_svfprintf_r+0xac2>
 8003070:	6066      	str	r6, [r4, #4]
 8003072:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003074:	441e      	add	r6, r3
 8003076:	9621      	str	r6, [sp, #132]	; 0x84
 8003078:	e5d4      	b.n	8002c24 <_svfprintf_r+0x644>
 800307a:	aa1f      	add	r2, sp, #124	; 0x7c
 800307c:	4651      	mov	r1, sl
 800307e:	4658      	mov	r0, fp
 8003080:	f001 fdf8 	bl	8004c74 <__ssprint_r>
 8003084:	2800      	cmp	r0, #0
 8003086:	f040 820c 	bne.w	80034a2 <_svfprintf_r+0xec2>
 800308a:	ac2c      	add	r4, sp, #176	; 0xb0
 800308c:	e7d0      	b.n	8003030 <_svfprintf_r+0xa50>
 800308e:	aa1f      	add	r2, sp, #124	; 0x7c
 8003090:	4651      	mov	r1, sl
 8003092:	4658      	mov	r0, fp
 8003094:	f001 fdee 	bl	8004c74 <__ssprint_r>
 8003098:	2800      	cmp	r0, #0
 800309a:	f040 8202 	bne.w	80034a2 <_svfprintf_r+0xec2>
 800309e:	ac2c      	add	r4, sp, #176	; 0xb0
 80030a0:	e7db      	b.n	800305a <_svfprintf_r+0xa7a>
 80030a2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80030a4:	f8c4 8004 	str.w	r8, [r4, #4]
 80030a8:	3310      	adds	r3, #16
 80030aa:	9321      	str	r3, [sp, #132]	; 0x84
 80030ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80030ae:	3301      	adds	r3, #1
 80030b0:	2b07      	cmp	r3, #7
 80030b2:	9320      	str	r3, [sp, #128]	; 0x80
 80030b4:	dc02      	bgt.n	80030bc <_svfprintf_r+0xadc>
 80030b6:	3408      	adds	r4, #8
 80030b8:	3e10      	subs	r6, #16
 80030ba:	e7d6      	b.n	800306a <_svfprintf_r+0xa8a>
 80030bc:	aa1f      	add	r2, sp, #124	; 0x7c
 80030be:	4651      	mov	r1, sl
 80030c0:	4658      	mov	r0, fp
 80030c2:	f001 fdd7 	bl	8004c74 <__ssprint_r>
 80030c6:	2800      	cmp	r0, #0
 80030c8:	f040 81eb 	bne.w	80034a2 <_svfprintf_r+0xec2>
 80030cc:	ac2c      	add	r4, sp, #176	; 0xb0
 80030ce:	e7f3      	b.n	80030b8 <_svfprintf_r+0xad8>
 80030d0:	080064bd 	.word	0x080064bd
 80030d4:	080064ce 	.word	0x080064ce
 80030d8:	080064e0 	.word	0x080064e0
 80030dc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80030de:	2b00      	cmp	r3, #0
 80030e0:	dc7a      	bgt.n	80031d8 <_svfprintf_r+0xbf8>
 80030e2:	4b9b      	ldr	r3, [pc, #620]	; (8003350 <_svfprintf_r+0xd70>)
 80030e4:	6023      	str	r3, [r4, #0]
 80030e6:	2301      	movs	r3, #1
 80030e8:	6063      	str	r3, [r4, #4]
 80030ea:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80030ec:	3301      	adds	r3, #1
 80030ee:	9321      	str	r3, [sp, #132]	; 0x84
 80030f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80030f2:	3301      	adds	r3, #1
 80030f4:	2b07      	cmp	r3, #7
 80030f6:	9320      	str	r3, [sp, #128]	; 0x80
 80030f8:	dc44      	bgt.n	8003184 <_svfprintf_r+0xba4>
 80030fa:	3408      	adds	r4, #8
 80030fc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80030fe:	b923      	cbnz	r3, 800310a <_svfprintf_r+0xb2a>
 8003100:	9b03      	ldr	r3, [sp, #12]
 8003102:	b913      	cbnz	r3, 800310a <_svfprintf_r+0xb2a>
 8003104:	07e8      	lsls	r0, r5, #31
 8003106:	f57f ad9c 	bpl.w	8002c42 <_svfprintf_r+0x662>
 800310a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800310c:	6023      	str	r3, [r4, #0]
 800310e:	9b08      	ldr	r3, [sp, #32]
 8003110:	6063      	str	r3, [r4, #4]
 8003112:	9a08      	ldr	r2, [sp, #32]
 8003114:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003116:	4413      	add	r3, r2
 8003118:	9321      	str	r3, [sp, #132]	; 0x84
 800311a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800311c:	3301      	adds	r3, #1
 800311e:	2b07      	cmp	r3, #7
 8003120:	9320      	str	r3, [sp, #128]	; 0x80
 8003122:	dc39      	bgt.n	8003198 <_svfprintf_r+0xbb8>
 8003124:	f104 0308 	add.w	r3, r4, #8
 8003128:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800312a:	2e00      	cmp	r6, #0
 800312c:	da19      	bge.n	8003162 <_svfprintf_r+0xb82>
 800312e:	4f89      	ldr	r7, [pc, #548]	; (8003354 <_svfprintf_r+0xd74>)
 8003130:	4276      	negs	r6, r6
 8003132:	2410      	movs	r4, #16
 8003134:	2e10      	cmp	r6, #16
 8003136:	601f      	str	r7, [r3, #0]
 8003138:	dc38      	bgt.n	80031ac <_svfprintf_r+0xbcc>
 800313a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800313c:	605e      	str	r6, [r3, #4]
 800313e:	4416      	add	r6, r2
 8003140:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003142:	9621      	str	r6, [sp, #132]	; 0x84
 8003144:	3201      	adds	r2, #1
 8003146:	2a07      	cmp	r2, #7
 8003148:	f103 0308 	add.w	r3, r3, #8
 800314c:	9220      	str	r2, [sp, #128]	; 0x80
 800314e:	dd08      	ble.n	8003162 <_svfprintf_r+0xb82>
 8003150:	aa1f      	add	r2, sp, #124	; 0x7c
 8003152:	4651      	mov	r1, sl
 8003154:	4658      	mov	r0, fp
 8003156:	f001 fd8d 	bl	8004c74 <__ssprint_r>
 800315a:	2800      	cmp	r0, #0
 800315c:	f040 81a1 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8003160:	ab2c      	add	r3, sp, #176	; 0xb0
 8003162:	9a03      	ldr	r2, [sp, #12]
 8003164:	605a      	str	r2, [r3, #4]
 8003166:	9903      	ldr	r1, [sp, #12]
 8003168:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800316a:	f8c3 8000 	str.w	r8, [r3]
 800316e:	440a      	add	r2, r1
 8003170:	9221      	str	r2, [sp, #132]	; 0x84
 8003172:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003174:	3201      	adds	r2, #1
 8003176:	2a07      	cmp	r2, #7
 8003178:	9220      	str	r2, [sp, #128]	; 0x80
 800317a:	f73f ad59 	bgt.w	8002c30 <_svfprintf_r+0x650>
 800317e:	f103 0408 	add.w	r4, r3, #8
 8003182:	e55e      	b.n	8002c42 <_svfprintf_r+0x662>
 8003184:	aa1f      	add	r2, sp, #124	; 0x7c
 8003186:	4651      	mov	r1, sl
 8003188:	4658      	mov	r0, fp
 800318a:	f001 fd73 	bl	8004c74 <__ssprint_r>
 800318e:	2800      	cmp	r0, #0
 8003190:	f040 8187 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8003194:	ac2c      	add	r4, sp, #176	; 0xb0
 8003196:	e7b1      	b.n	80030fc <_svfprintf_r+0xb1c>
 8003198:	aa1f      	add	r2, sp, #124	; 0x7c
 800319a:	4651      	mov	r1, sl
 800319c:	4658      	mov	r0, fp
 800319e:	f001 fd69 	bl	8004c74 <__ssprint_r>
 80031a2:	2800      	cmp	r0, #0
 80031a4:	f040 817d 	bne.w	80034a2 <_svfprintf_r+0xec2>
 80031a8:	ab2c      	add	r3, sp, #176	; 0xb0
 80031aa:	e7bd      	b.n	8003128 <_svfprintf_r+0xb48>
 80031ac:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80031ae:	605c      	str	r4, [r3, #4]
 80031b0:	3210      	adds	r2, #16
 80031b2:	9221      	str	r2, [sp, #132]	; 0x84
 80031b4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80031b6:	3201      	adds	r2, #1
 80031b8:	2a07      	cmp	r2, #7
 80031ba:	9220      	str	r2, [sp, #128]	; 0x80
 80031bc:	dc02      	bgt.n	80031c4 <_svfprintf_r+0xbe4>
 80031be:	3308      	adds	r3, #8
 80031c0:	3e10      	subs	r6, #16
 80031c2:	e7b7      	b.n	8003134 <_svfprintf_r+0xb54>
 80031c4:	aa1f      	add	r2, sp, #124	; 0x7c
 80031c6:	4651      	mov	r1, sl
 80031c8:	4658      	mov	r0, fp
 80031ca:	f001 fd53 	bl	8004c74 <__ssprint_r>
 80031ce:	2800      	cmp	r0, #0
 80031d0:	f040 8167 	bne.w	80034a2 <_svfprintf_r+0xec2>
 80031d4:	ab2c      	add	r3, sp, #176	; 0xb0
 80031d6:	e7f3      	b.n	80031c0 <_svfprintf_r+0xbe0>
 80031d8:	9b03      	ldr	r3, [sp, #12]
 80031da:	42bb      	cmp	r3, r7
 80031dc:	bfa8      	it	ge
 80031de:	463b      	movge	r3, r7
 80031e0:	2b00      	cmp	r3, #0
 80031e2:	461e      	mov	r6, r3
 80031e4:	dd0b      	ble.n	80031fe <_svfprintf_r+0xc1e>
 80031e6:	6063      	str	r3, [r4, #4]
 80031e8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80031ea:	f8c4 8000 	str.w	r8, [r4]
 80031ee:	4433      	add	r3, r6
 80031f0:	9321      	str	r3, [sp, #132]	; 0x84
 80031f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80031f4:	3301      	adds	r3, #1
 80031f6:	2b07      	cmp	r3, #7
 80031f8:	9320      	str	r3, [sp, #128]	; 0x80
 80031fa:	dc5f      	bgt.n	80032bc <_svfprintf_r+0xcdc>
 80031fc:	3408      	adds	r4, #8
 80031fe:	2e00      	cmp	r6, #0
 8003200:	bfac      	ite	ge
 8003202:	1bbe      	subge	r6, r7, r6
 8003204:	463e      	movlt	r6, r7
 8003206:	2e00      	cmp	r6, #0
 8003208:	dd0f      	ble.n	800322a <_svfprintf_r+0xc4a>
 800320a:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8003354 <_svfprintf_r+0xd74>
 800320e:	f8c4 9000 	str.w	r9, [r4]
 8003212:	2e10      	cmp	r6, #16
 8003214:	dc5c      	bgt.n	80032d0 <_svfprintf_r+0xcf0>
 8003216:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003218:	6066      	str	r6, [r4, #4]
 800321a:	441e      	add	r6, r3
 800321c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800321e:	9621      	str	r6, [sp, #132]	; 0x84
 8003220:	3301      	adds	r3, #1
 8003222:	2b07      	cmp	r3, #7
 8003224:	9320      	str	r3, [sp, #128]	; 0x80
 8003226:	dc6a      	bgt.n	80032fe <_svfprintf_r+0xd1e>
 8003228:	3408      	adds	r4, #8
 800322a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800322c:	9a03      	ldr	r2, [sp, #12]
 800322e:	4293      	cmp	r3, r2
 8003230:	db01      	blt.n	8003236 <_svfprintf_r+0xc56>
 8003232:	07e9      	lsls	r1, r5, #31
 8003234:	d50d      	bpl.n	8003252 <_svfprintf_r+0xc72>
 8003236:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003238:	6023      	str	r3, [r4, #0]
 800323a:	9b08      	ldr	r3, [sp, #32]
 800323c:	6063      	str	r3, [r4, #4]
 800323e:	9a08      	ldr	r2, [sp, #32]
 8003240:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003242:	4413      	add	r3, r2
 8003244:	9321      	str	r3, [sp, #132]	; 0x84
 8003246:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003248:	3301      	adds	r3, #1
 800324a:	2b07      	cmp	r3, #7
 800324c:	9320      	str	r3, [sp, #128]	; 0x80
 800324e:	dc60      	bgt.n	8003312 <_svfprintf_r+0xd32>
 8003250:	3408      	adds	r4, #8
 8003252:	9b03      	ldr	r3, [sp, #12]
 8003254:	9a03      	ldr	r2, [sp, #12]
 8003256:	1bde      	subs	r6, r3, r7
 8003258:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800325a:	1ad3      	subs	r3, r2, r3
 800325c:	429e      	cmp	r6, r3
 800325e:	bfa8      	it	ge
 8003260:	461e      	movge	r6, r3
 8003262:	2e00      	cmp	r6, #0
 8003264:	dd0b      	ble.n	800327e <_svfprintf_r+0xc9e>
 8003266:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003268:	6066      	str	r6, [r4, #4]
 800326a:	4433      	add	r3, r6
 800326c:	9321      	str	r3, [sp, #132]	; 0x84
 800326e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003270:	3301      	adds	r3, #1
 8003272:	4447      	add	r7, r8
 8003274:	2b07      	cmp	r3, #7
 8003276:	6027      	str	r7, [r4, #0]
 8003278:	9320      	str	r3, [sp, #128]	; 0x80
 800327a:	dc54      	bgt.n	8003326 <_svfprintf_r+0xd46>
 800327c:	3408      	adds	r4, #8
 800327e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003280:	9a03      	ldr	r2, [sp, #12]
 8003282:	2e00      	cmp	r6, #0
 8003284:	eba2 0303 	sub.w	r3, r2, r3
 8003288:	bfac      	ite	ge
 800328a:	1b9e      	subge	r6, r3, r6
 800328c:	461e      	movlt	r6, r3
 800328e:	2e00      	cmp	r6, #0
 8003290:	f77f acd7 	ble.w	8002c42 <_svfprintf_r+0x662>
 8003294:	4f2f      	ldr	r7, [pc, #188]	; (8003354 <_svfprintf_r+0xd74>)
 8003296:	f04f 0810 	mov.w	r8, #16
 800329a:	2e10      	cmp	r6, #16
 800329c:	6027      	str	r7, [r4, #0]
 800329e:	f77f aee7 	ble.w	8003070 <_svfprintf_r+0xa90>
 80032a2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80032a4:	f8c4 8004 	str.w	r8, [r4, #4]
 80032a8:	3310      	adds	r3, #16
 80032aa:	9321      	str	r3, [sp, #132]	; 0x84
 80032ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80032ae:	3301      	adds	r3, #1
 80032b0:	2b07      	cmp	r3, #7
 80032b2:	9320      	str	r3, [sp, #128]	; 0x80
 80032b4:	dc41      	bgt.n	800333a <_svfprintf_r+0xd5a>
 80032b6:	3408      	adds	r4, #8
 80032b8:	3e10      	subs	r6, #16
 80032ba:	e7ee      	b.n	800329a <_svfprintf_r+0xcba>
 80032bc:	aa1f      	add	r2, sp, #124	; 0x7c
 80032be:	4651      	mov	r1, sl
 80032c0:	4658      	mov	r0, fp
 80032c2:	f001 fcd7 	bl	8004c74 <__ssprint_r>
 80032c6:	2800      	cmp	r0, #0
 80032c8:	f040 80eb 	bne.w	80034a2 <_svfprintf_r+0xec2>
 80032cc:	ac2c      	add	r4, sp, #176	; 0xb0
 80032ce:	e796      	b.n	80031fe <_svfprintf_r+0xc1e>
 80032d0:	2310      	movs	r3, #16
 80032d2:	6063      	str	r3, [r4, #4]
 80032d4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80032d6:	3310      	adds	r3, #16
 80032d8:	9321      	str	r3, [sp, #132]	; 0x84
 80032da:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80032dc:	3301      	adds	r3, #1
 80032de:	2b07      	cmp	r3, #7
 80032e0:	9320      	str	r3, [sp, #128]	; 0x80
 80032e2:	dc02      	bgt.n	80032ea <_svfprintf_r+0xd0a>
 80032e4:	3408      	adds	r4, #8
 80032e6:	3e10      	subs	r6, #16
 80032e8:	e791      	b.n	800320e <_svfprintf_r+0xc2e>
 80032ea:	aa1f      	add	r2, sp, #124	; 0x7c
 80032ec:	4651      	mov	r1, sl
 80032ee:	4658      	mov	r0, fp
 80032f0:	f001 fcc0 	bl	8004c74 <__ssprint_r>
 80032f4:	2800      	cmp	r0, #0
 80032f6:	f040 80d4 	bne.w	80034a2 <_svfprintf_r+0xec2>
 80032fa:	ac2c      	add	r4, sp, #176	; 0xb0
 80032fc:	e7f3      	b.n	80032e6 <_svfprintf_r+0xd06>
 80032fe:	aa1f      	add	r2, sp, #124	; 0x7c
 8003300:	4651      	mov	r1, sl
 8003302:	4658      	mov	r0, fp
 8003304:	f001 fcb6 	bl	8004c74 <__ssprint_r>
 8003308:	2800      	cmp	r0, #0
 800330a:	f040 80ca 	bne.w	80034a2 <_svfprintf_r+0xec2>
 800330e:	ac2c      	add	r4, sp, #176	; 0xb0
 8003310:	e78b      	b.n	800322a <_svfprintf_r+0xc4a>
 8003312:	aa1f      	add	r2, sp, #124	; 0x7c
 8003314:	4651      	mov	r1, sl
 8003316:	4658      	mov	r0, fp
 8003318:	f001 fcac 	bl	8004c74 <__ssprint_r>
 800331c:	2800      	cmp	r0, #0
 800331e:	f040 80c0 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8003322:	ac2c      	add	r4, sp, #176	; 0xb0
 8003324:	e795      	b.n	8003252 <_svfprintf_r+0xc72>
 8003326:	aa1f      	add	r2, sp, #124	; 0x7c
 8003328:	4651      	mov	r1, sl
 800332a:	4658      	mov	r0, fp
 800332c:	f001 fca2 	bl	8004c74 <__ssprint_r>
 8003330:	2800      	cmp	r0, #0
 8003332:	f040 80b6 	bne.w	80034a2 <_svfprintf_r+0xec2>
 8003336:	ac2c      	add	r4, sp, #176	; 0xb0
 8003338:	e7a1      	b.n	800327e <_svfprintf_r+0xc9e>
 800333a:	aa1f      	add	r2, sp, #124	; 0x7c
 800333c:	4651      	mov	r1, sl
 800333e:	4658      	mov	r0, fp
 8003340:	f001 fc98 	bl	8004c74 <__ssprint_r>
 8003344:	2800      	cmp	r0, #0
 8003346:	f040 80ac 	bne.w	80034a2 <_svfprintf_r+0xec2>
 800334a:	ac2c      	add	r4, sp, #176	; 0xb0
 800334c:	e7b4      	b.n	80032b8 <_svfprintf_r+0xcd8>
 800334e:	bf00      	nop
 8003350:	080064ce 	.word	0x080064ce
 8003354:	080064e0 	.word	0x080064e0
 8003358:	9b03      	ldr	r3, [sp, #12]
 800335a:	2b01      	cmp	r3, #1
 800335c:	dc01      	bgt.n	8003362 <_svfprintf_r+0xd82>
 800335e:	07ea      	lsls	r2, r5, #31
 8003360:	d576      	bpl.n	8003450 <_svfprintf_r+0xe70>
 8003362:	2301      	movs	r3, #1
 8003364:	6063      	str	r3, [r4, #4]
 8003366:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003368:	f8c4 8000 	str.w	r8, [r4]
 800336c:	3301      	adds	r3, #1
 800336e:	9321      	str	r3, [sp, #132]	; 0x84
 8003370:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003372:	3301      	adds	r3, #1
 8003374:	2b07      	cmp	r3, #7
 8003376:	9320      	str	r3, [sp, #128]	; 0x80
 8003378:	dc36      	bgt.n	80033e8 <_svfprintf_r+0xe08>
 800337a:	3408      	adds	r4, #8
 800337c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800337e:	6023      	str	r3, [r4, #0]
 8003380:	9b08      	ldr	r3, [sp, #32]
 8003382:	6063      	str	r3, [r4, #4]
 8003384:	9a08      	ldr	r2, [sp, #32]
 8003386:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003388:	4413      	add	r3, r2
 800338a:	9321      	str	r3, [sp, #132]	; 0x84
 800338c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800338e:	3301      	adds	r3, #1
 8003390:	2b07      	cmp	r3, #7
 8003392:	9320      	str	r3, [sp, #128]	; 0x80
 8003394:	dc31      	bgt.n	80033fa <_svfprintf_r+0xe1a>
 8003396:	3408      	adds	r4, #8
 8003398:	2300      	movs	r3, #0
 800339a:	2200      	movs	r2, #0
 800339c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80033a0:	f7fd fb8e 	bl	8000ac0 <__aeabi_dcmpeq>
 80033a4:	9b03      	ldr	r3, [sp, #12]
 80033a6:	1e5e      	subs	r6, r3, #1
 80033a8:	2800      	cmp	r0, #0
 80033aa:	d12f      	bne.n	800340c <_svfprintf_r+0xe2c>
 80033ac:	f108 0301 	add.w	r3, r8, #1
 80033b0:	e884 0048 	stmia.w	r4, {r3, r6}
 80033b4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80033b6:	9a03      	ldr	r2, [sp, #12]
 80033b8:	3b01      	subs	r3, #1
 80033ba:	4413      	add	r3, r2
 80033bc:	9321      	str	r3, [sp, #132]	; 0x84
 80033be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80033c0:	3301      	adds	r3, #1
 80033c2:	2b07      	cmp	r3, #7
 80033c4:	9320      	str	r3, [sp, #128]	; 0x80
 80033c6:	dd4a      	ble.n	800345e <_svfprintf_r+0xe7e>
 80033c8:	aa1f      	add	r2, sp, #124	; 0x7c
 80033ca:	4651      	mov	r1, sl
 80033cc:	4658      	mov	r0, fp
 80033ce:	f001 fc51 	bl	8004c74 <__ssprint_r>
 80033d2:	2800      	cmp	r0, #0
 80033d4:	d165      	bne.n	80034a2 <_svfprintf_r+0xec2>
 80033d6:	ac2c      	add	r4, sp, #176	; 0xb0
 80033d8:	ab1b      	add	r3, sp, #108	; 0x6c
 80033da:	6023      	str	r3, [r4, #0]
 80033dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80033de:	6063      	str	r3, [r4, #4]
 80033e0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80033e2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80033e4:	4413      	add	r3, r2
 80033e6:	e41c      	b.n	8002c22 <_svfprintf_r+0x642>
 80033e8:	aa1f      	add	r2, sp, #124	; 0x7c
 80033ea:	4651      	mov	r1, sl
 80033ec:	4658      	mov	r0, fp
 80033ee:	f001 fc41 	bl	8004c74 <__ssprint_r>
 80033f2:	2800      	cmp	r0, #0
 80033f4:	d155      	bne.n	80034a2 <_svfprintf_r+0xec2>
 80033f6:	ac2c      	add	r4, sp, #176	; 0xb0
 80033f8:	e7c0      	b.n	800337c <_svfprintf_r+0xd9c>
 80033fa:	aa1f      	add	r2, sp, #124	; 0x7c
 80033fc:	4651      	mov	r1, sl
 80033fe:	4658      	mov	r0, fp
 8003400:	f001 fc38 	bl	8004c74 <__ssprint_r>
 8003404:	2800      	cmp	r0, #0
 8003406:	d14c      	bne.n	80034a2 <_svfprintf_r+0xec2>
 8003408:	ac2c      	add	r4, sp, #176	; 0xb0
 800340a:	e7c5      	b.n	8003398 <_svfprintf_r+0xdb8>
 800340c:	2e00      	cmp	r6, #0
 800340e:	dde3      	ble.n	80033d8 <_svfprintf_r+0xdf8>
 8003410:	4f59      	ldr	r7, [pc, #356]	; (8003578 <_svfprintf_r+0xf98>)
 8003412:	f04f 0810 	mov.w	r8, #16
 8003416:	2e10      	cmp	r6, #16
 8003418:	6027      	str	r7, [r4, #0]
 800341a:	dc04      	bgt.n	8003426 <_svfprintf_r+0xe46>
 800341c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800341e:	6066      	str	r6, [r4, #4]
 8003420:	441e      	add	r6, r3
 8003422:	9621      	str	r6, [sp, #132]	; 0x84
 8003424:	e7cb      	b.n	80033be <_svfprintf_r+0xdde>
 8003426:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003428:	f8c4 8004 	str.w	r8, [r4, #4]
 800342c:	3310      	adds	r3, #16
 800342e:	9321      	str	r3, [sp, #132]	; 0x84
 8003430:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003432:	3301      	adds	r3, #1
 8003434:	2b07      	cmp	r3, #7
 8003436:	9320      	str	r3, [sp, #128]	; 0x80
 8003438:	dc02      	bgt.n	8003440 <_svfprintf_r+0xe60>
 800343a:	3408      	adds	r4, #8
 800343c:	3e10      	subs	r6, #16
 800343e:	e7ea      	b.n	8003416 <_svfprintf_r+0xe36>
 8003440:	aa1f      	add	r2, sp, #124	; 0x7c
 8003442:	4651      	mov	r1, sl
 8003444:	4658      	mov	r0, fp
 8003446:	f001 fc15 	bl	8004c74 <__ssprint_r>
 800344a:	bb50      	cbnz	r0, 80034a2 <_svfprintf_r+0xec2>
 800344c:	ac2c      	add	r4, sp, #176	; 0xb0
 800344e:	e7f5      	b.n	800343c <_svfprintf_r+0xe5c>
 8003450:	2301      	movs	r3, #1
 8003452:	6063      	str	r3, [r4, #4]
 8003454:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003456:	f8c4 8000 	str.w	r8, [r4]
 800345a:	3301      	adds	r3, #1
 800345c:	e7ae      	b.n	80033bc <_svfprintf_r+0xddc>
 800345e:	3408      	adds	r4, #8
 8003460:	e7ba      	b.n	80033d8 <_svfprintf_r+0xdf8>
 8003462:	3408      	adds	r4, #8
 8003464:	f7ff bbed 	b.w	8002c42 <_svfprintf_r+0x662>
 8003468:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800346a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800346c:	1a9d      	subs	r5, r3, r2
 800346e:	2d00      	cmp	r5, #0
 8003470:	f77f abea 	ble.w	8002c48 <_svfprintf_r+0x668>
 8003474:	2610      	movs	r6, #16
 8003476:	4b41      	ldr	r3, [pc, #260]	; (800357c <_svfprintf_r+0xf9c>)
 8003478:	6023      	str	r3, [r4, #0]
 800347a:	2d10      	cmp	r5, #16
 800347c:	dc1b      	bgt.n	80034b6 <_svfprintf_r+0xed6>
 800347e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003480:	6065      	str	r5, [r4, #4]
 8003482:	441d      	add	r5, r3
 8003484:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003486:	9521      	str	r5, [sp, #132]	; 0x84
 8003488:	3301      	adds	r3, #1
 800348a:	2b07      	cmp	r3, #7
 800348c:	9320      	str	r3, [sp, #128]	; 0x80
 800348e:	f77f abdb 	ble.w	8002c48 <_svfprintf_r+0x668>
 8003492:	aa1f      	add	r2, sp, #124	; 0x7c
 8003494:	4651      	mov	r1, sl
 8003496:	4658      	mov	r0, fp
 8003498:	f001 fbec 	bl	8004c74 <__ssprint_r>
 800349c:	2800      	cmp	r0, #0
 800349e:	f43f abd3 	beq.w	8002c48 <_svfprintf_r+0x668>
 80034a2:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 80034a6:	f013 0f40 	tst.w	r3, #64	; 0x40
 80034aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80034ac:	bf18      	it	ne
 80034ae:	f04f 33ff 	movne.w	r3, #4294967295
 80034b2:	f7ff b8b9 	b.w	8002628 <_svfprintf_r+0x48>
 80034b6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80034b8:	6066      	str	r6, [r4, #4]
 80034ba:	3310      	adds	r3, #16
 80034bc:	9321      	str	r3, [sp, #132]	; 0x84
 80034be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80034c0:	3301      	adds	r3, #1
 80034c2:	2b07      	cmp	r3, #7
 80034c4:	9320      	str	r3, [sp, #128]	; 0x80
 80034c6:	dc02      	bgt.n	80034ce <_svfprintf_r+0xeee>
 80034c8:	3408      	adds	r4, #8
 80034ca:	3d10      	subs	r5, #16
 80034cc:	e7d3      	b.n	8003476 <_svfprintf_r+0xe96>
 80034ce:	aa1f      	add	r2, sp, #124	; 0x7c
 80034d0:	4651      	mov	r1, sl
 80034d2:	4658      	mov	r0, fp
 80034d4:	f001 fbce 	bl	8004c74 <__ssprint_r>
 80034d8:	2800      	cmp	r0, #0
 80034da:	d1e2      	bne.n	80034a2 <_svfprintf_r+0xec2>
 80034dc:	ac2c      	add	r4, sp, #176	; 0xb0
 80034de:	e7f4      	b.n	80034ca <_svfprintf_r+0xeea>
 80034e0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d0dd      	beq.n	80034a2 <_svfprintf_r+0xec2>
 80034e6:	aa1f      	add	r2, sp, #124	; 0x7c
 80034e8:	4651      	mov	r1, sl
 80034ea:	4658      	mov	r0, fp
 80034ec:	f001 fbc2 	bl	8004c74 <__ssprint_r>
 80034f0:	e7d7      	b.n	80034a2 <_svfprintf_r+0xec2>
 80034f2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80034f6:	4610      	mov	r0, r2
 80034f8:	4619      	mov	r1, r3
 80034fa:	f7fd fb13 	bl	8000b24 <__aeabi_dcmpun>
 80034fe:	2800      	cmp	r0, #0
 8003500:	f43f aa44 	beq.w	800298c <_svfprintf_r+0x3ac>
 8003504:	4b1e      	ldr	r3, [pc, #120]	; (8003580 <_svfprintf_r+0xfa0>)
 8003506:	4a1f      	ldr	r2, [pc, #124]	; (8003584 <_svfprintf_r+0xfa4>)
 8003508:	f7ff ba34 	b.w	8002974 <_svfprintf_r+0x394>
 800350c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800350e:	eba3 0308 	sub.w	r3, r3, r8
 8003512:	9303      	str	r3, [sp, #12]
 8003514:	f7ff bab5 	b.w	8002a82 <_svfprintf_r+0x4a2>
 8003518:	ea56 0207 	orrs.w	r2, r6, r7
 800351c:	950b      	str	r5, [sp, #44]	; 0x2c
 800351e:	f43f ac2b 	beq.w	8002d78 <_svfprintf_r+0x798>
 8003522:	2b01      	cmp	r3, #1
 8003524:	f43f ac9d 	beq.w	8002e62 <_svfprintf_r+0x882>
 8003528:	2b02      	cmp	r3, #2
 800352a:	f43f acbd 	beq.w	8002ea8 <_svfprintf_r+0x8c8>
 800352e:	ab2c      	add	r3, sp, #176	; 0xb0
 8003530:	08f1      	lsrs	r1, r6, #3
 8003532:	ea41 7147 	orr.w	r1, r1, r7, lsl #29
 8003536:	08f8      	lsrs	r0, r7, #3
 8003538:	f006 0207 	and.w	r2, r6, #7
 800353c:	4607      	mov	r7, r0
 800353e:	460e      	mov	r6, r1
 8003540:	3230      	adds	r2, #48	; 0x30
 8003542:	ea56 0107 	orrs.w	r1, r6, r7
 8003546:	f103 38ff 	add.w	r8, r3, #4294967295
 800354a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800354e:	f47f ac86 	bne.w	8002e5e <_svfprintf_r+0x87e>
 8003552:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003554:	07c9      	lsls	r1, r1, #31
 8003556:	d506      	bpl.n	8003566 <_svfprintf_r+0xf86>
 8003558:	2a30      	cmp	r2, #48	; 0x30
 800355a:	d004      	beq.n	8003566 <_svfprintf_r+0xf86>
 800355c:	2230      	movs	r2, #48	; 0x30
 800355e:	f808 2c01 	strb.w	r2, [r8, #-1]
 8003562:	f1a3 0802 	sub.w	r8, r3, #2
 8003566:	464e      	mov	r6, r9
 8003568:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
 800356c:	eba9 0908 	sub.w	r9, r9, r8
 8003570:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8003572:	2700      	movs	r7, #0
 8003574:	f7ff bad1 	b.w	8002b1a <_svfprintf_r+0x53a>
 8003578:	080064e0 	.word	0x080064e0
 800357c:	080064d0 	.word	0x080064d0
 8003580:	080064a4 	.word	0x080064a4
 8003584:	080064a8 	.word	0x080064a8

08003588 <quorem>:
 8003588:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800358c:	6903      	ldr	r3, [r0, #16]
 800358e:	690c      	ldr	r4, [r1, #16]
 8003590:	429c      	cmp	r4, r3
 8003592:	4680      	mov	r8, r0
 8003594:	f300 8082 	bgt.w	800369c <quorem+0x114>
 8003598:	3c01      	subs	r4, #1
 800359a:	f101 0714 	add.w	r7, r1, #20
 800359e:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 80035a2:	f100 0614 	add.w	r6, r0, #20
 80035a6:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 80035aa:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 80035ae:	eb06 030e 	add.w	r3, r6, lr
 80035b2:	3501      	adds	r5, #1
 80035b4:	eb07 090e 	add.w	r9, r7, lr
 80035b8:	9301      	str	r3, [sp, #4]
 80035ba:	fbb0 f5f5 	udiv	r5, r0, r5
 80035be:	b395      	cbz	r5, 8003626 <quorem+0x9e>
 80035c0:	f04f 0a00 	mov.w	sl, #0
 80035c4:	4638      	mov	r0, r7
 80035c6:	46b4      	mov	ip, r6
 80035c8:	46d3      	mov	fp, sl
 80035ca:	f850 2b04 	ldr.w	r2, [r0], #4
 80035ce:	b293      	uxth	r3, r2
 80035d0:	fb05 a303 	mla	r3, r5, r3, sl
 80035d4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80035d8:	b29b      	uxth	r3, r3
 80035da:	ebab 0303 	sub.w	r3, fp, r3
 80035de:	0c12      	lsrs	r2, r2, #16
 80035e0:	f8bc b000 	ldrh.w	fp, [ip]
 80035e4:	fb05 a202 	mla	r2, r5, r2, sl
 80035e8:	fa13 f38b 	uxtah	r3, r3, fp
 80035ec:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 80035f0:	fa1f fb82 	uxth.w	fp, r2
 80035f4:	f8dc 2000 	ldr.w	r2, [ip]
 80035f8:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 80035fc:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003600:	b29b      	uxth	r3, r3
 8003602:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003606:	4581      	cmp	r9, r0
 8003608:	ea4f 4b22 	mov.w	fp, r2, asr #16
 800360c:	f84c 3b04 	str.w	r3, [ip], #4
 8003610:	d2db      	bcs.n	80035ca <quorem+0x42>
 8003612:	f856 300e 	ldr.w	r3, [r6, lr]
 8003616:	b933      	cbnz	r3, 8003626 <quorem+0x9e>
 8003618:	9b01      	ldr	r3, [sp, #4]
 800361a:	3b04      	subs	r3, #4
 800361c:	429e      	cmp	r6, r3
 800361e:	461a      	mov	r2, r3
 8003620:	d330      	bcc.n	8003684 <quorem+0xfc>
 8003622:	f8c8 4010 	str.w	r4, [r8, #16]
 8003626:	4640      	mov	r0, r8
 8003628:	f001 fa4d 	bl	8004ac6 <__mcmp>
 800362c:	2800      	cmp	r0, #0
 800362e:	db25      	blt.n	800367c <quorem+0xf4>
 8003630:	3501      	adds	r5, #1
 8003632:	4630      	mov	r0, r6
 8003634:	f04f 0e00 	mov.w	lr, #0
 8003638:	f857 2b04 	ldr.w	r2, [r7], #4
 800363c:	f8d0 c000 	ldr.w	ip, [r0]
 8003640:	b293      	uxth	r3, r2
 8003642:	ebae 0303 	sub.w	r3, lr, r3
 8003646:	0c12      	lsrs	r2, r2, #16
 8003648:	fa13 f38c 	uxtah	r3, r3, ip
 800364c:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8003650:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003654:	b29b      	uxth	r3, r3
 8003656:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800365a:	45b9      	cmp	r9, r7
 800365c:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8003660:	f840 3b04 	str.w	r3, [r0], #4
 8003664:	d2e8      	bcs.n	8003638 <quorem+0xb0>
 8003666:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 800366a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800366e:	b92a      	cbnz	r2, 800367c <quorem+0xf4>
 8003670:	3b04      	subs	r3, #4
 8003672:	429e      	cmp	r6, r3
 8003674:	461a      	mov	r2, r3
 8003676:	d30b      	bcc.n	8003690 <quorem+0x108>
 8003678:	f8c8 4010 	str.w	r4, [r8, #16]
 800367c:	4628      	mov	r0, r5
 800367e:	b003      	add	sp, #12
 8003680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003684:	6812      	ldr	r2, [r2, #0]
 8003686:	3b04      	subs	r3, #4
 8003688:	2a00      	cmp	r2, #0
 800368a:	d1ca      	bne.n	8003622 <quorem+0x9a>
 800368c:	3c01      	subs	r4, #1
 800368e:	e7c5      	b.n	800361c <quorem+0x94>
 8003690:	6812      	ldr	r2, [r2, #0]
 8003692:	3b04      	subs	r3, #4
 8003694:	2a00      	cmp	r2, #0
 8003696:	d1ef      	bne.n	8003678 <quorem+0xf0>
 8003698:	3c01      	subs	r4, #1
 800369a:	e7ea      	b.n	8003672 <quorem+0xea>
 800369c:	2000      	movs	r0, #0
 800369e:	e7ee      	b.n	800367e <quorem+0xf6>

080036a0 <_dtoa_r>:
 80036a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036a4:	ec57 6b10 	vmov	r6, r7, d0
 80036a8:	b097      	sub	sp, #92	; 0x5c
 80036aa:	e9cd 6700 	strd	r6, r7, [sp]
 80036ae:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80036b0:	9107      	str	r1, [sp, #28]
 80036b2:	4604      	mov	r4, r0
 80036b4:	920a      	str	r2, [sp, #40]	; 0x28
 80036b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80036b8:	9d20      	ldr	r5, [sp, #128]	; 0x80
 80036ba:	b93e      	cbnz	r6, 80036cc <_dtoa_r+0x2c>
 80036bc:	2010      	movs	r0, #16
 80036be:	f000 fdcb 	bl	8004258 <malloc>
 80036c2:	6260      	str	r0, [r4, #36]	; 0x24
 80036c4:	6046      	str	r6, [r0, #4]
 80036c6:	6086      	str	r6, [r0, #8]
 80036c8:	6006      	str	r6, [r0, #0]
 80036ca:	60c6      	str	r6, [r0, #12]
 80036cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80036ce:	6819      	ldr	r1, [r3, #0]
 80036d0:	b151      	cbz	r1, 80036e8 <_dtoa_r+0x48>
 80036d2:	685a      	ldr	r2, [r3, #4]
 80036d4:	604a      	str	r2, [r1, #4]
 80036d6:	2301      	movs	r3, #1
 80036d8:	4093      	lsls	r3, r2
 80036da:	608b      	str	r3, [r1, #8]
 80036dc:	4620      	mov	r0, r4
 80036de:	f001 f81d 	bl	800471c <_Bfree>
 80036e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80036e4:	2200      	movs	r2, #0
 80036e6:	601a      	str	r2, [r3, #0]
 80036e8:	9b01      	ldr	r3, [sp, #4]
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	bfbf      	itttt	lt
 80036ee:	2301      	movlt	r3, #1
 80036f0:	602b      	strlt	r3, [r5, #0]
 80036f2:	9b01      	ldrlt	r3, [sp, #4]
 80036f4:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80036f8:	bfb2      	itee	lt
 80036fa:	9301      	strlt	r3, [sp, #4]
 80036fc:	2300      	movge	r3, #0
 80036fe:	602b      	strge	r3, [r5, #0]
 8003700:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8003704:	4ba8      	ldr	r3, [pc, #672]	; (80039a8 <_dtoa_r+0x308>)
 8003706:	ea33 0308 	bics.w	r3, r3, r8
 800370a:	d11b      	bne.n	8003744 <_dtoa_r+0xa4>
 800370c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800370e:	f242 730f 	movw	r3, #9999	; 0x270f
 8003712:	6013      	str	r3, [r2, #0]
 8003714:	9b00      	ldr	r3, [sp, #0]
 8003716:	b923      	cbnz	r3, 8003722 <_dtoa_r+0x82>
 8003718:	f3c8 0013 	ubfx	r0, r8, #0, #20
 800371c:	2800      	cmp	r0, #0
 800371e:	f000 8578 	beq.w	8004212 <_dtoa_r+0xb72>
 8003722:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003724:	b953      	cbnz	r3, 800373c <_dtoa_r+0x9c>
 8003726:	4ba1      	ldr	r3, [pc, #644]	; (80039ac <_dtoa_r+0x30c>)
 8003728:	e021      	b.n	800376e <_dtoa_r+0xce>
 800372a:	4ba1      	ldr	r3, [pc, #644]	; (80039b0 <_dtoa_r+0x310>)
 800372c:	9302      	str	r3, [sp, #8]
 800372e:	3308      	adds	r3, #8
 8003730:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003732:	6013      	str	r3, [r2, #0]
 8003734:	9802      	ldr	r0, [sp, #8]
 8003736:	b017      	add	sp, #92	; 0x5c
 8003738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800373c:	4b9b      	ldr	r3, [pc, #620]	; (80039ac <_dtoa_r+0x30c>)
 800373e:	9302      	str	r3, [sp, #8]
 8003740:	3303      	adds	r3, #3
 8003742:	e7f5      	b.n	8003730 <_dtoa_r+0x90>
 8003744:	e9dd 6700 	ldrd	r6, r7, [sp]
 8003748:	2200      	movs	r2, #0
 800374a:	2300      	movs	r3, #0
 800374c:	4630      	mov	r0, r6
 800374e:	4639      	mov	r1, r7
 8003750:	f7fd f9b6 	bl	8000ac0 <__aeabi_dcmpeq>
 8003754:	4681      	mov	r9, r0
 8003756:	b160      	cbz	r0, 8003772 <_dtoa_r+0xd2>
 8003758:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800375a:	2301      	movs	r3, #1
 800375c:	6013      	str	r3, [r2, #0]
 800375e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003760:	2b00      	cmp	r3, #0
 8003762:	f000 8553 	beq.w	800420c <_dtoa_r+0xb6c>
 8003766:	4b93      	ldr	r3, [pc, #588]	; (80039b4 <_dtoa_r+0x314>)
 8003768:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800376a:	6013      	str	r3, [r2, #0]
 800376c:	3b01      	subs	r3, #1
 800376e:	9302      	str	r3, [sp, #8]
 8003770:	e7e0      	b.n	8003734 <_dtoa_r+0x94>
 8003772:	aa14      	add	r2, sp, #80	; 0x50
 8003774:	a915      	add	r1, sp, #84	; 0x54
 8003776:	ec47 6b10 	vmov	d0, r6, r7
 800377a:	4620      	mov	r0, r4
 800377c:	f001 fa1b 	bl	8004bb6 <__d2b>
 8003780:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8003784:	4682      	mov	sl, r0
 8003786:	2d00      	cmp	r5, #0
 8003788:	d07e      	beq.n	8003888 <_dtoa_r+0x1e8>
 800378a:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800378e:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8003792:	4630      	mov	r0, r6
 8003794:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8003798:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800379c:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
 80037a0:	2200      	movs	r2, #0
 80037a2:	4b85      	ldr	r3, [pc, #532]	; (80039b8 <_dtoa_r+0x318>)
 80037a4:	f7fc fd70 	bl	8000288 <__aeabi_dsub>
 80037a8:	a379      	add	r3, pc, #484	; (adr r3, 8003990 <_dtoa_r+0x2f0>)
 80037aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037ae:	f7fc ff1f 	bl	80005f0 <__aeabi_dmul>
 80037b2:	a379      	add	r3, pc, #484	; (adr r3, 8003998 <_dtoa_r+0x2f8>)
 80037b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037b8:	f7fc fd68 	bl	800028c <__adddf3>
 80037bc:	4606      	mov	r6, r0
 80037be:	4628      	mov	r0, r5
 80037c0:	460f      	mov	r7, r1
 80037c2:	f7fc feaf 	bl	8000524 <__aeabi_i2d>
 80037c6:	a376      	add	r3, pc, #472	; (adr r3, 80039a0 <_dtoa_r+0x300>)
 80037c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037cc:	f7fc ff10 	bl	80005f0 <__aeabi_dmul>
 80037d0:	4602      	mov	r2, r0
 80037d2:	460b      	mov	r3, r1
 80037d4:	4630      	mov	r0, r6
 80037d6:	4639      	mov	r1, r7
 80037d8:	f7fc fd58 	bl	800028c <__adddf3>
 80037dc:	4606      	mov	r6, r0
 80037de:	460f      	mov	r7, r1
 80037e0:	f7fd f9b6 	bl	8000b50 <__aeabi_d2iz>
 80037e4:	2200      	movs	r2, #0
 80037e6:	4683      	mov	fp, r0
 80037e8:	2300      	movs	r3, #0
 80037ea:	4630      	mov	r0, r6
 80037ec:	4639      	mov	r1, r7
 80037ee:	f7fd f971 	bl	8000ad4 <__aeabi_dcmplt>
 80037f2:	b158      	cbz	r0, 800380c <_dtoa_r+0x16c>
 80037f4:	4658      	mov	r0, fp
 80037f6:	f7fc fe95 	bl	8000524 <__aeabi_i2d>
 80037fa:	4602      	mov	r2, r0
 80037fc:	460b      	mov	r3, r1
 80037fe:	4630      	mov	r0, r6
 8003800:	4639      	mov	r1, r7
 8003802:	f7fd f95d 	bl	8000ac0 <__aeabi_dcmpeq>
 8003806:	b908      	cbnz	r0, 800380c <_dtoa_r+0x16c>
 8003808:	f10b 3bff 	add.w	fp, fp, #4294967295
 800380c:	f1bb 0f16 	cmp.w	fp, #22
 8003810:	d859      	bhi.n	80038c6 <_dtoa_r+0x226>
 8003812:	496a      	ldr	r1, [pc, #424]	; (80039bc <_dtoa_r+0x31c>)
 8003814:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 8003818:	e9dd 2300 	ldrd	r2, r3, [sp]
 800381c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003820:	f7fd f976 	bl	8000b10 <__aeabi_dcmpgt>
 8003824:	2800      	cmp	r0, #0
 8003826:	d050      	beq.n	80038ca <_dtoa_r+0x22a>
 8003828:	f10b 3bff 	add.w	fp, fp, #4294967295
 800382c:	2300      	movs	r3, #0
 800382e:	930e      	str	r3, [sp, #56]	; 0x38
 8003830:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003832:	1b5d      	subs	r5, r3, r5
 8003834:	1e6b      	subs	r3, r5, #1
 8003836:	9306      	str	r3, [sp, #24]
 8003838:	bf45      	ittet	mi
 800383a:	f1c5 0301 	rsbmi	r3, r5, #1
 800383e:	9305      	strmi	r3, [sp, #20]
 8003840:	2300      	movpl	r3, #0
 8003842:	2300      	movmi	r3, #0
 8003844:	bf4c      	ite	mi
 8003846:	9306      	strmi	r3, [sp, #24]
 8003848:	9305      	strpl	r3, [sp, #20]
 800384a:	f1bb 0f00 	cmp.w	fp, #0
 800384e:	db3e      	blt.n	80038ce <_dtoa_r+0x22e>
 8003850:	9b06      	ldr	r3, [sp, #24]
 8003852:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8003856:	445b      	add	r3, fp
 8003858:	9306      	str	r3, [sp, #24]
 800385a:	2300      	movs	r3, #0
 800385c:	9308      	str	r3, [sp, #32]
 800385e:	9b07      	ldr	r3, [sp, #28]
 8003860:	2b09      	cmp	r3, #9
 8003862:	f200 80af 	bhi.w	80039c4 <_dtoa_r+0x324>
 8003866:	2b05      	cmp	r3, #5
 8003868:	bfc4      	itt	gt
 800386a:	3b04      	subgt	r3, #4
 800386c:	9307      	strgt	r3, [sp, #28]
 800386e:	9b07      	ldr	r3, [sp, #28]
 8003870:	f1a3 0302 	sub.w	r3, r3, #2
 8003874:	bfcc      	ite	gt
 8003876:	2600      	movgt	r6, #0
 8003878:	2601      	movle	r6, #1
 800387a:	2b03      	cmp	r3, #3
 800387c:	f200 80ae 	bhi.w	80039dc <_dtoa_r+0x33c>
 8003880:	e8df f003 	tbb	[pc, r3]
 8003884:	772f8482 	.word	0x772f8482
 8003888:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800388a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800388c:	441d      	add	r5, r3
 800388e:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8003892:	2b20      	cmp	r3, #32
 8003894:	dd11      	ble.n	80038ba <_dtoa_r+0x21a>
 8003896:	9a00      	ldr	r2, [sp, #0]
 8003898:	f205 4012 	addw	r0, r5, #1042	; 0x412
 800389c:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 80038a0:	fa22 f000 	lsr.w	r0, r2, r0
 80038a4:	fa08 f303 	lsl.w	r3, r8, r3
 80038a8:	4318      	orrs	r0, r3
 80038aa:	f7fc fe2b 	bl	8000504 <__aeabi_ui2d>
 80038ae:	2301      	movs	r3, #1
 80038b0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 80038b4:	3d01      	subs	r5, #1
 80038b6:	9312      	str	r3, [sp, #72]	; 0x48
 80038b8:	e772      	b.n	80037a0 <_dtoa_r+0x100>
 80038ba:	f1c3 0020 	rsb	r0, r3, #32
 80038be:	9b00      	ldr	r3, [sp, #0]
 80038c0:	fa03 f000 	lsl.w	r0, r3, r0
 80038c4:	e7f1      	b.n	80038aa <_dtoa_r+0x20a>
 80038c6:	2301      	movs	r3, #1
 80038c8:	e7b1      	b.n	800382e <_dtoa_r+0x18e>
 80038ca:	900e      	str	r0, [sp, #56]	; 0x38
 80038cc:	e7b0      	b.n	8003830 <_dtoa_r+0x190>
 80038ce:	9b05      	ldr	r3, [sp, #20]
 80038d0:	eba3 030b 	sub.w	r3, r3, fp
 80038d4:	9305      	str	r3, [sp, #20]
 80038d6:	f1cb 0300 	rsb	r3, fp, #0
 80038da:	9308      	str	r3, [sp, #32]
 80038dc:	2300      	movs	r3, #0
 80038de:	930b      	str	r3, [sp, #44]	; 0x2c
 80038e0:	e7bd      	b.n	800385e <_dtoa_r+0x1be>
 80038e2:	2301      	movs	r3, #1
 80038e4:	9309      	str	r3, [sp, #36]	; 0x24
 80038e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80038e8:	2b00      	cmp	r3, #0
 80038ea:	dd7a      	ble.n	80039e2 <_dtoa_r+0x342>
 80038ec:	9304      	str	r3, [sp, #16]
 80038ee:	9303      	str	r3, [sp, #12]
 80038f0:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80038f2:	2200      	movs	r2, #0
 80038f4:	606a      	str	r2, [r5, #4]
 80038f6:	2104      	movs	r1, #4
 80038f8:	f101 0214 	add.w	r2, r1, #20
 80038fc:	429a      	cmp	r2, r3
 80038fe:	d975      	bls.n	80039ec <_dtoa_r+0x34c>
 8003900:	6869      	ldr	r1, [r5, #4]
 8003902:	4620      	mov	r0, r4
 8003904:	f000 fed6 	bl	80046b4 <_Balloc>
 8003908:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800390a:	6028      	str	r0, [r5, #0]
 800390c:	681b      	ldr	r3, [r3, #0]
 800390e:	9302      	str	r3, [sp, #8]
 8003910:	9b03      	ldr	r3, [sp, #12]
 8003912:	2b0e      	cmp	r3, #14
 8003914:	f200 80e5 	bhi.w	8003ae2 <_dtoa_r+0x442>
 8003918:	2e00      	cmp	r6, #0
 800391a:	f000 80e2 	beq.w	8003ae2 <_dtoa_r+0x442>
 800391e:	ed9d 7b00 	vldr	d7, [sp]
 8003922:	f1bb 0f00 	cmp.w	fp, #0
 8003926:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 800392a:	dd74      	ble.n	8003a16 <_dtoa_r+0x376>
 800392c:	4a23      	ldr	r2, [pc, #140]	; (80039bc <_dtoa_r+0x31c>)
 800392e:	f00b 030f 	and.w	r3, fp, #15
 8003932:	ea4f 162b 	mov.w	r6, fp, asr #4
 8003936:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800393a:	06f0      	lsls	r0, r6, #27
 800393c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003940:	d559      	bpl.n	80039f6 <_dtoa_r+0x356>
 8003942:	4b1f      	ldr	r3, [pc, #124]	; (80039c0 <_dtoa_r+0x320>)
 8003944:	ec51 0b17 	vmov	r0, r1, d7
 8003948:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800394c:	f7fc ff7a 	bl	8000844 <__aeabi_ddiv>
 8003950:	e9cd 0100 	strd	r0, r1, [sp]
 8003954:	f006 060f 	and.w	r6, r6, #15
 8003958:	2503      	movs	r5, #3
 800395a:	4f19      	ldr	r7, [pc, #100]	; (80039c0 <_dtoa_r+0x320>)
 800395c:	2e00      	cmp	r6, #0
 800395e:	d14c      	bne.n	80039fa <_dtoa_r+0x35a>
 8003960:	4642      	mov	r2, r8
 8003962:	464b      	mov	r3, r9
 8003964:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003968:	f7fc ff6c 	bl	8000844 <__aeabi_ddiv>
 800396c:	e9cd 0100 	strd	r0, r1, [sp]
 8003970:	e06a      	b.n	8003a48 <_dtoa_r+0x3a8>
 8003972:	2301      	movs	r3, #1
 8003974:	9309      	str	r3, [sp, #36]	; 0x24
 8003976:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003978:	445b      	add	r3, fp
 800397a:	9304      	str	r3, [sp, #16]
 800397c:	3301      	adds	r3, #1
 800397e:	2b01      	cmp	r3, #1
 8003980:	9303      	str	r3, [sp, #12]
 8003982:	bfb8      	it	lt
 8003984:	2301      	movlt	r3, #1
 8003986:	e7b3      	b.n	80038f0 <_dtoa_r+0x250>
 8003988:	2300      	movs	r3, #0
 800398a:	e7ab      	b.n	80038e4 <_dtoa_r+0x244>
 800398c:	2300      	movs	r3, #0
 800398e:	e7f1      	b.n	8003974 <_dtoa_r+0x2d4>
 8003990:	636f4361 	.word	0x636f4361
 8003994:	3fd287a7 	.word	0x3fd287a7
 8003998:	8b60c8b3 	.word	0x8b60c8b3
 800399c:	3fc68a28 	.word	0x3fc68a28
 80039a0:	509f79fb 	.word	0x509f79fb
 80039a4:	3fd34413 	.word	0x3fd34413
 80039a8:	7ff00000 	.word	0x7ff00000
 80039ac:	080064f9 	.word	0x080064f9
 80039b0:	080064f0 	.word	0x080064f0
 80039b4:	080064cf 	.word	0x080064cf
 80039b8:	3ff80000 	.word	0x3ff80000
 80039bc:	08006528 	.word	0x08006528
 80039c0:	08006500 	.word	0x08006500
 80039c4:	2601      	movs	r6, #1
 80039c6:	2300      	movs	r3, #0
 80039c8:	9307      	str	r3, [sp, #28]
 80039ca:	9609      	str	r6, [sp, #36]	; 0x24
 80039cc:	f04f 33ff 	mov.w	r3, #4294967295
 80039d0:	9304      	str	r3, [sp, #16]
 80039d2:	9303      	str	r3, [sp, #12]
 80039d4:	2200      	movs	r2, #0
 80039d6:	2312      	movs	r3, #18
 80039d8:	920a      	str	r2, [sp, #40]	; 0x28
 80039da:	e789      	b.n	80038f0 <_dtoa_r+0x250>
 80039dc:	2301      	movs	r3, #1
 80039de:	9309      	str	r3, [sp, #36]	; 0x24
 80039e0:	e7f4      	b.n	80039cc <_dtoa_r+0x32c>
 80039e2:	2301      	movs	r3, #1
 80039e4:	9304      	str	r3, [sp, #16]
 80039e6:	9303      	str	r3, [sp, #12]
 80039e8:	461a      	mov	r2, r3
 80039ea:	e7f5      	b.n	80039d8 <_dtoa_r+0x338>
 80039ec:	686a      	ldr	r2, [r5, #4]
 80039ee:	3201      	adds	r2, #1
 80039f0:	606a      	str	r2, [r5, #4]
 80039f2:	0049      	lsls	r1, r1, #1
 80039f4:	e780      	b.n	80038f8 <_dtoa_r+0x258>
 80039f6:	2502      	movs	r5, #2
 80039f8:	e7af      	b.n	800395a <_dtoa_r+0x2ba>
 80039fa:	07f1      	lsls	r1, r6, #31
 80039fc:	d508      	bpl.n	8003a10 <_dtoa_r+0x370>
 80039fe:	4640      	mov	r0, r8
 8003a00:	4649      	mov	r1, r9
 8003a02:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003a06:	f7fc fdf3 	bl	80005f0 <__aeabi_dmul>
 8003a0a:	3501      	adds	r5, #1
 8003a0c:	4680      	mov	r8, r0
 8003a0e:	4689      	mov	r9, r1
 8003a10:	1076      	asrs	r6, r6, #1
 8003a12:	3708      	adds	r7, #8
 8003a14:	e7a2      	b.n	800395c <_dtoa_r+0x2bc>
 8003a16:	f000 809d 	beq.w	8003b54 <_dtoa_r+0x4b4>
 8003a1a:	f1cb 0600 	rsb	r6, fp, #0
 8003a1e:	4b9f      	ldr	r3, [pc, #636]	; (8003c9c <_dtoa_r+0x5fc>)
 8003a20:	4f9f      	ldr	r7, [pc, #636]	; (8003ca0 <_dtoa_r+0x600>)
 8003a22:	f006 020f 	and.w	r2, r6, #15
 8003a26:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003a2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a2e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003a32:	f7fc fddd 	bl	80005f0 <__aeabi_dmul>
 8003a36:	e9cd 0100 	strd	r0, r1, [sp]
 8003a3a:	1136      	asrs	r6, r6, #4
 8003a3c:	2300      	movs	r3, #0
 8003a3e:	2502      	movs	r5, #2
 8003a40:	2e00      	cmp	r6, #0
 8003a42:	d17c      	bne.n	8003b3e <_dtoa_r+0x49e>
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	d191      	bne.n	800396c <_dtoa_r+0x2cc>
 8003a48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003a4a:	2b00      	cmp	r3, #0
 8003a4c:	f000 8084 	beq.w	8003b58 <_dtoa_r+0x4b8>
 8003a50:	e9dd 8900 	ldrd	r8, r9, [sp]
 8003a54:	2200      	movs	r2, #0
 8003a56:	4b93      	ldr	r3, [pc, #588]	; (8003ca4 <_dtoa_r+0x604>)
 8003a58:	4640      	mov	r0, r8
 8003a5a:	4649      	mov	r1, r9
 8003a5c:	f7fd f83a 	bl	8000ad4 <__aeabi_dcmplt>
 8003a60:	2800      	cmp	r0, #0
 8003a62:	d079      	beq.n	8003b58 <_dtoa_r+0x4b8>
 8003a64:	9b03      	ldr	r3, [sp, #12]
 8003a66:	2b00      	cmp	r3, #0
 8003a68:	d076      	beq.n	8003b58 <_dtoa_r+0x4b8>
 8003a6a:	9b04      	ldr	r3, [sp, #16]
 8003a6c:	2b00      	cmp	r3, #0
 8003a6e:	dd34      	ble.n	8003ada <_dtoa_r+0x43a>
 8003a70:	2200      	movs	r2, #0
 8003a72:	4b8d      	ldr	r3, [pc, #564]	; (8003ca8 <_dtoa_r+0x608>)
 8003a74:	4640      	mov	r0, r8
 8003a76:	4649      	mov	r1, r9
 8003a78:	f7fc fdba 	bl	80005f0 <__aeabi_dmul>
 8003a7c:	e9cd 0100 	strd	r0, r1, [sp]
 8003a80:	9e04      	ldr	r6, [sp, #16]
 8003a82:	f10b 37ff 	add.w	r7, fp, #4294967295
 8003a86:	3501      	adds	r5, #1
 8003a88:	4628      	mov	r0, r5
 8003a8a:	f7fc fd4b 	bl	8000524 <__aeabi_i2d>
 8003a8e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003a92:	f7fc fdad 	bl	80005f0 <__aeabi_dmul>
 8003a96:	2200      	movs	r2, #0
 8003a98:	4b84      	ldr	r3, [pc, #528]	; (8003cac <_dtoa_r+0x60c>)
 8003a9a:	f7fc fbf7 	bl	800028c <__adddf3>
 8003a9e:	4680      	mov	r8, r0
 8003aa0:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 8003aa4:	2e00      	cmp	r6, #0
 8003aa6:	d15a      	bne.n	8003b5e <_dtoa_r+0x4be>
 8003aa8:	2200      	movs	r2, #0
 8003aaa:	4b81      	ldr	r3, [pc, #516]	; (8003cb0 <_dtoa_r+0x610>)
 8003aac:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003ab0:	f7fc fbea 	bl	8000288 <__aeabi_dsub>
 8003ab4:	4642      	mov	r2, r8
 8003ab6:	464b      	mov	r3, r9
 8003ab8:	e9cd 0100 	strd	r0, r1, [sp]
 8003abc:	f7fd f828 	bl	8000b10 <__aeabi_dcmpgt>
 8003ac0:	2800      	cmp	r0, #0
 8003ac2:	f040 829b 	bne.w	8003ffc <_dtoa_r+0x95c>
 8003ac6:	4642      	mov	r2, r8
 8003ac8:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8003acc:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003ad0:	f7fd f800 	bl	8000ad4 <__aeabi_dcmplt>
 8003ad4:	2800      	cmp	r0, #0
 8003ad6:	f040 828f 	bne.w	8003ff8 <_dtoa_r+0x958>
 8003ada:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8003ade:	e9cd 2300 	strd	r2, r3, [sp]
 8003ae2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003ae4:	2b00      	cmp	r3, #0
 8003ae6:	f2c0 8150 	blt.w	8003d8a <_dtoa_r+0x6ea>
 8003aea:	f1bb 0f0e 	cmp.w	fp, #14
 8003aee:	f300 814c 	bgt.w	8003d8a <_dtoa_r+0x6ea>
 8003af2:	4b6a      	ldr	r3, [pc, #424]	; (8003c9c <_dtoa_r+0x5fc>)
 8003af4:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8003af8:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003afc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003afe:	2b00      	cmp	r3, #0
 8003b00:	f280 80da 	bge.w	8003cb8 <_dtoa_r+0x618>
 8003b04:	9b03      	ldr	r3, [sp, #12]
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	f300 80d6 	bgt.w	8003cb8 <_dtoa_r+0x618>
 8003b0c:	f040 8273 	bne.w	8003ff6 <_dtoa_r+0x956>
 8003b10:	2200      	movs	r2, #0
 8003b12:	4b67      	ldr	r3, [pc, #412]	; (8003cb0 <_dtoa_r+0x610>)
 8003b14:	4640      	mov	r0, r8
 8003b16:	4649      	mov	r1, r9
 8003b18:	f7fc fd6a 	bl	80005f0 <__aeabi_dmul>
 8003b1c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003b20:	f7fc ffec 	bl	8000afc <__aeabi_dcmpge>
 8003b24:	9e03      	ldr	r6, [sp, #12]
 8003b26:	4637      	mov	r7, r6
 8003b28:	2800      	cmp	r0, #0
 8003b2a:	f040 824a 	bne.w	8003fc2 <_dtoa_r+0x922>
 8003b2e:	9b02      	ldr	r3, [sp, #8]
 8003b30:	9a02      	ldr	r2, [sp, #8]
 8003b32:	1c5d      	adds	r5, r3, #1
 8003b34:	2331      	movs	r3, #49	; 0x31
 8003b36:	7013      	strb	r3, [r2, #0]
 8003b38:	f10b 0b01 	add.w	fp, fp, #1
 8003b3c:	e245      	b.n	8003fca <_dtoa_r+0x92a>
 8003b3e:	07f2      	lsls	r2, r6, #31
 8003b40:	d505      	bpl.n	8003b4e <_dtoa_r+0x4ae>
 8003b42:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003b46:	f7fc fd53 	bl	80005f0 <__aeabi_dmul>
 8003b4a:	3501      	adds	r5, #1
 8003b4c:	2301      	movs	r3, #1
 8003b4e:	1076      	asrs	r6, r6, #1
 8003b50:	3708      	adds	r7, #8
 8003b52:	e775      	b.n	8003a40 <_dtoa_r+0x3a0>
 8003b54:	2502      	movs	r5, #2
 8003b56:	e777      	b.n	8003a48 <_dtoa_r+0x3a8>
 8003b58:	465f      	mov	r7, fp
 8003b5a:	9e03      	ldr	r6, [sp, #12]
 8003b5c:	e794      	b.n	8003a88 <_dtoa_r+0x3e8>
 8003b5e:	9a02      	ldr	r2, [sp, #8]
 8003b60:	4b4e      	ldr	r3, [pc, #312]	; (8003c9c <_dtoa_r+0x5fc>)
 8003b62:	4432      	add	r2, r6
 8003b64:	9213      	str	r2, [sp, #76]	; 0x4c
 8003b66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003b68:	1e71      	subs	r1, r6, #1
 8003b6a:	2a00      	cmp	r2, #0
 8003b6c:	d048      	beq.n	8003c00 <_dtoa_r+0x560>
 8003b6e:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8003b72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b76:	2000      	movs	r0, #0
 8003b78:	494e      	ldr	r1, [pc, #312]	; (8003cb4 <_dtoa_r+0x614>)
 8003b7a:	f7fc fe63 	bl	8000844 <__aeabi_ddiv>
 8003b7e:	4642      	mov	r2, r8
 8003b80:	464b      	mov	r3, r9
 8003b82:	f7fc fb81 	bl	8000288 <__aeabi_dsub>
 8003b86:	9d02      	ldr	r5, [sp, #8]
 8003b88:	4680      	mov	r8, r0
 8003b8a:	4689      	mov	r9, r1
 8003b8c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003b90:	f7fc ffde 	bl	8000b50 <__aeabi_d2iz>
 8003b94:	4606      	mov	r6, r0
 8003b96:	f7fc fcc5 	bl	8000524 <__aeabi_i2d>
 8003b9a:	4602      	mov	r2, r0
 8003b9c:	460b      	mov	r3, r1
 8003b9e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003ba2:	f7fc fb71 	bl	8000288 <__aeabi_dsub>
 8003ba6:	3630      	adds	r6, #48	; 0x30
 8003ba8:	f805 6b01 	strb.w	r6, [r5], #1
 8003bac:	4642      	mov	r2, r8
 8003bae:	464b      	mov	r3, r9
 8003bb0:	e9cd 0100 	strd	r0, r1, [sp]
 8003bb4:	f7fc ff8e 	bl	8000ad4 <__aeabi_dcmplt>
 8003bb8:	2800      	cmp	r0, #0
 8003bba:	d165      	bne.n	8003c88 <_dtoa_r+0x5e8>
 8003bbc:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003bc0:	2000      	movs	r0, #0
 8003bc2:	4938      	ldr	r1, [pc, #224]	; (8003ca4 <_dtoa_r+0x604>)
 8003bc4:	f7fc fb60 	bl	8000288 <__aeabi_dsub>
 8003bc8:	4642      	mov	r2, r8
 8003bca:	464b      	mov	r3, r9
 8003bcc:	f7fc ff82 	bl	8000ad4 <__aeabi_dcmplt>
 8003bd0:	2800      	cmp	r0, #0
 8003bd2:	f040 80ba 	bne.w	8003d4a <_dtoa_r+0x6aa>
 8003bd6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003bd8:	429d      	cmp	r5, r3
 8003bda:	f43f af7e 	beq.w	8003ada <_dtoa_r+0x43a>
 8003bde:	2200      	movs	r2, #0
 8003be0:	4b31      	ldr	r3, [pc, #196]	; (8003ca8 <_dtoa_r+0x608>)
 8003be2:	4640      	mov	r0, r8
 8003be4:	4649      	mov	r1, r9
 8003be6:	f7fc fd03 	bl	80005f0 <__aeabi_dmul>
 8003bea:	2200      	movs	r2, #0
 8003bec:	4680      	mov	r8, r0
 8003bee:	4689      	mov	r9, r1
 8003bf0:	4b2d      	ldr	r3, [pc, #180]	; (8003ca8 <_dtoa_r+0x608>)
 8003bf2:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003bf6:	f7fc fcfb 	bl	80005f0 <__aeabi_dmul>
 8003bfa:	e9cd 0100 	strd	r0, r1, [sp]
 8003bfe:	e7c5      	b.n	8003b8c <_dtoa_r+0x4ec>
 8003c00:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 8003c04:	4642      	mov	r2, r8
 8003c06:	464b      	mov	r3, r9
 8003c08:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003c0c:	f7fc fcf0 	bl	80005f0 <__aeabi_dmul>
 8003c10:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003c14:	9d02      	ldr	r5, [sp, #8]
 8003c16:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003c1a:	f7fc ff99 	bl	8000b50 <__aeabi_d2iz>
 8003c1e:	4606      	mov	r6, r0
 8003c20:	f7fc fc80 	bl	8000524 <__aeabi_i2d>
 8003c24:	3630      	adds	r6, #48	; 0x30
 8003c26:	4602      	mov	r2, r0
 8003c28:	460b      	mov	r3, r1
 8003c2a:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003c2e:	f7fc fb2b 	bl	8000288 <__aeabi_dsub>
 8003c32:	f805 6b01 	strb.w	r6, [r5], #1
 8003c36:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003c38:	42ab      	cmp	r3, r5
 8003c3a:	4680      	mov	r8, r0
 8003c3c:	4689      	mov	r9, r1
 8003c3e:	f04f 0200 	mov.w	r2, #0
 8003c42:	d125      	bne.n	8003c90 <_dtoa_r+0x5f0>
 8003c44:	4b1b      	ldr	r3, [pc, #108]	; (8003cb4 <_dtoa_r+0x614>)
 8003c46:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003c4a:	f7fc fb1f 	bl	800028c <__adddf3>
 8003c4e:	4602      	mov	r2, r0
 8003c50:	460b      	mov	r3, r1
 8003c52:	4640      	mov	r0, r8
 8003c54:	4649      	mov	r1, r9
 8003c56:	f7fc ff5b 	bl	8000b10 <__aeabi_dcmpgt>
 8003c5a:	2800      	cmp	r0, #0
 8003c5c:	d175      	bne.n	8003d4a <_dtoa_r+0x6aa>
 8003c5e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003c62:	2000      	movs	r0, #0
 8003c64:	4913      	ldr	r1, [pc, #76]	; (8003cb4 <_dtoa_r+0x614>)
 8003c66:	f7fc fb0f 	bl	8000288 <__aeabi_dsub>
 8003c6a:	4602      	mov	r2, r0
 8003c6c:	460b      	mov	r3, r1
 8003c6e:	4640      	mov	r0, r8
 8003c70:	4649      	mov	r1, r9
 8003c72:	f7fc ff2f 	bl	8000ad4 <__aeabi_dcmplt>
 8003c76:	2800      	cmp	r0, #0
 8003c78:	f43f af2f 	beq.w	8003ada <_dtoa_r+0x43a>
 8003c7c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8003c80:	2b30      	cmp	r3, #48	; 0x30
 8003c82:	f105 32ff 	add.w	r2, r5, #4294967295
 8003c86:	d001      	beq.n	8003c8c <_dtoa_r+0x5ec>
 8003c88:	46bb      	mov	fp, r7
 8003c8a:	e04d      	b.n	8003d28 <_dtoa_r+0x688>
 8003c8c:	4615      	mov	r5, r2
 8003c8e:	e7f5      	b.n	8003c7c <_dtoa_r+0x5dc>
 8003c90:	4b05      	ldr	r3, [pc, #20]	; (8003ca8 <_dtoa_r+0x608>)
 8003c92:	f7fc fcad 	bl	80005f0 <__aeabi_dmul>
 8003c96:	e9cd 0100 	strd	r0, r1, [sp]
 8003c9a:	e7bc      	b.n	8003c16 <_dtoa_r+0x576>
 8003c9c:	08006528 	.word	0x08006528
 8003ca0:	08006500 	.word	0x08006500
 8003ca4:	3ff00000 	.word	0x3ff00000
 8003ca8:	40240000 	.word	0x40240000
 8003cac:	401c0000 	.word	0x401c0000
 8003cb0:	40140000 	.word	0x40140000
 8003cb4:	3fe00000 	.word	0x3fe00000
 8003cb8:	e9dd 6700 	ldrd	r6, r7, [sp]
 8003cbc:	9d02      	ldr	r5, [sp, #8]
 8003cbe:	4642      	mov	r2, r8
 8003cc0:	464b      	mov	r3, r9
 8003cc2:	4630      	mov	r0, r6
 8003cc4:	4639      	mov	r1, r7
 8003cc6:	f7fc fdbd 	bl	8000844 <__aeabi_ddiv>
 8003cca:	f7fc ff41 	bl	8000b50 <__aeabi_d2iz>
 8003cce:	9000      	str	r0, [sp, #0]
 8003cd0:	f7fc fc28 	bl	8000524 <__aeabi_i2d>
 8003cd4:	4642      	mov	r2, r8
 8003cd6:	464b      	mov	r3, r9
 8003cd8:	f7fc fc8a 	bl	80005f0 <__aeabi_dmul>
 8003cdc:	4602      	mov	r2, r0
 8003cde:	460b      	mov	r3, r1
 8003ce0:	4630      	mov	r0, r6
 8003ce2:	4639      	mov	r1, r7
 8003ce4:	f7fc fad0 	bl	8000288 <__aeabi_dsub>
 8003ce8:	9e00      	ldr	r6, [sp, #0]
 8003cea:	9f03      	ldr	r7, [sp, #12]
 8003cec:	3630      	adds	r6, #48	; 0x30
 8003cee:	f805 6b01 	strb.w	r6, [r5], #1
 8003cf2:	9e02      	ldr	r6, [sp, #8]
 8003cf4:	1bae      	subs	r6, r5, r6
 8003cf6:	42b7      	cmp	r7, r6
 8003cf8:	4602      	mov	r2, r0
 8003cfa:	460b      	mov	r3, r1
 8003cfc:	d138      	bne.n	8003d70 <_dtoa_r+0x6d0>
 8003cfe:	f7fc fac5 	bl	800028c <__adddf3>
 8003d02:	4606      	mov	r6, r0
 8003d04:	460f      	mov	r7, r1
 8003d06:	4602      	mov	r2, r0
 8003d08:	460b      	mov	r3, r1
 8003d0a:	4640      	mov	r0, r8
 8003d0c:	4649      	mov	r1, r9
 8003d0e:	f7fc fee1 	bl	8000ad4 <__aeabi_dcmplt>
 8003d12:	b9c8      	cbnz	r0, 8003d48 <_dtoa_r+0x6a8>
 8003d14:	4632      	mov	r2, r6
 8003d16:	463b      	mov	r3, r7
 8003d18:	4640      	mov	r0, r8
 8003d1a:	4649      	mov	r1, r9
 8003d1c:	f7fc fed0 	bl	8000ac0 <__aeabi_dcmpeq>
 8003d20:	b110      	cbz	r0, 8003d28 <_dtoa_r+0x688>
 8003d22:	9b00      	ldr	r3, [sp, #0]
 8003d24:	07db      	lsls	r3, r3, #31
 8003d26:	d40f      	bmi.n	8003d48 <_dtoa_r+0x6a8>
 8003d28:	4651      	mov	r1, sl
 8003d2a:	4620      	mov	r0, r4
 8003d2c:	f000 fcf6 	bl	800471c <_Bfree>
 8003d30:	2300      	movs	r3, #0
 8003d32:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003d34:	702b      	strb	r3, [r5, #0]
 8003d36:	f10b 0301 	add.w	r3, fp, #1
 8003d3a:	6013      	str	r3, [r2, #0]
 8003d3c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003d3e:	2b00      	cmp	r3, #0
 8003d40:	f43f acf8 	beq.w	8003734 <_dtoa_r+0x94>
 8003d44:	601d      	str	r5, [r3, #0]
 8003d46:	e4f5      	b.n	8003734 <_dtoa_r+0x94>
 8003d48:	465f      	mov	r7, fp
 8003d4a:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8003d4e:	2a39      	cmp	r2, #57	; 0x39
 8003d50:	f105 33ff 	add.w	r3, r5, #4294967295
 8003d54:	d106      	bne.n	8003d64 <_dtoa_r+0x6c4>
 8003d56:	9a02      	ldr	r2, [sp, #8]
 8003d58:	429a      	cmp	r2, r3
 8003d5a:	d107      	bne.n	8003d6c <_dtoa_r+0x6cc>
 8003d5c:	2330      	movs	r3, #48	; 0x30
 8003d5e:	7013      	strb	r3, [r2, #0]
 8003d60:	3701      	adds	r7, #1
 8003d62:	4613      	mov	r3, r2
 8003d64:	781a      	ldrb	r2, [r3, #0]
 8003d66:	3201      	adds	r2, #1
 8003d68:	701a      	strb	r2, [r3, #0]
 8003d6a:	e78d      	b.n	8003c88 <_dtoa_r+0x5e8>
 8003d6c:	461d      	mov	r5, r3
 8003d6e:	e7ec      	b.n	8003d4a <_dtoa_r+0x6aa>
 8003d70:	2200      	movs	r2, #0
 8003d72:	4ba4      	ldr	r3, [pc, #656]	; (8004004 <_dtoa_r+0x964>)
 8003d74:	f7fc fc3c 	bl	80005f0 <__aeabi_dmul>
 8003d78:	2200      	movs	r2, #0
 8003d7a:	2300      	movs	r3, #0
 8003d7c:	4606      	mov	r6, r0
 8003d7e:	460f      	mov	r7, r1
 8003d80:	f7fc fe9e 	bl	8000ac0 <__aeabi_dcmpeq>
 8003d84:	2800      	cmp	r0, #0
 8003d86:	d09a      	beq.n	8003cbe <_dtoa_r+0x61e>
 8003d88:	e7ce      	b.n	8003d28 <_dtoa_r+0x688>
 8003d8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003d8c:	2a00      	cmp	r2, #0
 8003d8e:	f000 80cd 	beq.w	8003f2c <_dtoa_r+0x88c>
 8003d92:	9a07      	ldr	r2, [sp, #28]
 8003d94:	2a01      	cmp	r2, #1
 8003d96:	f300 80af 	bgt.w	8003ef8 <_dtoa_r+0x858>
 8003d9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003d9c:	2a00      	cmp	r2, #0
 8003d9e:	f000 80a7 	beq.w	8003ef0 <_dtoa_r+0x850>
 8003da2:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8003da6:	9e08      	ldr	r6, [sp, #32]
 8003da8:	9d05      	ldr	r5, [sp, #20]
 8003daa:	9a05      	ldr	r2, [sp, #20]
 8003dac:	441a      	add	r2, r3
 8003dae:	9205      	str	r2, [sp, #20]
 8003db0:	9a06      	ldr	r2, [sp, #24]
 8003db2:	2101      	movs	r1, #1
 8003db4:	441a      	add	r2, r3
 8003db6:	4620      	mov	r0, r4
 8003db8:	9206      	str	r2, [sp, #24]
 8003dba:	f000 fd4f 	bl	800485c <__i2b>
 8003dbe:	4607      	mov	r7, r0
 8003dc0:	2d00      	cmp	r5, #0
 8003dc2:	dd0c      	ble.n	8003dde <_dtoa_r+0x73e>
 8003dc4:	9b06      	ldr	r3, [sp, #24]
 8003dc6:	2b00      	cmp	r3, #0
 8003dc8:	dd09      	ble.n	8003dde <_dtoa_r+0x73e>
 8003dca:	42ab      	cmp	r3, r5
 8003dcc:	9a05      	ldr	r2, [sp, #20]
 8003dce:	bfa8      	it	ge
 8003dd0:	462b      	movge	r3, r5
 8003dd2:	1ad2      	subs	r2, r2, r3
 8003dd4:	9205      	str	r2, [sp, #20]
 8003dd6:	9a06      	ldr	r2, [sp, #24]
 8003dd8:	1aed      	subs	r5, r5, r3
 8003dda:	1ad3      	subs	r3, r2, r3
 8003ddc:	9306      	str	r3, [sp, #24]
 8003dde:	9b08      	ldr	r3, [sp, #32]
 8003de0:	b1f3      	cbz	r3, 8003e20 <_dtoa_r+0x780>
 8003de2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003de4:	2b00      	cmp	r3, #0
 8003de6:	f000 80a5 	beq.w	8003f34 <_dtoa_r+0x894>
 8003dea:	2e00      	cmp	r6, #0
 8003dec:	dd10      	ble.n	8003e10 <_dtoa_r+0x770>
 8003dee:	4639      	mov	r1, r7
 8003df0:	4632      	mov	r2, r6
 8003df2:	4620      	mov	r0, r4
 8003df4:	f000 fdc8 	bl	8004988 <__pow5mult>
 8003df8:	4652      	mov	r2, sl
 8003dfa:	4601      	mov	r1, r0
 8003dfc:	4607      	mov	r7, r0
 8003dfe:	4620      	mov	r0, r4
 8003e00:	f000 fd35 	bl	800486e <__multiply>
 8003e04:	4651      	mov	r1, sl
 8003e06:	4680      	mov	r8, r0
 8003e08:	4620      	mov	r0, r4
 8003e0a:	f000 fc87 	bl	800471c <_Bfree>
 8003e0e:	46c2      	mov	sl, r8
 8003e10:	9b08      	ldr	r3, [sp, #32]
 8003e12:	1b9a      	subs	r2, r3, r6
 8003e14:	d004      	beq.n	8003e20 <_dtoa_r+0x780>
 8003e16:	4651      	mov	r1, sl
 8003e18:	4620      	mov	r0, r4
 8003e1a:	f000 fdb5 	bl	8004988 <__pow5mult>
 8003e1e:	4682      	mov	sl, r0
 8003e20:	2101      	movs	r1, #1
 8003e22:	4620      	mov	r0, r4
 8003e24:	f000 fd1a 	bl	800485c <__i2b>
 8003e28:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003e2a:	2b00      	cmp	r3, #0
 8003e2c:	4606      	mov	r6, r0
 8003e2e:	f340 8083 	ble.w	8003f38 <_dtoa_r+0x898>
 8003e32:	461a      	mov	r2, r3
 8003e34:	4601      	mov	r1, r0
 8003e36:	4620      	mov	r0, r4
 8003e38:	f000 fda6 	bl	8004988 <__pow5mult>
 8003e3c:	9b07      	ldr	r3, [sp, #28]
 8003e3e:	2b01      	cmp	r3, #1
 8003e40:	4606      	mov	r6, r0
 8003e42:	dd7c      	ble.n	8003f3e <_dtoa_r+0x89e>
 8003e44:	f04f 0800 	mov.w	r8, #0
 8003e48:	6933      	ldr	r3, [r6, #16]
 8003e4a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8003e4e:	6918      	ldr	r0, [r3, #16]
 8003e50:	f000 fcb6 	bl	80047c0 <__hi0bits>
 8003e54:	f1c0 0020 	rsb	r0, r0, #32
 8003e58:	9b06      	ldr	r3, [sp, #24]
 8003e5a:	4418      	add	r0, r3
 8003e5c:	f010 001f 	ands.w	r0, r0, #31
 8003e60:	f000 8096 	beq.w	8003f90 <_dtoa_r+0x8f0>
 8003e64:	f1c0 0320 	rsb	r3, r0, #32
 8003e68:	2b04      	cmp	r3, #4
 8003e6a:	f340 8087 	ble.w	8003f7c <_dtoa_r+0x8dc>
 8003e6e:	9b05      	ldr	r3, [sp, #20]
 8003e70:	f1c0 001c 	rsb	r0, r0, #28
 8003e74:	4403      	add	r3, r0
 8003e76:	9305      	str	r3, [sp, #20]
 8003e78:	9b06      	ldr	r3, [sp, #24]
 8003e7a:	4405      	add	r5, r0
 8003e7c:	4403      	add	r3, r0
 8003e7e:	9306      	str	r3, [sp, #24]
 8003e80:	9b05      	ldr	r3, [sp, #20]
 8003e82:	2b00      	cmp	r3, #0
 8003e84:	dd05      	ble.n	8003e92 <_dtoa_r+0x7f2>
 8003e86:	4651      	mov	r1, sl
 8003e88:	461a      	mov	r2, r3
 8003e8a:	4620      	mov	r0, r4
 8003e8c:	f000 fdca 	bl	8004a24 <__lshift>
 8003e90:	4682      	mov	sl, r0
 8003e92:	9b06      	ldr	r3, [sp, #24]
 8003e94:	2b00      	cmp	r3, #0
 8003e96:	dd05      	ble.n	8003ea4 <_dtoa_r+0x804>
 8003e98:	4631      	mov	r1, r6
 8003e9a:	461a      	mov	r2, r3
 8003e9c:	4620      	mov	r0, r4
 8003e9e:	f000 fdc1 	bl	8004a24 <__lshift>
 8003ea2:	4606      	mov	r6, r0
 8003ea4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	d074      	beq.n	8003f94 <_dtoa_r+0x8f4>
 8003eaa:	4631      	mov	r1, r6
 8003eac:	4650      	mov	r0, sl
 8003eae:	f000 fe0a 	bl	8004ac6 <__mcmp>
 8003eb2:	2800      	cmp	r0, #0
 8003eb4:	da6e      	bge.n	8003f94 <_dtoa_r+0x8f4>
 8003eb6:	2300      	movs	r3, #0
 8003eb8:	4651      	mov	r1, sl
 8003eba:	220a      	movs	r2, #10
 8003ebc:	4620      	mov	r0, r4
 8003ebe:	f000 fc44 	bl	800474a <__multadd>
 8003ec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ec4:	f10b 3bff 	add.w	fp, fp, #4294967295
 8003ec8:	4682      	mov	sl, r0
 8003eca:	2b00      	cmp	r3, #0
 8003ecc:	f000 81a8 	beq.w	8004220 <_dtoa_r+0xb80>
 8003ed0:	2300      	movs	r3, #0
 8003ed2:	4639      	mov	r1, r7
 8003ed4:	220a      	movs	r2, #10
 8003ed6:	4620      	mov	r0, r4
 8003ed8:	f000 fc37 	bl	800474a <__multadd>
 8003edc:	9b04      	ldr	r3, [sp, #16]
 8003ede:	2b00      	cmp	r3, #0
 8003ee0:	4607      	mov	r7, r0
 8003ee2:	f300 80c8 	bgt.w	8004076 <_dtoa_r+0x9d6>
 8003ee6:	9b07      	ldr	r3, [sp, #28]
 8003ee8:	2b02      	cmp	r3, #2
 8003eea:	f340 80c4 	ble.w	8004076 <_dtoa_r+0x9d6>
 8003eee:	e059      	b.n	8003fa4 <_dtoa_r+0x904>
 8003ef0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003ef2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8003ef6:	e756      	b.n	8003da6 <_dtoa_r+0x706>
 8003ef8:	9b03      	ldr	r3, [sp, #12]
 8003efa:	1e5e      	subs	r6, r3, #1
 8003efc:	9b08      	ldr	r3, [sp, #32]
 8003efe:	42b3      	cmp	r3, r6
 8003f00:	bfbf      	itttt	lt
 8003f02:	9b08      	ldrlt	r3, [sp, #32]
 8003f04:	9608      	strlt	r6, [sp, #32]
 8003f06:	1af2      	sublt	r2, r6, r3
 8003f08:	9b0b      	ldrlt	r3, [sp, #44]	; 0x2c
 8003f0a:	bfb6      	itet	lt
 8003f0c:	189b      	addlt	r3, r3, r2
 8003f0e:	1b9e      	subge	r6, r3, r6
 8003f10:	930b      	strlt	r3, [sp, #44]	; 0x2c
 8003f12:	9b03      	ldr	r3, [sp, #12]
 8003f14:	bfb8      	it	lt
 8003f16:	2600      	movlt	r6, #0
 8003f18:	2b00      	cmp	r3, #0
 8003f1a:	bfb9      	ittee	lt
 8003f1c:	9b05      	ldrlt	r3, [sp, #20]
 8003f1e:	9a03      	ldrlt	r2, [sp, #12]
 8003f20:	9d05      	ldrge	r5, [sp, #20]
 8003f22:	9b03      	ldrge	r3, [sp, #12]
 8003f24:	bfbc      	itt	lt
 8003f26:	1a9d      	sublt	r5, r3, r2
 8003f28:	2300      	movlt	r3, #0
 8003f2a:	e73e      	b.n	8003daa <_dtoa_r+0x70a>
 8003f2c:	9e08      	ldr	r6, [sp, #32]
 8003f2e:	9d05      	ldr	r5, [sp, #20]
 8003f30:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8003f32:	e745      	b.n	8003dc0 <_dtoa_r+0x720>
 8003f34:	9a08      	ldr	r2, [sp, #32]
 8003f36:	e76e      	b.n	8003e16 <_dtoa_r+0x776>
 8003f38:	9b07      	ldr	r3, [sp, #28]
 8003f3a:	2b01      	cmp	r3, #1
 8003f3c:	dc19      	bgt.n	8003f72 <_dtoa_r+0x8d2>
 8003f3e:	9b00      	ldr	r3, [sp, #0]
 8003f40:	b9bb      	cbnz	r3, 8003f72 <_dtoa_r+0x8d2>
 8003f42:	9b01      	ldr	r3, [sp, #4]
 8003f44:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003f48:	b99b      	cbnz	r3, 8003f72 <_dtoa_r+0x8d2>
 8003f4a:	9b01      	ldr	r3, [sp, #4]
 8003f4c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003f50:	0d1b      	lsrs	r3, r3, #20
 8003f52:	051b      	lsls	r3, r3, #20
 8003f54:	b183      	cbz	r3, 8003f78 <_dtoa_r+0x8d8>
 8003f56:	9b05      	ldr	r3, [sp, #20]
 8003f58:	3301      	adds	r3, #1
 8003f5a:	9305      	str	r3, [sp, #20]
 8003f5c:	9b06      	ldr	r3, [sp, #24]
 8003f5e:	3301      	adds	r3, #1
 8003f60:	9306      	str	r3, [sp, #24]
 8003f62:	f04f 0801 	mov.w	r8, #1
 8003f66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	f47f af6d 	bne.w	8003e48 <_dtoa_r+0x7a8>
 8003f6e:	2001      	movs	r0, #1
 8003f70:	e772      	b.n	8003e58 <_dtoa_r+0x7b8>
 8003f72:	f04f 0800 	mov.w	r8, #0
 8003f76:	e7f6      	b.n	8003f66 <_dtoa_r+0x8c6>
 8003f78:	4698      	mov	r8, r3
 8003f7a:	e7f4      	b.n	8003f66 <_dtoa_r+0x8c6>
 8003f7c:	d080      	beq.n	8003e80 <_dtoa_r+0x7e0>
 8003f7e:	9a05      	ldr	r2, [sp, #20]
 8003f80:	331c      	adds	r3, #28
 8003f82:	441a      	add	r2, r3
 8003f84:	9205      	str	r2, [sp, #20]
 8003f86:	9a06      	ldr	r2, [sp, #24]
 8003f88:	441a      	add	r2, r3
 8003f8a:	441d      	add	r5, r3
 8003f8c:	4613      	mov	r3, r2
 8003f8e:	e776      	b.n	8003e7e <_dtoa_r+0x7de>
 8003f90:	4603      	mov	r3, r0
 8003f92:	e7f4      	b.n	8003f7e <_dtoa_r+0x8de>
 8003f94:	9b03      	ldr	r3, [sp, #12]
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	dc36      	bgt.n	8004008 <_dtoa_r+0x968>
 8003f9a:	9b07      	ldr	r3, [sp, #28]
 8003f9c:	2b02      	cmp	r3, #2
 8003f9e:	dd33      	ble.n	8004008 <_dtoa_r+0x968>
 8003fa0:	9b03      	ldr	r3, [sp, #12]
 8003fa2:	9304      	str	r3, [sp, #16]
 8003fa4:	9b04      	ldr	r3, [sp, #16]
 8003fa6:	b963      	cbnz	r3, 8003fc2 <_dtoa_r+0x922>
 8003fa8:	4631      	mov	r1, r6
 8003faa:	2205      	movs	r2, #5
 8003fac:	4620      	mov	r0, r4
 8003fae:	f000 fbcc 	bl	800474a <__multadd>
 8003fb2:	4601      	mov	r1, r0
 8003fb4:	4606      	mov	r6, r0
 8003fb6:	4650      	mov	r0, sl
 8003fb8:	f000 fd85 	bl	8004ac6 <__mcmp>
 8003fbc:	2800      	cmp	r0, #0
 8003fbe:	f73f adb6 	bgt.w	8003b2e <_dtoa_r+0x48e>
 8003fc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003fc4:	9d02      	ldr	r5, [sp, #8]
 8003fc6:	ea6f 0b03 	mvn.w	fp, r3
 8003fca:	2300      	movs	r3, #0
 8003fcc:	9303      	str	r3, [sp, #12]
 8003fce:	4631      	mov	r1, r6
 8003fd0:	4620      	mov	r0, r4
 8003fd2:	f000 fba3 	bl	800471c <_Bfree>
 8003fd6:	2f00      	cmp	r7, #0
 8003fd8:	f43f aea6 	beq.w	8003d28 <_dtoa_r+0x688>
 8003fdc:	9b03      	ldr	r3, [sp, #12]
 8003fde:	b12b      	cbz	r3, 8003fec <_dtoa_r+0x94c>
 8003fe0:	42bb      	cmp	r3, r7
 8003fe2:	d003      	beq.n	8003fec <_dtoa_r+0x94c>
 8003fe4:	4619      	mov	r1, r3
 8003fe6:	4620      	mov	r0, r4
 8003fe8:	f000 fb98 	bl	800471c <_Bfree>
 8003fec:	4639      	mov	r1, r7
 8003fee:	4620      	mov	r0, r4
 8003ff0:	f000 fb94 	bl	800471c <_Bfree>
 8003ff4:	e698      	b.n	8003d28 <_dtoa_r+0x688>
 8003ff6:	2600      	movs	r6, #0
 8003ff8:	4637      	mov	r7, r6
 8003ffa:	e7e2      	b.n	8003fc2 <_dtoa_r+0x922>
 8003ffc:	46bb      	mov	fp, r7
 8003ffe:	4637      	mov	r7, r6
 8004000:	e595      	b.n	8003b2e <_dtoa_r+0x48e>
 8004002:	bf00      	nop
 8004004:	40240000 	.word	0x40240000
 8004008:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800400a:	bb93      	cbnz	r3, 8004072 <_dtoa_r+0x9d2>
 800400c:	9b03      	ldr	r3, [sp, #12]
 800400e:	9304      	str	r3, [sp, #16]
 8004010:	9d02      	ldr	r5, [sp, #8]
 8004012:	4631      	mov	r1, r6
 8004014:	4650      	mov	r0, sl
 8004016:	f7ff fab7 	bl	8003588 <quorem>
 800401a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800401e:	f805 9b01 	strb.w	r9, [r5], #1
 8004022:	9b02      	ldr	r3, [sp, #8]
 8004024:	9a04      	ldr	r2, [sp, #16]
 8004026:	1aeb      	subs	r3, r5, r3
 8004028:	429a      	cmp	r2, r3
 800402a:	f300 80dc 	bgt.w	80041e6 <_dtoa_r+0xb46>
 800402e:	9b02      	ldr	r3, [sp, #8]
 8004030:	2a01      	cmp	r2, #1
 8004032:	bfac      	ite	ge
 8004034:	189b      	addge	r3, r3, r2
 8004036:	3301      	addlt	r3, #1
 8004038:	4698      	mov	r8, r3
 800403a:	2300      	movs	r3, #0
 800403c:	9303      	str	r3, [sp, #12]
 800403e:	4651      	mov	r1, sl
 8004040:	2201      	movs	r2, #1
 8004042:	4620      	mov	r0, r4
 8004044:	f000 fcee 	bl	8004a24 <__lshift>
 8004048:	4631      	mov	r1, r6
 800404a:	4682      	mov	sl, r0
 800404c:	f000 fd3b 	bl	8004ac6 <__mcmp>
 8004050:	2800      	cmp	r0, #0
 8004052:	f300 808d 	bgt.w	8004170 <_dtoa_r+0xad0>
 8004056:	d103      	bne.n	8004060 <_dtoa_r+0x9c0>
 8004058:	f019 0f01 	tst.w	r9, #1
 800405c:	f040 8088 	bne.w	8004170 <_dtoa_r+0xad0>
 8004060:	4645      	mov	r5, r8
 8004062:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004066:	2b30      	cmp	r3, #48	; 0x30
 8004068:	f105 32ff 	add.w	r2, r5, #4294967295
 800406c:	d1af      	bne.n	8003fce <_dtoa_r+0x92e>
 800406e:	4615      	mov	r5, r2
 8004070:	e7f7      	b.n	8004062 <_dtoa_r+0x9c2>
 8004072:	9b03      	ldr	r3, [sp, #12]
 8004074:	9304      	str	r3, [sp, #16]
 8004076:	2d00      	cmp	r5, #0
 8004078:	dd05      	ble.n	8004086 <_dtoa_r+0x9e6>
 800407a:	4639      	mov	r1, r7
 800407c:	462a      	mov	r2, r5
 800407e:	4620      	mov	r0, r4
 8004080:	f000 fcd0 	bl	8004a24 <__lshift>
 8004084:	4607      	mov	r7, r0
 8004086:	f1b8 0f00 	cmp.w	r8, #0
 800408a:	d04c      	beq.n	8004126 <_dtoa_r+0xa86>
 800408c:	6879      	ldr	r1, [r7, #4]
 800408e:	4620      	mov	r0, r4
 8004090:	f000 fb10 	bl	80046b4 <_Balloc>
 8004094:	693a      	ldr	r2, [r7, #16]
 8004096:	3202      	adds	r2, #2
 8004098:	4605      	mov	r5, r0
 800409a:	0092      	lsls	r2, r2, #2
 800409c:	f107 010c 	add.w	r1, r7, #12
 80040a0:	300c      	adds	r0, #12
 80040a2:	f000 faef 	bl	8004684 <memcpy>
 80040a6:	2201      	movs	r2, #1
 80040a8:	4629      	mov	r1, r5
 80040aa:	4620      	mov	r0, r4
 80040ac:	f000 fcba 	bl	8004a24 <__lshift>
 80040b0:	9b00      	ldr	r3, [sp, #0]
 80040b2:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80040b6:	9703      	str	r7, [sp, #12]
 80040b8:	f003 0301 	and.w	r3, r3, #1
 80040bc:	4607      	mov	r7, r0
 80040be:	9305      	str	r3, [sp, #20]
 80040c0:	4631      	mov	r1, r6
 80040c2:	4650      	mov	r0, sl
 80040c4:	f7ff fa60 	bl	8003588 <quorem>
 80040c8:	9903      	ldr	r1, [sp, #12]
 80040ca:	4605      	mov	r5, r0
 80040cc:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80040d0:	4650      	mov	r0, sl
 80040d2:	f000 fcf8 	bl	8004ac6 <__mcmp>
 80040d6:	463a      	mov	r2, r7
 80040d8:	9000      	str	r0, [sp, #0]
 80040da:	4631      	mov	r1, r6
 80040dc:	4620      	mov	r0, r4
 80040de:	f000 fd0c 	bl	8004afa <__mdiff>
 80040e2:	68c3      	ldr	r3, [r0, #12]
 80040e4:	4602      	mov	r2, r0
 80040e6:	bb03      	cbnz	r3, 800412a <_dtoa_r+0xa8a>
 80040e8:	4601      	mov	r1, r0
 80040ea:	9006      	str	r0, [sp, #24]
 80040ec:	4650      	mov	r0, sl
 80040ee:	f000 fcea 	bl	8004ac6 <__mcmp>
 80040f2:	9a06      	ldr	r2, [sp, #24]
 80040f4:	4603      	mov	r3, r0
 80040f6:	4611      	mov	r1, r2
 80040f8:	4620      	mov	r0, r4
 80040fa:	9306      	str	r3, [sp, #24]
 80040fc:	f000 fb0e 	bl	800471c <_Bfree>
 8004100:	9b06      	ldr	r3, [sp, #24]
 8004102:	b9a3      	cbnz	r3, 800412e <_dtoa_r+0xa8e>
 8004104:	9a07      	ldr	r2, [sp, #28]
 8004106:	b992      	cbnz	r2, 800412e <_dtoa_r+0xa8e>
 8004108:	9a05      	ldr	r2, [sp, #20]
 800410a:	b982      	cbnz	r2, 800412e <_dtoa_r+0xa8e>
 800410c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8004110:	d029      	beq.n	8004166 <_dtoa_r+0xac6>
 8004112:	9b00      	ldr	r3, [sp, #0]
 8004114:	2b00      	cmp	r3, #0
 8004116:	dd01      	ble.n	800411c <_dtoa_r+0xa7c>
 8004118:	f105 0931 	add.w	r9, r5, #49	; 0x31
 800411c:	f108 0501 	add.w	r5, r8, #1
 8004120:	f888 9000 	strb.w	r9, [r8]
 8004124:	e753      	b.n	8003fce <_dtoa_r+0x92e>
 8004126:	4638      	mov	r0, r7
 8004128:	e7c2      	b.n	80040b0 <_dtoa_r+0xa10>
 800412a:	2301      	movs	r3, #1
 800412c:	e7e3      	b.n	80040f6 <_dtoa_r+0xa56>
 800412e:	9a00      	ldr	r2, [sp, #0]
 8004130:	2a00      	cmp	r2, #0
 8004132:	db04      	blt.n	800413e <_dtoa_r+0xa9e>
 8004134:	d125      	bne.n	8004182 <_dtoa_r+0xae2>
 8004136:	9a07      	ldr	r2, [sp, #28]
 8004138:	bb1a      	cbnz	r2, 8004182 <_dtoa_r+0xae2>
 800413a:	9a05      	ldr	r2, [sp, #20]
 800413c:	bb0a      	cbnz	r2, 8004182 <_dtoa_r+0xae2>
 800413e:	2b00      	cmp	r3, #0
 8004140:	ddec      	ble.n	800411c <_dtoa_r+0xa7c>
 8004142:	4651      	mov	r1, sl
 8004144:	2201      	movs	r2, #1
 8004146:	4620      	mov	r0, r4
 8004148:	f000 fc6c 	bl	8004a24 <__lshift>
 800414c:	4631      	mov	r1, r6
 800414e:	4682      	mov	sl, r0
 8004150:	f000 fcb9 	bl	8004ac6 <__mcmp>
 8004154:	2800      	cmp	r0, #0
 8004156:	dc03      	bgt.n	8004160 <_dtoa_r+0xac0>
 8004158:	d1e0      	bne.n	800411c <_dtoa_r+0xa7c>
 800415a:	f019 0f01 	tst.w	r9, #1
 800415e:	d0dd      	beq.n	800411c <_dtoa_r+0xa7c>
 8004160:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8004164:	d1d8      	bne.n	8004118 <_dtoa_r+0xa78>
 8004166:	2339      	movs	r3, #57	; 0x39
 8004168:	f888 3000 	strb.w	r3, [r8]
 800416c:	f108 0801 	add.w	r8, r8, #1
 8004170:	4645      	mov	r5, r8
 8004172:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004176:	2b39      	cmp	r3, #57	; 0x39
 8004178:	f105 32ff 	add.w	r2, r5, #4294967295
 800417c:	d03b      	beq.n	80041f6 <_dtoa_r+0xb56>
 800417e:	3301      	adds	r3, #1
 8004180:	e040      	b.n	8004204 <_dtoa_r+0xb64>
 8004182:	2b00      	cmp	r3, #0
 8004184:	f108 0501 	add.w	r5, r8, #1
 8004188:	dd05      	ble.n	8004196 <_dtoa_r+0xaf6>
 800418a:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800418e:	d0ea      	beq.n	8004166 <_dtoa_r+0xac6>
 8004190:	f109 0901 	add.w	r9, r9, #1
 8004194:	e7c4      	b.n	8004120 <_dtoa_r+0xa80>
 8004196:	9b02      	ldr	r3, [sp, #8]
 8004198:	9a04      	ldr	r2, [sp, #16]
 800419a:	f805 9c01 	strb.w	r9, [r5, #-1]
 800419e:	1aeb      	subs	r3, r5, r3
 80041a0:	4293      	cmp	r3, r2
 80041a2:	46a8      	mov	r8, r5
 80041a4:	f43f af4b 	beq.w	800403e <_dtoa_r+0x99e>
 80041a8:	4651      	mov	r1, sl
 80041aa:	2300      	movs	r3, #0
 80041ac:	220a      	movs	r2, #10
 80041ae:	4620      	mov	r0, r4
 80041b0:	f000 facb 	bl	800474a <__multadd>
 80041b4:	9b03      	ldr	r3, [sp, #12]
 80041b6:	9903      	ldr	r1, [sp, #12]
 80041b8:	42bb      	cmp	r3, r7
 80041ba:	4682      	mov	sl, r0
 80041bc:	f04f 0300 	mov.w	r3, #0
 80041c0:	f04f 020a 	mov.w	r2, #10
 80041c4:	4620      	mov	r0, r4
 80041c6:	d104      	bne.n	80041d2 <_dtoa_r+0xb32>
 80041c8:	f000 fabf 	bl	800474a <__multadd>
 80041cc:	9003      	str	r0, [sp, #12]
 80041ce:	4607      	mov	r7, r0
 80041d0:	e776      	b.n	80040c0 <_dtoa_r+0xa20>
 80041d2:	f000 faba 	bl	800474a <__multadd>
 80041d6:	2300      	movs	r3, #0
 80041d8:	9003      	str	r0, [sp, #12]
 80041da:	220a      	movs	r2, #10
 80041dc:	4639      	mov	r1, r7
 80041de:	4620      	mov	r0, r4
 80041e0:	f000 fab3 	bl	800474a <__multadd>
 80041e4:	e7f3      	b.n	80041ce <_dtoa_r+0xb2e>
 80041e6:	4651      	mov	r1, sl
 80041e8:	2300      	movs	r3, #0
 80041ea:	220a      	movs	r2, #10
 80041ec:	4620      	mov	r0, r4
 80041ee:	f000 faac 	bl	800474a <__multadd>
 80041f2:	4682      	mov	sl, r0
 80041f4:	e70d      	b.n	8004012 <_dtoa_r+0x972>
 80041f6:	9b02      	ldr	r3, [sp, #8]
 80041f8:	4293      	cmp	r3, r2
 80041fa:	d105      	bne.n	8004208 <_dtoa_r+0xb68>
 80041fc:	9a02      	ldr	r2, [sp, #8]
 80041fe:	f10b 0b01 	add.w	fp, fp, #1
 8004202:	2331      	movs	r3, #49	; 0x31
 8004204:	7013      	strb	r3, [r2, #0]
 8004206:	e6e2      	b.n	8003fce <_dtoa_r+0x92e>
 8004208:	4615      	mov	r5, r2
 800420a:	e7b2      	b.n	8004172 <_dtoa_r+0xad2>
 800420c:	4b09      	ldr	r3, [pc, #36]	; (8004234 <_dtoa_r+0xb94>)
 800420e:	f7ff baae 	b.w	800376e <_dtoa_r+0xce>
 8004212:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004214:	2b00      	cmp	r3, #0
 8004216:	f47f aa88 	bne.w	800372a <_dtoa_r+0x8a>
 800421a:	4b07      	ldr	r3, [pc, #28]	; (8004238 <_dtoa_r+0xb98>)
 800421c:	f7ff baa7 	b.w	800376e <_dtoa_r+0xce>
 8004220:	9b04      	ldr	r3, [sp, #16]
 8004222:	2b00      	cmp	r3, #0
 8004224:	f73f aef4 	bgt.w	8004010 <_dtoa_r+0x970>
 8004228:	9b07      	ldr	r3, [sp, #28]
 800422a:	2b02      	cmp	r3, #2
 800422c:	f77f aef0 	ble.w	8004010 <_dtoa_r+0x970>
 8004230:	e6b8      	b.n	8003fa4 <_dtoa_r+0x904>
 8004232:	bf00      	nop
 8004234:	080064ce 	.word	0x080064ce
 8004238:	080064f0 	.word	0x080064f0

0800423c <_localeconv_r>:
 800423c:	4b04      	ldr	r3, [pc, #16]	; (8004250 <_localeconv_r+0x14>)
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	6a18      	ldr	r0, [r3, #32]
 8004242:	4b04      	ldr	r3, [pc, #16]	; (8004254 <_localeconv_r+0x18>)
 8004244:	2800      	cmp	r0, #0
 8004246:	bf08      	it	eq
 8004248:	4618      	moveq	r0, r3
 800424a:	30f0      	adds	r0, #240	; 0xf0
 800424c:	4770      	bx	lr
 800424e:	bf00      	nop
 8004250:	20000004 	.word	0x20000004
 8004254:	20000508 	.word	0x20000508

08004258 <malloc>:
 8004258:	4b02      	ldr	r3, [pc, #8]	; (8004264 <malloc+0xc>)
 800425a:	4601      	mov	r1, r0
 800425c:	6818      	ldr	r0, [r3, #0]
 800425e:	f000 b803 	b.w	8004268 <_malloc_r>
 8004262:	bf00      	nop
 8004264:	20000004 	.word	0x20000004

08004268 <_malloc_r>:
 8004268:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800426c:	f101 040b 	add.w	r4, r1, #11
 8004270:	2c16      	cmp	r4, #22
 8004272:	4681      	mov	r9, r0
 8004274:	d907      	bls.n	8004286 <_malloc_r+0x1e>
 8004276:	f034 0407 	bics.w	r4, r4, #7
 800427a:	d505      	bpl.n	8004288 <_malloc_r+0x20>
 800427c:	230c      	movs	r3, #12
 800427e:	f8c9 3000 	str.w	r3, [r9]
 8004282:	2600      	movs	r6, #0
 8004284:	e131      	b.n	80044ea <_malloc_r+0x282>
 8004286:	2410      	movs	r4, #16
 8004288:	428c      	cmp	r4, r1
 800428a:	d3f7      	bcc.n	800427c <_malloc_r+0x14>
 800428c:	4648      	mov	r0, r9
 800428e:	f000 fa05 	bl	800469c <__malloc_lock>
 8004292:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
 8004296:	4d9c      	ldr	r5, [pc, #624]	; (8004508 <_malloc_r+0x2a0>)
 8004298:	d236      	bcs.n	8004308 <_malloc_r+0xa0>
 800429a:	f104 0208 	add.w	r2, r4, #8
 800429e:	442a      	add	r2, r5
 80042a0:	f1a2 0108 	sub.w	r1, r2, #8
 80042a4:	6856      	ldr	r6, [r2, #4]
 80042a6:	428e      	cmp	r6, r1
 80042a8:	ea4f 03d4 	mov.w	r3, r4, lsr #3
 80042ac:	d102      	bne.n	80042b4 <_malloc_r+0x4c>
 80042ae:	68d6      	ldr	r6, [r2, #12]
 80042b0:	42b2      	cmp	r2, r6
 80042b2:	d010      	beq.n	80042d6 <_malloc_r+0x6e>
 80042b4:	6873      	ldr	r3, [r6, #4]
 80042b6:	68f2      	ldr	r2, [r6, #12]
 80042b8:	68b1      	ldr	r1, [r6, #8]
 80042ba:	f023 0303 	bic.w	r3, r3, #3
 80042be:	60ca      	str	r2, [r1, #12]
 80042c0:	4433      	add	r3, r6
 80042c2:	6091      	str	r1, [r2, #8]
 80042c4:	685a      	ldr	r2, [r3, #4]
 80042c6:	f042 0201 	orr.w	r2, r2, #1
 80042ca:	605a      	str	r2, [r3, #4]
 80042cc:	4648      	mov	r0, r9
 80042ce:	f000 f9eb 	bl	80046a8 <__malloc_unlock>
 80042d2:	3608      	adds	r6, #8
 80042d4:	e109      	b.n	80044ea <_malloc_r+0x282>
 80042d6:	3302      	adds	r3, #2
 80042d8:	4a8c      	ldr	r2, [pc, #560]	; (800450c <_malloc_r+0x2a4>)
 80042da:	692e      	ldr	r6, [r5, #16]
 80042dc:	4296      	cmp	r6, r2
 80042de:	4611      	mov	r1, r2
 80042e0:	d06d      	beq.n	80043be <_malloc_r+0x156>
 80042e2:	6870      	ldr	r0, [r6, #4]
 80042e4:	f020 0003 	bic.w	r0, r0, #3
 80042e8:	1b07      	subs	r7, r0, r4
 80042ea:	2f0f      	cmp	r7, #15
 80042ec:	dd47      	ble.n	800437e <_malloc_r+0x116>
 80042ee:	1933      	adds	r3, r6, r4
 80042f0:	f044 0401 	orr.w	r4, r4, #1
 80042f4:	6074      	str	r4, [r6, #4]
 80042f6:	616b      	str	r3, [r5, #20]
 80042f8:	612b      	str	r3, [r5, #16]
 80042fa:	60da      	str	r2, [r3, #12]
 80042fc:	609a      	str	r2, [r3, #8]
 80042fe:	f047 0201 	orr.w	r2, r7, #1
 8004302:	605a      	str	r2, [r3, #4]
 8004304:	5037      	str	r7, [r6, r0]
 8004306:	e7e1      	b.n	80042cc <_malloc_r+0x64>
 8004308:	0a63      	lsrs	r3, r4, #9
 800430a:	d02a      	beq.n	8004362 <_malloc_r+0xfa>
 800430c:	2b04      	cmp	r3, #4
 800430e:	d812      	bhi.n	8004336 <_malloc_r+0xce>
 8004310:	09a3      	lsrs	r3, r4, #6
 8004312:	3338      	adds	r3, #56	; 0x38
 8004314:	1c5a      	adds	r2, r3, #1
 8004316:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 800431a:	f1a2 0008 	sub.w	r0, r2, #8
 800431e:	6856      	ldr	r6, [r2, #4]
 8004320:	4286      	cmp	r6, r0
 8004322:	d006      	beq.n	8004332 <_malloc_r+0xca>
 8004324:	6872      	ldr	r2, [r6, #4]
 8004326:	f022 0203 	bic.w	r2, r2, #3
 800432a:	1b11      	subs	r1, r2, r4
 800432c:	290f      	cmp	r1, #15
 800432e:	dd1c      	ble.n	800436a <_malloc_r+0x102>
 8004330:	3b01      	subs	r3, #1
 8004332:	3301      	adds	r3, #1
 8004334:	e7d0      	b.n	80042d8 <_malloc_r+0x70>
 8004336:	2b14      	cmp	r3, #20
 8004338:	d801      	bhi.n	800433e <_malloc_r+0xd6>
 800433a:	335b      	adds	r3, #91	; 0x5b
 800433c:	e7ea      	b.n	8004314 <_malloc_r+0xac>
 800433e:	2b54      	cmp	r3, #84	; 0x54
 8004340:	d802      	bhi.n	8004348 <_malloc_r+0xe0>
 8004342:	0b23      	lsrs	r3, r4, #12
 8004344:	336e      	adds	r3, #110	; 0x6e
 8004346:	e7e5      	b.n	8004314 <_malloc_r+0xac>
 8004348:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 800434c:	d802      	bhi.n	8004354 <_malloc_r+0xec>
 800434e:	0be3      	lsrs	r3, r4, #15
 8004350:	3377      	adds	r3, #119	; 0x77
 8004352:	e7df      	b.n	8004314 <_malloc_r+0xac>
 8004354:	f240 5254 	movw	r2, #1364	; 0x554
 8004358:	4293      	cmp	r3, r2
 800435a:	d804      	bhi.n	8004366 <_malloc_r+0xfe>
 800435c:	0ca3      	lsrs	r3, r4, #18
 800435e:	337c      	adds	r3, #124	; 0x7c
 8004360:	e7d8      	b.n	8004314 <_malloc_r+0xac>
 8004362:	233f      	movs	r3, #63	; 0x3f
 8004364:	e7d6      	b.n	8004314 <_malloc_r+0xac>
 8004366:	237e      	movs	r3, #126	; 0x7e
 8004368:	e7d4      	b.n	8004314 <_malloc_r+0xac>
 800436a:	2900      	cmp	r1, #0
 800436c:	68f1      	ldr	r1, [r6, #12]
 800436e:	db04      	blt.n	800437a <_malloc_r+0x112>
 8004370:	68b3      	ldr	r3, [r6, #8]
 8004372:	60d9      	str	r1, [r3, #12]
 8004374:	608b      	str	r3, [r1, #8]
 8004376:	18b3      	adds	r3, r6, r2
 8004378:	e7a4      	b.n	80042c4 <_malloc_r+0x5c>
 800437a:	460e      	mov	r6, r1
 800437c:	e7d0      	b.n	8004320 <_malloc_r+0xb8>
 800437e:	2f00      	cmp	r7, #0
 8004380:	616a      	str	r2, [r5, #20]
 8004382:	612a      	str	r2, [r5, #16]
 8004384:	db05      	blt.n	8004392 <_malloc_r+0x12a>
 8004386:	4430      	add	r0, r6
 8004388:	6843      	ldr	r3, [r0, #4]
 800438a:	f043 0301 	orr.w	r3, r3, #1
 800438e:	6043      	str	r3, [r0, #4]
 8004390:	e79c      	b.n	80042cc <_malloc_r+0x64>
 8004392:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8004396:	d244      	bcs.n	8004422 <_malloc_r+0x1ba>
 8004398:	08c0      	lsrs	r0, r0, #3
 800439a:	1087      	asrs	r7, r0, #2
 800439c:	2201      	movs	r2, #1
 800439e:	fa02 f707 	lsl.w	r7, r2, r7
 80043a2:	686a      	ldr	r2, [r5, #4]
 80043a4:	3001      	adds	r0, #1
 80043a6:	433a      	orrs	r2, r7
 80043a8:	606a      	str	r2, [r5, #4]
 80043aa:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 80043ae:	f855 7030 	ldr.w	r7, [r5, r0, lsl #3]
 80043b2:	60b7      	str	r7, [r6, #8]
 80043b4:	3a08      	subs	r2, #8
 80043b6:	60f2      	str	r2, [r6, #12]
 80043b8:	f845 6030 	str.w	r6, [r5, r0, lsl #3]
 80043bc:	60fe      	str	r6, [r7, #12]
 80043be:	2001      	movs	r0, #1
 80043c0:	109a      	asrs	r2, r3, #2
 80043c2:	fa00 f202 	lsl.w	r2, r0, r2
 80043c6:	6868      	ldr	r0, [r5, #4]
 80043c8:	4282      	cmp	r2, r0
 80043ca:	f200 80a1 	bhi.w	8004510 <_malloc_r+0x2a8>
 80043ce:	4202      	tst	r2, r0
 80043d0:	d106      	bne.n	80043e0 <_malloc_r+0x178>
 80043d2:	f023 0303 	bic.w	r3, r3, #3
 80043d6:	0052      	lsls	r2, r2, #1
 80043d8:	4202      	tst	r2, r0
 80043da:	f103 0304 	add.w	r3, r3, #4
 80043de:	d0fa      	beq.n	80043d6 <_malloc_r+0x16e>
 80043e0:	eb05 0cc3 	add.w	ip, r5, r3, lsl #3
 80043e4:	46e0      	mov	r8, ip
 80043e6:	469e      	mov	lr, r3
 80043e8:	f8d8 600c 	ldr.w	r6, [r8, #12]
 80043ec:	4546      	cmp	r6, r8
 80043ee:	d153      	bne.n	8004498 <_malloc_r+0x230>
 80043f0:	f10e 0e01 	add.w	lr, lr, #1
 80043f4:	f01e 0f03 	tst.w	lr, #3
 80043f8:	f108 0808 	add.w	r8, r8, #8
 80043fc:	d1f4      	bne.n	80043e8 <_malloc_r+0x180>
 80043fe:	0798      	lsls	r0, r3, #30
 8004400:	d179      	bne.n	80044f6 <_malloc_r+0x28e>
 8004402:	686b      	ldr	r3, [r5, #4]
 8004404:	ea23 0302 	bic.w	r3, r3, r2
 8004408:	606b      	str	r3, [r5, #4]
 800440a:	6868      	ldr	r0, [r5, #4]
 800440c:	0052      	lsls	r2, r2, #1
 800440e:	4282      	cmp	r2, r0
 8004410:	d87e      	bhi.n	8004510 <_malloc_r+0x2a8>
 8004412:	2a00      	cmp	r2, #0
 8004414:	d07c      	beq.n	8004510 <_malloc_r+0x2a8>
 8004416:	4673      	mov	r3, lr
 8004418:	4202      	tst	r2, r0
 800441a:	d1e1      	bne.n	80043e0 <_malloc_r+0x178>
 800441c:	3304      	adds	r3, #4
 800441e:	0052      	lsls	r2, r2, #1
 8004420:	e7fa      	b.n	8004418 <_malloc_r+0x1b0>
 8004422:	0a42      	lsrs	r2, r0, #9
 8004424:	2a04      	cmp	r2, #4
 8004426:	d815      	bhi.n	8004454 <_malloc_r+0x1ec>
 8004428:	0982      	lsrs	r2, r0, #6
 800442a:	3238      	adds	r2, #56	; 0x38
 800442c:	1c57      	adds	r7, r2, #1
 800442e:	eb05 0ec2 	add.w	lr, r5, r2, lsl #3
 8004432:	f855 7037 	ldr.w	r7, [r5, r7, lsl #3]
 8004436:	45be      	cmp	lr, r7
 8004438:	d126      	bne.n	8004488 <_malloc_r+0x220>
 800443a:	2001      	movs	r0, #1
 800443c:	1092      	asrs	r2, r2, #2
 800443e:	fa00 f202 	lsl.w	r2, r0, r2
 8004442:	6868      	ldr	r0, [r5, #4]
 8004444:	4310      	orrs	r0, r2
 8004446:	6068      	str	r0, [r5, #4]
 8004448:	f8c6 e00c 	str.w	lr, [r6, #12]
 800444c:	60b7      	str	r7, [r6, #8]
 800444e:	f8ce 6008 	str.w	r6, [lr, #8]
 8004452:	e7b3      	b.n	80043bc <_malloc_r+0x154>
 8004454:	2a14      	cmp	r2, #20
 8004456:	d801      	bhi.n	800445c <_malloc_r+0x1f4>
 8004458:	325b      	adds	r2, #91	; 0x5b
 800445a:	e7e7      	b.n	800442c <_malloc_r+0x1c4>
 800445c:	2a54      	cmp	r2, #84	; 0x54
 800445e:	d802      	bhi.n	8004466 <_malloc_r+0x1fe>
 8004460:	0b02      	lsrs	r2, r0, #12
 8004462:	326e      	adds	r2, #110	; 0x6e
 8004464:	e7e2      	b.n	800442c <_malloc_r+0x1c4>
 8004466:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800446a:	d802      	bhi.n	8004472 <_malloc_r+0x20a>
 800446c:	0bc2      	lsrs	r2, r0, #15
 800446e:	3277      	adds	r2, #119	; 0x77
 8004470:	e7dc      	b.n	800442c <_malloc_r+0x1c4>
 8004472:	f240 5754 	movw	r7, #1364	; 0x554
 8004476:	42ba      	cmp	r2, r7
 8004478:	bf9a      	itte	ls
 800447a:	0c82      	lsrls	r2, r0, #18
 800447c:	327c      	addls	r2, #124	; 0x7c
 800447e:	227e      	movhi	r2, #126	; 0x7e
 8004480:	e7d4      	b.n	800442c <_malloc_r+0x1c4>
 8004482:	68bf      	ldr	r7, [r7, #8]
 8004484:	45be      	cmp	lr, r7
 8004486:	d004      	beq.n	8004492 <_malloc_r+0x22a>
 8004488:	687a      	ldr	r2, [r7, #4]
 800448a:	f022 0203 	bic.w	r2, r2, #3
 800448e:	4290      	cmp	r0, r2
 8004490:	d3f7      	bcc.n	8004482 <_malloc_r+0x21a>
 8004492:	f8d7 e00c 	ldr.w	lr, [r7, #12]
 8004496:	e7d7      	b.n	8004448 <_malloc_r+0x1e0>
 8004498:	6870      	ldr	r0, [r6, #4]
 800449a:	68f7      	ldr	r7, [r6, #12]
 800449c:	f020 0003 	bic.w	r0, r0, #3
 80044a0:	eba0 0a04 	sub.w	sl, r0, r4
 80044a4:	f1ba 0f0f 	cmp.w	sl, #15
 80044a8:	dd10      	ble.n	80044cc <_malloc_r+0x264>
 80044aa:	68b2      	ldr	r2, [r6, #8]
 80044ac:	1933      	adds	r3, r6, r4
 80044ae:	f044 0401 	orr.w	r4, r4, #1
 80044b2:	6074      	str	r4, [r6, #4]
 80044b4:	60d7      	str	r7, [r2, #12]
 80044b6:	60ba      	str	r2, [r7, #8]
 80044b8:	f04a 0201 	orr.w	r2, sl, #1
 80044bc:	616b      	str	r3, [r5, #20]
 80044be:	612b      	str	r3, [r5, #16]
 80044c0:	60d9      	str	r1, [r3, #12]
 80044c2:	6099      	str	r1, [r3, #8]
 80044c4:	605a      	str	r2, [r3, #4]
 80044c6:	f846 a000 	str.w	sl, [r6, r0]
 80044ca:	e6ff      	b.n	80042cc <_malloc_r+0x64>
 80044cc:	f1ba 0f00 	cmp.w	sl, #0
 80044d0:	db0f      	blt.n	80044f2 <_malloc_r+0x28a>
 80044d2:	4430      	add	r0, r6
 80044d4:	6843      	ldr	r3, [r0, #4]
 80044d6:	f043 0301 	orr.w	r3, r3, #1
 80044da:	6043      	str	r3, [r0, #4]
 80044dc:	f856 3f08 	ldr.w	r3, [r6, #8]!
 80044e0:	4648      	mov	r0, r9
 80044e2:	60df      	str	r7, [r3, #12]
 80044e4:	60bb      	str	r3, [r7, #8]
 80044e6:	f000 f8df 	bl	80046a8 <__malloc_unlock>
 80044ea:	4630      	mov	r0, r6
 80044ec:	b003      	add	sp, #12
 80044ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80044f2:	463e      	mov	r6, r7
 80044f4:	e77a      	b.n	80043ec <_malloc_r+0x184>
 80044f6:	f85c 0908 	ldr.w	r0, [ip], #-8
 80044fa:	4584      	cmp	ip, r0
 80044fc:	f103 33ff 	add.w	r3, r3, #4294967295
 8004500:	f43f af7d 	beq.w	80043fe <_malloc_r+0x196>
 8004504:	e781      	b.n	800440a <_malloc_r+0x1a2>
 8004506:	bf00      	nop
 8004508:	200000f8 	.word	0x200000f8
 800450c:	20000100 	.word	0x20000100
 8004510:	f8d5 b008 	ldr.w	fp, [r5, #8]
 8004514:	f8db 6004 	ldr.w	r6, [fp, #4]
 8004518:	f026 0603 	bic.w	r6, r6, #3
 800451c:	42b4      	cmp	r4, r6
 800451e:	d803      	bhi.n	8004528 <_malloc_r+0x2c0>
 8004520:	1b33      	subs	r3, r6, r4
 8004522:	2b0f      	cmp	r3, #15
 8004524:	f300 8096 	bgt.w	8004654 <_malloc_r+0x3ec>
 8004528:	4a4f      	ldr	r2, [pc, #316]	; (8004668 <_malloc_r+0x400>)
 800452a:	6817      	ldr	r7, [r2, #0]
 800452c:	4a4f      	ldr	r2, [pc, #316]	; (800466c <_malloc_r+0x404>)
 800452e:	6811      	ldr	r1, [r2, #0]
 8004530:	3710      	adds	r7, #16
 8004532:	3101      	adds	r1, #1
 8004534:	eb0b 0306 	add.w	r3, fp, r6
 8004538:	4427      	add	r7, r4
 800453a:	d005      	beq.n	8004548 <_malloc_r+0x2e0>
 800453c:	494c      	ldr	r1, [pc, #304]	; (8004670 <_malloc_r+0x408>)
 800453e:	3901      	subs	r1, #1
 8004540:	440f      	add	r7, r1
 8004542:	3101      	adds	r1, #1
 8004544:	4249      	negs	r1, r1
 8004546:	400f      	ands	r7, r1
 8004548:	4639      	mov	r1, r7
 800454a:	4648      	mov	r0, r9
 800454c:	9201      	str	r2, [sp, #4]
 800454e:	9300      	str	r3, [sp, #0]
 8004550:	f000 fb80 	bl	8004c54 <_sbrk_r>
 8004554:	f1b0 3fff 	cmp.w	r0, #4294967295
 8004558:	4680      	mov	r8, r0
 800455a:	d056      	beq.n	800460a <_malloc_r+0x3a2>
 800455c:	9b00      	ldr	r3, [sp, #0]
 800455e:	9a01      	ldr	r2, [sp, #4]
 8004560:	4283      	cmp	r3, r0
 8004562:	d901      	bls.n	8004568 <_malloc_r+0x300>
 8004564:	45ab      	cmp	fp, r5
 8004566:	d150      	bne.n	800460a <_malloc_r+0x3a2>
 8004568:	4842      	ldr	r0, [pc, #264]	; (8004674 <_malloc_r+0x40c>)
 800456a:	6801      	ldr	r1, [r0, #0]
 800456c:	4543      	cmp	r3, r8
 800456e:	eb07 0e01 	add.w	lr, r7, r1
 8004572:	f8c0 e000 	str.w	lr, [r0]
 8004576:	4940      	ldr	r1, [pc, #256]	; (8004678 <_malloc_r+0x410>)
 8004578:	4682      	mov	sl, r0
 800457a:	d113      	bne.n	80045a4 <_malloc_r+0x33c>
 800457c:	420b      	tst	r3, r1
 800457e:	d111      	bne.n	80045a4 <_malloc_r+0x33c>
 8004580:	68ab      	ldr	r3, [r5, #8]
 8004582:	443e      	add	r6, r7
 8004584:	f046 0601 	orr.w	r6, r6, #1
 8004588:	605e      	str	r6, [r3, #4]
 800458a:	4a3c      	ldr	r2, [pc, #240]	; (800467c <_malloc_r+0x414>)
 800458c:	f8da 3000 	ldr.w	r3, [sl]
 8004590:	6811      	ldr	r1, [r2, #0]
 8004592:	428b      	cmp	r3, r1
 8004594:	bf88      	it	hi
 8004596:	6013      	strhi	r3, [r2, #0]
 8004598:	4a39      	ldr	r2, [pc, #228]	; (8004680 <_malloc_r+0x418>)
 800459a:	6811      	ldr	r1, [r2, #0]
 800459c:	428b      	cmp	r3, r1
 800459e:	bf88      	it	hi
 80045a0:	6013      	strhi	r3, [r2, #0]
 80045a2:	e032      	b.n	800460a <_malloc_r+0x3a2>
 80045a4:	6810      	ldr	r0, [r2, #0]
 80045a6:	3001      	adds	r0, #1
 80045a8:	bf1b      	ittet	ne
 80045aa:	eba8 0303 	subne.w	r3, r8, r3
 80045ae:	4473      	addne	r3, lr
 80045b0:	f8c2 8000 	streq.w	r8, [r2]
 80045b4:	f8ca 3000 	strne.w	r3, [sl]
 80045b8:	f018 0007 	ands.w	r0, r8, #7
 80045bc:	bf1c      	itt	ne
 80045be:	f1c0 0008 	rsbne	r0, r0, #8
 80045c2:	4480      	addne	r8, r0
 80045c4:	4b2a      	ldr	r3, [pc, #168]	; (8004670 <_malloc_r+0x408>)
 80045c6:	4447      	add	r7, r8
 80045c8:	4418      	add	r0, r3
 80045ca:	400f      	ands	r7, r1
 80045cc:	1bc7      	subs	r7, r0, r7
 80045ce:	4639      	mov	r1, r7
 80045d0:	4648      	mov	r0, r9
 80045d2:	f000 fb3f 	bl	8004c54 <_sbrk_r>
 80045d6:	1c43      	adds	r3, r0, #1
 80045d8:	bf08      	it	eq
 80045da:	4640      	moveq	r0, r8
 80045dc:	f8da 3000 	ldr.w	r3, [sl]
 80045e0:	f8c5 8008 	str.w	r8, [r5, #8]
 80045e4:	bf08      	it	eq
 80045e6:	2700      	moveq	r7, #0
 80045e8:	eba0 0008 	sub.w	r0, r0, r8
 80045ec:	443b      	add	r3, r7
 80045ee:	4407      	add	r7, r0
 80045f0:	f047 0701 	orr.w	r7, r7, #1
 80045f4:	45ab      	cmp	fp, r5
 80045f6:	f8ca 3000 	str.w	r3, [sl]
 80045fa:	f8c8 7004 	str.w	r7, [r8, #4]
 80045fe:	d0c4      	beq.n	800458a <_malloc_r+0x322>
 8004600:	2e0f      	cmp	r6, #15
 8004602:	d810      	bhi.n	8004626 <_malloc_r+0x3be>
 8004604:	2301      	movs	r3, #1
 8004606:	f8c8 3004 	str.w	r3, [r8, #4]
 800460a:	68ab      	ldr	r3, [r5, #8]
 800460c:	685a      	ldr	r2, [r3, #4]
 800460e:	f022 0203 	bic.w	r2, r2, #3
 8004612:	4294      	cmp	r4, r2
 8004614:	eba2 0304 	sub.w	r3, r2, r4
 8004618:	d801      	bhi.n	800461e <_malloc_r+0x3b6>
 800461a:	2b0f      	cmp	r3, #15
 800461c:	dc1a      	bgt.n	8004654 <_malloc_r+0x3ec>
 800461e:	4648      	mov	r0, r9
 8004620:	f000 f842 	bl	80046a8 <__malloc_unlock>
 8004624:	e62d      	b.n	8004282 <_malloc_r+0x1a>
 8004626:	f8db 3004 	ldr.w	r3, [fp, #4]
 800462a:	3e0c      	subs	r6, #12
 800462c:	f026 0607 	bic.w	r6, r6, #7
 8004630:	f003 0301 	and.w	r3, r3, #1
 8004634:	4333      	orrs	r3, r6
 8004636:	f8cb 3004 	str.w	r3, [fp, #4]
 800463a:	eb0b 0306 	add.w	r3, fp, r6
 800463e:	2205      	movs	r2, #5
 8004640:	2e0f      	cmp	r6, #15
 8004642:	605a      	str	r2, [r3, #4]
 8004644:	609a      	str	r2, [r3, #8]
 8004646:	d9a0      	bls.n	800458a <_malloc_r+0x322>
 8004648:	f10b 0108 	add.w	r1, fp, #8
 800464c:	4648      	mov	r0, r9
 800464e:	f000 fc0f 	bl	8004e70 <_free_r>
 8004652:	e79a      	b.n	800458a <_malloc_r+0x322>
 8004654:	68ae      	ldr	r6, [r5, #8]
 8004656:	f044 0201 	orr.w	r2, r4, #1
 800465a:	4434      	add	r4, r6
 800465c:	f043 0301 	orr.w	r3, r3, #1
 8004660:	6072      	str	r2, [r6, #4]
 8004662:	60ac      	str	r4, [r5, #8]
 8004664:	6063      	str	r3, [r4, #4]
 8004666:	e631      	b.n	80042cc <_malloc_r+0x64>
 8004668:	200006c0 	.word	0x200006c0
 800466c:	20000500 	.word	0x20000500
 8004670:	00000080 	.word	0x00000080
 8004674:	20000690 	.word	0x20000690
 8004678:	0000007f 	.word	0x0000007f
 800467c:	200006b8 	.word	0x200006b8
 8004680:	200006bc 	.word	0x200006bc

08004684 <memcpy>:
 8004684:	b510      	push	{r4, lr}
 8004686:	1e43      	subs	r3, r0, #1
 8004688:	440a      	add	r2, r1
 800468a:	4291      	cmp	r1, r2
 800468c:	d100      	bne.n	8004690 <memcpy+0xc>
 800468e:	bd10      	pop	{r4, pc}
 8004690:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004694:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004698:	e7f7      	b.n	800468a <memcpy+0x6>
	...

0800469c <__malloc_lock>:
 800469c:	4801      	ldr	r0, [pc, #4]	; (80046a4 <__malloc_lock+0x8>)
 800469e:	f000 bca3 	b.w	8004fe8 <__retarget_lock_acquire_recursive>
 80046a2:	bf00      	nop
 80046a4:	20000748 	.word	0x20000748

080046a8 <__malloc_unlock>:
 80046a8:	4801      	ldr	r0, [pc, #4]	; (80046b0 <__malloc_unlock+0x8>)
 80046aa:	f000 bc9e 	b.w	8004fea <__retarget_lock_release_recursive>
 80046ae:	bf00      	nop
 80046b0:	20000748 	.word	0x20000748

080046b4 <_Balloc>:
 80046b4:	b570      	push	{r4, r5, r6, lr}
 80046b6:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80046b8:	4604      	mov	r4, r0
 80046ba:	460e      	mov	r6, r1
 80046bc:	b93d      	cbnz	r5, 80046ce <_Balloc+0x1a>
 80046be:	2010      	movs	r0, #16
 80046c0:	f7ff fdca 	bl	8004258 <malloc>
 80046c4:	6260      	str	r0, [r4, #36]	; 0x24
 80046c6:	6045      	str	r5, [r0, #4]
 80046c8:	6085      	str	r5, [r0, #8]
 80046ca:	6005      	str	r5, [r0, #0]
 80046cc:	60c5      	str	r5, [r0, #12]
 80046ce:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80046d0:	68eb      	ldr	r3, [r5, #12]
 80046d2:	b183      	cbz	r3, 80046f6 <_Balloc+0x42>
 80046d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80046d6:	68db      	ldr	r3, [r3, #12]
 80046d8:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80046dc:	b9b8      	cbnz	r0, 800470e <_Balloc+0x5a>
 80046de:	2101      	movs	r1, #1
 80046e0:	fa01 f506 	lsl.w	r5, r1, r6
 80046e4:	1d6a      	adds	r2, r5, #5
 80046e6:	0092      	lsls	r2, r2, #2
 80046e8:	4620      	mov	r0, r4
 80046ea:	f000 fb3d 	bl	8004d68 <_calloc_r>
 80046ee:	b160      	cbz	r0, 800470a <_Balloc+0x56>
 80046f0:	6046      	str	r6, [r0, #4]
 80046f2:	6085      	str	r5, [r0, #8]
 80046f4:	e00e      	b.n	8004714 <_Balloc+0x60>
 80046f6:	2221      	movs	r2, #33	; 0x21
 80046f8:	2104      	movs	r1, #4
 80046fa:	4620      	mov	r0, r4
 80046fc:	f000 fb34 	bl	8004d68 <_calloc_r>
 8004700:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004702:	60e8      	str	r0, [r5, #12]
 8004704:	68db      	ldr	r3, [r3, #12]
 8004706:	2b00      	cmp	r3, #0
 8004708:	d1e4      	bne.n	80046d4 <_Balloc+0x20>
 800470a:	2000      	movs	r0, #0
 800470c:	bd70      	pop	{r4, r5, r6, pc}
 800470e:	6802      	ldr	r2, [r0, #0]
 8004710:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8004714:	2300      	movs	r3, #0
 8004716:	6103      	str	r3, [r0, #16]
 8004718:	60c3      	str	r3, [r0, #12]
 800471a:	bd70      	pop	{r4, r5, r6, pc}

0800471c <_Bfree>:
 800471c:	b570      	push	{r4, r5, r6, lr}
 800471e:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8004720:	4606      	mov	r6, r0
 8004722:	460d      	mov	r5, r1
 8004724:	b93c      	cbnz	r4, 8004736 <_Bfree+0x1a>
 8004726:	2010      	movs	r0, #16
 8004728:	f7ff fd96 	bl	8004258 <malloc>
 800472c:	6270      	str	r0, [r6, #36]	; 0x24
 800472e:	6044      	str	r4, [r0, #4]
 8004730:	6084      	str	r4, [r0, #8]
 8004732:	6004      	str	r4, [r0, #0]
 8004734:	60c4      	str	r4, [r0, #12]
 8004736:	b13d      	cbz	r5, 8004748 <_Bfree+0x2c>
 8004738:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800473a:	686a      	ldr	r2, [r5, #4]
 800473c:	68db      	ldr	r3, [r3, #12]
 800473e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004742:	6029      	str	r1, [r5, #0]
 8004744:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8004748:	bd70      	pop	{r4, r5, r6, pc}

0800474a <__multadd>:
 800474a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800474e:	690d      	ldr	r5, [r1, #16]
 8004750:	461f      	mov	r7, r3
 8004752:	4606      	mov	r6, r0
 8004754:	460c      	mov	r4, r1
 8004756:	f101 0e14 	add.w	lr, r1, #20
 800475a:	2300      	movs	r3, #0
 800475c:	f8de 0000 	ldr.w	r0, [lr]
 8004760:	b281      	uxth	r1, r0
 8004762:	fb02 7101 	mla	r1, r2, r1, r7
 8004766:	0c0f      	lsrs	r7, r1, #16
 8004768:	0c00      	lsrs	r0, r0, #16
 800476a:	fb02 7000 	mla	r0, r2, r0, r7
 800476e:	b289      	uxth	r1, r1
 8004770:	3301      	adds	r3, #1
 8004772:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8004776:	429d      	cmp	r5, r3
 8004778:	ea4f 4710 	mov.w	r7, r0, lsr #16
 800477c:	f84e 1b04 	str.w	r1, [lr], #4
 8004780:	dcec      	bgt.n	800475c <__multadd+0x12>
 8004782:	b1d7      	cbz	r7, 80047ba <__multadd+0x70>
 8004784:	68a3      	ldr	r3, [r4, #8]
 8004786:	429d      	cmp	r5, r3
 8004788:	db12      	blt.n	80047b0 <__multadd+0x66>
 800478a:	6861      	ldr	r1, [r4, #4]
 800478c:	4630      	mov	r0, r6
 800478e:	3101      	adds	r1, #1
 8004790:	f7ff ff90 	bl	80046b4 <_Balloc>
 8004794:	6922      	ldr	r2, [r4, #16]
 8004796:	3202      	adds	r2, #2
 8004798:	f104 010c 	add.w	r1, r4, #12
 800479c:	4680      	mov	r8, r0
 800479e:	0092      	lsls	r2, r2, #2
 80047a0:	300c      	adds	r0, #12
 80047a2:	f7ff ff6f 	bl	8004684 <memcpy>
 80047a6:	4621      	mov	r1, r4
 80047a8:	4630      	mov	r0, r6
 80047aa:	f7ff ffb7 	bl	800471c <_Bfree>
 80047ae:	4644      	mov	r4, r8
 80047b0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80047b4:	3501      	adds	r5, #1
 80047b6:	615f      	str	r7, [r3, #20]
 80047b8:	6125      	str	r5, [r4, #16]
 80047ba:	4620      	mov	r0, r4
 80047bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080047c0 <__hi0bits>:
 80047c0:	0c02      	lsrs	r2, r0, #16
 80047c2:	0412      	lsls	r2, r2, #16
 80047c4:	4603      	mov	r3, r0
 80047c6:	b9b2      	cbnz	r2, 80047f6 <__hi0bits+0x36>
 80047c8:	0403      	lsls	r3, r0, #16
 80047ca:	2010      	movs	r0, #16
 80047cc:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80047d0:	bf04      	itt	eq
 80047d2:	021b      	lsleq	r3, r3, #8
 80047d4:	3008      	addeq	r0, #8
 80047d6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80047da:	bf04      	itt	eq
 80047dc:	011b      	lsleq	r3, r3, #4
 80047de:	3004      	addeq	r0, #4
 80047e0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80047e4:	bf04      	itt	eq
 80047e6:	009b      	lsleq	r3, r3, #2
 80047e8:	3002      	addeq	r0, #2
 80047ea:	2b00      	cmp	r3, #0
 80047ec:	db06      	blt.n	80047fc <__hi0bits+0x3c>
 80047ee:	005b      	lsls	r3, r3, #1
 80047f0:	d503      	bpl.n	80047fa <__hi0bits+0x3a>
 80047f2:	3001      	adds	r0, #1
 80047f4:	4770      	bx	lr
 80047f6:	2000      	movs	r0, #0
 80047f8:	e7e8      	b.n	80047cc <__hi0bits+0xc>
 80047fa:	2020      	movs	r0, #32
 80047fc:	4770      	bx	lr

080047fe <__lo0bits>:
 80047fe:	6803      	ldr	r3, [r0, #0]
 8004800:	f013 0207 	ands.w	r2, r3, #7
 8004804:	4601      	mov	r1, r0
 8004806:	d00b      	beq.n	8004820 <__lo0bits+0x22>
 8004808:	07da      	lsls	r2, r3, #31
 800480a:	d423      	bmi.n	8004854 <__lo0bits+0x56>
 800480c:	0798      	lsls	r0, r3, #30
 800480e:	bf49      	itett	mi
 8004810:	085b      	lsrmi	r3, r3, #1
 8004812:	089b      	lsrpl	r3, r3, #2
 8004814:	2001      	movmi	r0, #1
 8004816:	600b      	strmi	r3, [r1, #0]
 8004818:	bf5c      	itt	pl
 800481a:	600b      	strpl	r3, [r1, #0]
 800481c:	2002      	movpl	r0, #2
 800481e:	4770      	bx	lr
 8004820:	b298      	uxth	r0, r3
 8004822:	b9a8      	cbnz	r0, 8004850 <__lo0bits+0x52>
 8004824:	0c1b      	lsrs	r3, r3, #16
 8004826:	2010      	movs	r0, #16
 8004828:	f013 0fff 	tst.w	r3, #255	; 0xff
 800482c:	bf04      	itt	eq
 800482e:	0a1b      	lsreq	r3, r3, #8
 8004830:	3008      	addeq	r0, #8
 8004832:	071a      	lsls	r2, r3, #28
 8004834:	bf04      	itt	eq
 8004836:	091b      	lsreq	r3, r3, #4
 8004838:	3004      	addeq	r0, #4
 800483a:	079a      	lsls	r2, r3, #30
 800483c:	bf04      	itt	eq
 800483e:	089b      	lsreq	r3, r3, #2
 8004840:	3002      	addeq	r0, #2
 8004842:	07da      	lsls	r2, r3, #31
 8004844:	d402      	bmi.n	800484c <__lo0bits+0x4e>
 8004846:	085b      	lsrs	r3, r3, #1
 8004848:	d006      	beq.n	8004858 <__lo0bits+0x5a>
 800484a:	3001      	adds	r0, #1
 800484c:	600b      	str	r3, [r1, #0]
 800484e:	4770      	bx	lr
 8004850:	4610      	mov	r0, r2
 8004852:	e7e9      	b.n	8004828 <__lo0bits+0x2a>
 8004854:	2000      	movs	r0, #0
 8004856:	4770      	bx	lr
 8004858:	2020      	movs	r0, #32
 800485a:	4770      	bx	lr

0800485c <__i2b>:
 800485c:	b510      	push	{r4, lr}
 800485e:	460c      	mov	r4, r1
 8004860:	2101      	movs	r1, #1
 8004862:	f7ff ff27 	bl	80046b4 <_Balloc>
 8004866:	2201      	movs	r2, #1
 8004868:	6144      	str	r4, [r0, #20]
 800486a:	6102      	str	r2, [r0, #16]
 800486c:	bd10      	pop	{r4, pc}

0800486e <__multiply>:
 800486e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004872:	4614      	mov	r4, r2
 8004874:	690a      	ldr	r2, [r1, #16]
 8004876:	6923      	ldr	r3, [r4, #16]
 8004878:	429a      	cmp	r2, r3
 800487a:	bfb8      	it	lt
 800487c:	460b      	movlt	r3, r1
 800487e:	4689      	mov	r9, r1
 8004880:	bfbc      	itt	lt
 8004882:	46a1      	movlt	r9, r4
 8004884:	461c      	movlt	r4, r3
 8004886:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800488a:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800488e:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8004892:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004896:	eb07 060a 	add.w	r6, r7, sl
 800489a:	429e      	cmp	r6, r3
 800489c:	bfc8      	it	gt
 800489e:	3101      	addgt	r1, #1
 80048a0:	f7ff ff08 	bl	80046b4 <_Balloc>
 80048a4:	f100 0514 	add.w	r5, r0, #20
 80048a8:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80048ac:	462b      	mov	r3, r5
 80048ae:	2200      	movs	r2, #0
 80048b0:	4543      	cmp	r3, r8
 80048b2:	d316      	bcc.n	80048e2 <__multiply+0x74>
 80048b4:	f104 0214 	add.w	r2, r4, #20
 80048b8:	f109 0114 	add.w	r1, r9, #20
 80048bc:	eb02 038a 	add.w	r3, r2, sl, lsl #2
 80048c0:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 80048c4:	9301      	str	r3, [sp, #4]
 80048c6:	9c01      	ldr	r4, [sp, #4]
 80048c8:	4294      	cmp	r4, r2
 80048ca:	4613      	mov	r3, r2
 80048cc:	d80c      	bhi.n	80048e8 <__multiply+0x7a>
 80048ce:	2e00      	cmp	r6, #0
 80048d0:	dd03      	ble.n	80048da <__multiply+0x6c>
 80048d2:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80048d6:	2b00      	cmp	r3, #0
 80048d8:	d054      	beq.n	8004984 <__multiply+0x116>
 80048da:	6106      	str	r6, [r0, #16]
 80048dc:	b003      	add	sp, #12
 80048de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80048e2:	f843 2b04 	str.w	r2, [r3], #4
 80048e6:	e7e3      	b.n	80048b0 <__multiply+0x42>
 80048e8:	f8b3 a000 	ldrh.w	sl, [r3]
 80048ec:	3204      	adds	r2, #4
 80048ee:	f1ba 0f00 	cmp.w	sl, #0
 80048f2:	d020      	beq.n	8004936 <__multiply+0xc8>
 80048f4:	46ae      	mov	lr, r5
 80048f6:	4689      	mov	r9, r1
 80048f8:	f04f 0c00 	mov.w	ip, #0
 80048fc:	f859 4b04 	ldr.w	r4, [r9], #4
 8004900:	f8be b000 	ldrh.w	fp, [lr]
 8004904:	b2a3      	uxth	r3, r4
 8004906:	fb0a b303 	mla	r3, sl, r3, fp
 800490a:	ea4f 4b14 	mov.w	fp, r4, lsr #16
 800490e:	f8de 4000 	ldr.w	r4, [lr]
 8004912:	4463      	add	r3, ip
 8004914:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8004918:	fb0a c40b 	mla	r4, sl, fp, ip
 800491c:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8004920:	b29b      	uxth	r3, r3
 8004922:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8004926:	454f      	cmp	r7, r9
 8004928:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 800492c:	f84e 3b04 	str.w	r3, [lr], #4
 8004930:	d8e4      	bhi.n	80048fc <__multiply+0x8e>
 8004932:	f8ce c000 	str.w	ip, [lr]
 8004936:	f832 9c02 	ldrh.w	r9, [r2, #-2]
 800493a:	f1b9 0f00 	cmp.w	r9, #0
 800493e:	d01f      	beq.n	8004980 <__multiply+0x112>
 8004940:	682b      	ldr	r3, [r5, #0]
 8004942:	46ae      	mov	lr, r5
 8004944:	468c      	mov	ip, r1
 8004946:	f04f 0a00 	mov.w	sl, #0
 800494a:	f8bc 4000 	ldrh.w	r4, [ip]
 800494e:	f8be b002 	ldrh.w	fp, [lr, #2]
 8004952:	fb09 b404 	mla	r4, r9, r4, fp
 8004956:	44a2      	add	sl, r4
 8004958:	b29b      	uxth	r3, r3
 800495a:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
 800495e:	f84e 3b04 	str.w	r3, [lr], #4
 8004962:	f85c 3b04 	ldr.w	r3, [ip], #4
 8004966:	f8be 4000 	ldrh.w	r4, [lr]
 800496a:	0c1b      	lsrs	r3, r3, #16
 800496c:	fb09 4303 	mla	r3, r9, r3, r4
 8004970:	eb03 431a 	add.w	r3, r3, sl, lsr #16
 8004974:	4567      	cmp	r7, ip
 8004976:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800497a:	d8e6      	bhi.n	800494a <__multiply+0xdc>
 800497c:	f8ce 3000 	str.w	r3, [lr]
 8004980:	3504      	adds	r5, #4
 8004982:	e7a0      	b.n	80048c6 <__multiply+0x58>
 8004984:	3e01      	subs	r6, #1
 8004986:	e7a2      	b.n	80048ce <__multiply+0x60>

08004988 <__pow5mult>:
 8004988:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800498c:	4615      	mov	r5, r2
 800498e:	f012 0203 	ands.w	r2, r2, #3
 8004992:	4606      	mov	r6, r0
 8004994:	460f      	mov	r7, r1
 8004996:	d007      	beq.n	80049a8 <__pow5mult+0x20>
 8004998:	3a01      	subs	r2, #1
 800499a:	4c21      	ldr	r4, [pc, #132]	; (8004a20 <__pow5mult+0x98>)
 800499c:	2300      	movs	r3, #0
 800499e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80049a2:	f7ff fed2 	bl	800474a <__multadd>
 80049a6:	4607      	mov	r7, r0
 80049a8:	10ad      	asrs	r5, r5, #2
 80049aa:	d035      	beq.n	8004a18 <__pow5mult+0x90>
 80049ac:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80049ae:	b93c      	cbnz	r4, 80049c0 <__pow5mult+0x38>
 80049b0:	2010      	movs	r0, #16
 80049b2:	f7ff fc51 	bl	8004258 <malloc>
 80049b6:	6270      	str	r0, [r6, #36]	; 0x24
 80049b8:	6044      	str	r4, [r0, #4]
 80049ba:	6084      	str	r4, [r0, #8]
 80049bc:	6004      	str	r4, [r0, #0]
 80049be:	60c4      	str	r4, [r0, #12]
 80049c0:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80049c4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80049c8:	b94c      	cbnz	r4, 80049de <__pow5mult+0x56>
 80049ca:	f240 2171 	movw	r1, #625	; 0x271
 80049ce:	4630      	mov	r0, r6
 80049d0:	f7ff ff44 	bl	800485c <__i2b>
 80049d4:	2300      	movs	r3, #0
 80049d6:	f8c8 0008 	str.w	r0, [r8, #8]
 80049da:	4604      	mov	r4, r0
 80049dc:	6003      	str	r3, [r0, #0]
 80049de:	f04f 0800 	mov.w	r8, #0
 80049e2:	07eb      	lsls	r3, r5, #31
 80049e4:	d50a      	bpl.n	80049fc <__pow5mult+0x74>
 80049e6:	4639      	mov	r1, r7
 80049e8:	4622      	mov	r2, r4
 80049ea:	4630      	mov	r0, r6
 80049ec:	f7ff ff3f 	bl	800486e <__multiply>
 80049f0:	4639      	mov	r1, r7
 80049f2:	4681      	mov	r9, r0
 80049f4:	4630      	mov	r0, r6
 80049f6:	f7ff fe91 	bl	800471c <_Bfree>
 80049fa:	464f      	mov	r7, r9
 80049fc:	106d      	asrs	r5, r5, #1
 80049fe:	d00b      	beq.n	8004a18 <__pow5mult+0x90>
 8004a00:	6820      	ldr	r0, [r4, #0]
 8004a02:	b938      	cbnz	r0, 8004a14 <__pow5mult+0x8c>
 8004a04:	4622      	mov	r2, r4
 8004a06:	4621      	mov	r1, r4
 8004a08:	4630      	mov	r0, r6
 8004a0a:	f7ff ff30 	bl	800486e <__multiply>
 8004a0e:	6020      	str	r0, [r4, #0]
 8004a10:	f8c0 8000 	str.w	r8, [r0]
 8004a14:	4604      	mov	r4, r0
 8004a16:	e7e4      	b.n	80049e2 <__pow5mult+0x5a>
 8004a18:	4638      	mov	r0, r7
 8004a1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004a1e:	bf00      	nop
 8004a20:	080065f0 	.word	0x080065f0

08004a24 <__lshift>:
 8004a24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a28:	460c      	mov	r4, r1
 8004a2a:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004a2e:	6923      	ldr	r3, [r4, #16]
 8004a30:	6849      	ldr	r1, [r1, #4]
 8004a32:	eb0a 0903 	add.w	r9, sl, r3
 8004a36:	68a3      	ldr	r3, [r4, #8]
 8004a38:	4607      	mov	r7, r0
 8004a3a:	4616      	mov	r6, r2
 8004a3c:	f109 0501 	add.w	r5, r9, #1
 8004a40:	42ab      	cmp	r3, r5
 8004a42:	db31      	blt.n	8004aa8 <__lshift+0x84>
 8004a44:	4638      	mov	r0, r7
 8004a46:	f7ff fe35 	bl	80046b4 <_Balloc>
 8004a4a:	2200      	movs	r2, #0
 8004a4c:	4680      	mov	r8, r0
 8004a4e:	f100 0314 	add.w	r3, r0, #20
 8004a52:	4611      	mov	r1, r2
 8004a54:	4552      	cmp	r2, sl
 8004a56:	db2a      	blt.n	8004aae <__lshift+0x8a>
 8004a58:	6920      	ldr	r0, [r4, #16]
 8004a5a:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004a5e:	f104 0114 	add.w	r1, r4, #20
 8004a62:	f016 021f 	ands.w	r2, r6, #31
 8004a66:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8004a6a:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 8004a6e:	d022      	beq.n	8004ab6 <__lshift+0x92>
 8004a70:	f1c2 0c20 	rsb	ip, r2, #32
 8004a74:	2000      	movs	r0, #0
 8004a76:	680e      	ldr	r6, [r1, #0]
 8004a78:	4096      	lsls	r6, r2
 8004a7a:	4330      	orrs	r0, r6
 8004a7c:	f843 0b04 	str.w	r0, [r3], #4
 8004a80:	f851 0b04 	ldr.w	r0, [r1], #4
 8004a84:	458e      	cmp	lr, r1
 8004a86:	fa20 f00c 	lsr.w	r0, r0, ip
 8004a8a:	d8f4      	bhi.n	8004a76 <__lshift+0x52>
 8004a8c:	6018      	str	r0, [r3, #0]
 8004a8e:	b108      	cbz	r0, 8004a94 <__lshift+0x70>
 8004a90:	f109 0502 	add.w	r5, r9, #2
 8004a94:	3d01      	subs	r5, #1
 8004a96:	4638      	mov	r0, r7
 8004a98:	f8c8 5010 	str.w	r5, [r8, #16]
 8004a9c:	4621      	mov	r1, r4
 8004a9e:	f7ff fe3d 	bl	800471c <_Bfree>
 8004aa2:	4640      	mov	r0, r8
 8004aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004aa8:	3101      	adds	r1, #1
 8004aaa:	005b      	lsls	r3, r3, #1
 8004aac:	e7c8      	b.n	8004a40 <__lshift+0x1c>
 8004aae:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004ab2:	3201      	adds	r2, #1
 8004ab4:	e7ce      	b.n	8004a54 <__lshift+0x30>
 8004ab6:	3b04      	subs	r3, #4
 8004ab8:	f851 2b04 	ldr.w	r2, [r1], #4
 8004abc:	f843 2f04 	str.w	r2, [r3, #4]!
 8004ac0:	458e      	cmp	lr, r1
 8004ac2:	d8f9      	bhi.n	8004ab8 <__lshift+0x94>
 8004ac4:	e7e6      	b.n	8004a94 <__lshift+0x70>

08004ac6 <__mcmp>:
 8004ac6:	6903      	ldr	r3, [r0, #16]
 8004ac8:	690a      	ldr	r2, [r1, #16]
 8004aca:	1a9b      	subs	r3, r3, r2
 8004acc:	b530      	push	{r4, r5, lr}
 8004ace:	d10c      	bne.n	8004aea <__mcmp+0x24>
 8004ad0:	0092      	lsls	r2, r2, #2
 8004ad2:	3014      	adds	r0, #20
 8004ad4:	3114      	adds	r1, #20
 8004ad6:	1884      	adds	r4, r0, r2
 8004ad8:	4411      	add	r1, r2
 8004ada:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004ade:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004ae2:	4295      	cmp	r5, r2
 8004ae4:	d003      	beq.n	8004aee <__mcmp+0x28>
 8004ae6:	d305      	bcc.n	8004af4 <__mcmp+0x2e>
 8004ae8:	2301      	movs	r3, #1
 8004aea:	4618      	mov	r0, r3
 8004aec:	bd30      	pop	{r4, r5, pc}
 8004aee:	42a0      	cmp	r0, r4
 8004af0:	d3f3      	bcc.n	8004ada <__mcmp+0x14>
 8004af2:	e7fa      	b.n	8004aea <__mcmp+0x24>
 8004af4:	f04f 33ff 	mov.w	r3, #4294967295
 8004af8:	e7f7      	b.n	8004aea <__mcmp+0x24>

08004afa <__mdiff>:
 8004afa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004afe:	460d      	mov	r5, r1
 8004b00:	4607      	mov	r7, r0
 8004b02:	4611      	mov	r1, r2
 8004b04:	4628      	mov	r0, r5
 8004b06:	4614      	mov	r4, r2
 8004b08:	f7ff ffdd 	bl	8004ac6 <__mcmp>
 8004b0c:	1e06      	subs	r6, r0, #0
 8004b0e:	d108      	bne.n	8004b22 <__mdiff+0x28>
 8004b10:	4631      	mov	r1, r6
 8004b12:	4638      	mov	r0, r7
 8004b14:	f7ff fdce 	bl	80046b4 <_Balloc>
 8004b18:	2301      	movs	r3, #1
 8004b1a:	6103      	str	r3, [r0, #16]
 8004b1c:	6146      	str	r6, [r0, #20]
 8004b1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004b22:	bfa4      	itt	ge
 8004b24:	4623      	movge	r3, r4
 8004b26:	462c      	movge	r4, r5
 8004b28:	4638      	mov	r0, r7
 8004b2a:	6861      	ldr	r1, [r4, #4]
 8004b2c:	bfa6      	itte	ge
 8004b2e:	461d      	movge	r5, r3
 8004b30:	2600      	movge	r6, #0
 8004b32:	2601      	movlt	r6, #1
 8004b34:	f7ff fdbe 	bl	80046b4 <_Balloc>
 8004b38:	692b      	ldr	r3, [r5, #16]
 8004b3a:	60c6      	str	r6, [r0, #12]
 8004b3c:	6926      	ldr	r6, [r4, #16]
 8004b3e:	f105 0914 	add.w	r9, r5, #20
 8004b42:	f104 0214 	add.w	r2, r4, #20
 8004b46:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8004b4a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8004b4e:	f100 0514 	add.w	r5, r0, #20
 8004b52:	f04f 0c00 	mov.w	ip, #0
 8004b56:	f852 ab04 	ldr.w	sl, [r2], #4
 8004b5a:	f859 4b04 	ldr.w	r4, [r9], #4
 8004b5e:	fa1c f18a 	uxtah	r1, ip, sl
 8004b62:	b2a3      	uxth	r3, r4
 8004b64:	1ac9      	subs	r1, r1, r3
 8004b66:	0c23      	lsrs	r3, r4, #16
 8004b68:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8004b6c:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8004b70:	b289      	uxth	r1, r1
 8004b72:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8004b76:	45c8      	cmp	r8, r9
 8004b78:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8004b7c:	4696      	mov	lr, r2
 8004b7e:	f845 3b04 	str.w	r3, [r5], #4
 8004b82:	d8e8      	bhi.n	8004b56 <__mdiff+0x5c>
 8004b84:	45be      	cmp	lr, r7
 8004b86:	d305      	bcc.n	8004b94 <__mdiff+0x9a>
 8004b88:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8004b8c:	b18b      	cbz	r3, 8004bb2 <__mdiff+0xb8>
 8004b8e:	6106      	str	r6, [r0, #16]
 8004b90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004b94:	f85e 1b04 	ldr.w	r1, [lr], #4
 8004b98:	fa1c f381 	uxtah	r3, ip, r1
 8004b9c:	141a      	asrs	r2, r3, #16
 8004b9e:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8004ba2:	b29b      	uxth	r3, r3
 8004ba4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004ba8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8004bac:	f845 3b04 	str.w	r3, [r5], #4
 8004bb0:	e7e8      	b.n	8004b84 <__mdiff+0x8a>
 8004bb2:	3e01      	subs	r6, #1
 8004bb4:	e7e8      	b.n	8004b88 <__mdiff+0x8e>

08004bb6 <__d2b>:
 8004bb6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004bba:	460e      	mov	r6, r1
 8004bbc:	2101      	movs	r1, #1
 8004bbe:	ec59 8b10 	vmov	r8, r9, d0
 8004bc2:	4615      	mov	r5, r2
 8004bc4:	f7ff fd76 	bl	80046b4 <_Balloc>
 8004bc8:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8004bcc:	4607      	mov	r7, r0
 8004bce:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004bd2:	bb34      	cbnz	r4, 8004c22 <__d2b+0x6c>
 8004bd4:	9301      	str	r3, [sp, #4]
 8004bd6:	f1b8 0f00 	cmp.w	r8, #0
 8004bda:	d027      	beq.n	8004c2c <__d2b+0x76>
 8004bdc:	a802      	add	r0, sp, #8
 8004bde:	f840 8d08 	str.w	r8, [r0, #-8]!
 8004be2:	f7ff fe0c 	bl	80047fe <__lo0bits>
 8004be6:	9900      	ldr	r1, [sp, #0]
 8004be8:	b1f0      	cbz	r0, 8004c28 <__d2b+0x72>
 8004bea:	9a01      	ldr	r2, [sp, #4]
 8004bec:	f1c0 0320 	rsb	r3, r0, #32
 8004bf0:	fa02 f303 	lsl.w	r3, r2, r3
 8004bf4:	430b      	orrs	r3, r1
 8004bf6:	40c2      	lsrs	r2, r0
 8004bf8:	617b      	str	r3, [r7, #20]
 8004bfa:	9201      	str	r2, [sp, #4]
 8004bfc:	9b01      	ldr	r3, [sp, #4]
 8004bfe:	61bb      	str	r3, [r7, #24]
 8004c00:	2b00      	cmp	r3, #0
 8004c02:	bf14      	ite	ne
 8004c04:	2102      	movne	r1, #2
 8004c06:	2101      	moveq	r1, #1
 8004c08:	6139      	str	r1, [r7, #16]
 8004c0a:	b1c4      	cbz	r4, 8004c3e <__d2b+0x88>
 8004c0c:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8004c10:	4404      	add	r4, r0
 8004c12:	6034      	str	r4, [r6, #0]
 8004c14:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8004c18:	6028      	str	r0, [r5, #0]
 8004c1a:	4638      	mov	r0, r7
 8004c1c:	b003      	add	sp, #12
 8004c1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004c22:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004c26:	e7d5      	b.n	8004bd4 <__d2b+0x1e>
 8004c28:	6179      	str	r1, [r7, #20]
 8004c2a:	e7e7      	b.n	8004bfc <__d2b+0x46>
 8004c2c:	a801      	add	r0, sp, #4
 8004c2e:	f7ff fde6 	bl	80047fe <__lo0bits>
 8004c32:	9b01      	ldr	r3, [sp, #4]
 8004c34:	617b      	str	r3, [r7, #20]
 8004c36:	2101      	movs	r1, #1
 8004c38:	6139      	str	r1, [r7, #16]
 8004c3a:	3020      	adds	r0, #32
 8004c3c:	e7e5      	b.n	8004c0a <__d2b+0x54>
 8004c3e:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8004c42:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8004c46:	6030      	str	r0, [r6, #0]
 8004c48:	6918      	ldr	r0, [r3, #16]
 8004c4a:	f7ff fdb9 	bl	80047c0 <__hi0bits>
 8004c4e:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8004c52:	e7e1      	b.n	8004c18 <__d2b+0x62>

08004c54 <_sbrk_r>:
 8004c54:	b538      	push	{r3, r4, r5, lr}
 8004c56:	4c06      	ldr	r4, [pc, #24]	; (8004c70 <_sbrk_r+0x1c>)
 8004c58:	2300      	movs	r3, #0
 8004c5a:	4605      	mov	r5, r0
 8004c5c:	4608      	mov	r0, r1
 8004c5e:	6023      	str	r3, [r4, #0]
 8004c60:	f001 fbca 	bl	80063f8 <_sbrk>
 8004c64:	1c43      	adds	r3, r0, #1
 8004c66:	d102      	bne.n	8004c6e <_sbrk_r+0x1a>
 8004c68:	6823      	ldr	r3, [r4, #0]
 8004c6a:	b103      	cbz	r3, 8004c6e <_sbrk_r+0x1a>
 8004c6c:	602b      	str	r3, [r5, #0]
 8004c6e:	bd38      	pop	{r3, r4, r5, pc}
 8004c70:	20000750 	.word	0x20000750

08004c74 <__ssprint_r>:
 8004c74:	6893      	ldr	r3, [r2, #8]
 8004c76:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c7a:	4681      	mov	r9, r0
 8004c7c:	460c      	mov	r4, r1
 8004c7e:	4617      	mov	r7, r2
 8004c80:	2b00      	cmp	r3, #0
 8004c82:	d060      	beq.n	8004d46 <__ssprint_r+0xd2>
 8004c84:	f04f 0b00 	mov.w	fp, #0
 8004c88:	f8d2 a000 	ldr.w	sl, [r2]
 8004c8c:	465e      	mov	r6, fp
 8004c8e:	b356      	cbz	r6, 8004ce6 <__ssprint_r+0x72>
 8004c90:	68a3      	ldr	r3, [r4, #8]
 8004c92:	429e      	cmp	r6, r3
 8004c94:	d344      	bcc.n	8004d20 <__ssprint_r+0xac>
 8004c96:	89a2      	ldrh	r2, [r4, #12]
 8004c98:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004c9c:	d03e      	beq.n	8004d1c <__ssprint_r+0xa8>
 8004c9e:	6825      	ldr	r5, [r4, #0]
 8004ca0:	6921      	ldr	r1, [r4, #16]
 8004ca2:	eba5 0801 	sub.w	r8, r5, r1
 8004ca6:	6965      	ldr	r5, [r4, #20]
 8004ca8:	2302      	movs	r3, #2
 8004caa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004cae:	fb95 f5f3 	sdiv	r5, r5, r3
 8004cb2:	f108 0301 	add.w	r3, r8, #1
 8004cb6:	4433      	add	r3, r6
 8004cb8:	429d      	cmp	r5, r3
 8004cba:	bf38      	it	cc
 8004cbc:	461d      	movcc	r5, r3
 8004cbe:	0553      	lsls	r3, r2, #21
 8004cc0:	d546      	bpl.n	8004d50 <__ssprint_r+0xdc>
 8004cc2:	4629      	mov	r1, r5
 8004cc4:	4648      	mov	r0, r9
 8004cc6:	f7ff facf 	bl	8004268 <_malloc_r>
 8004cca:	b998      	cbnz	r0, 8004cf4 <__ssprint_r+0x80>
 8004ccc:	230c      	movs	r3, #12
 8004cce:	f8c9 3000 	str.w	r3, [r9]
 8004cd2:	89a3      	ldrh	r3, [r4, #12]
 8004cd4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004cd8:	81a3      	strh	r3, [r4, #12]
 8004cda:	2300      	movs	r3, #0
 8004cdc:	60bb      	str	r3, [r7, #8]
 8004cde:	607b      	str	r3, [r7, #4]
 8004ce0:	f04f 30ff 	mov.w	r0, #4294967295
 8004ce4:	e031      	b.n	8004d4a <__ssprint_r+0xd6>
 8004ce6:	f8da b000 	ldr.w	fp, [sl]
 8004cea:	f8da 6004 	ldr.w	r6, [sl, #4]
 8004cee:	f10a 0a08 	add.w	sl, sl, #8
 8004cf2:	e7cc      	b.n	8004c8e <__ssprint_r+0x1a>
 8004cf4:	4642      	mov	r2, r8
 8004cf6:	6921      	ldr	r1, [r4, #16]
 8004cf8:	9001      	str	r0, [sp, #4]
 8004cfa:	f7ff fcc3 	bl	8004684 <memcpy>
 8004cfe:	89a2      	ldrh	r2, [r4, #12]
 8004d00:	9b01      	ldr	r3, [sp, #4]
 8004d02:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8004d06:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004d0a:	81a2      	strh	r2, [r4, #12]
 8004d0c:	6123      	str	r3, [r4, #16]
 8004d0e:	6165      	str	r5, [r4, #20]
 8004d10:	4443      	add	r3, r8
 8004d12:	eba5 0508 	sub.w	r5, r5, r8
 8004d16:	6023      	str	r3, [r4, #0]
 8004d18:	60a5      	str	r5, [r4, #8]
 8004d1a:	4633      	mov	r3, r6
 8004d1c:	429e      	cmp	r6, r3
 8004d1e:	d200      	bcs.n	8004d22 <__ssprint_r+0xae>
 8004d20:	4633      	mov	r3, r6
 8004d22:	461a      	mov	r2, r3
 8004d24:	4659      	mov	r1, fp
 8004d26:	6820      	ldr	r0, [r4, #0]
 8004d28:	9301      	str	r3, [sp, #4]
 8004d2a:	f000 f971 	bl	8005010 <memmove>
 8004d2e:	68a2      	ldr	r2, [r4, #8]
 8004d30:	9b01      	ldr	r3, [sp, #4]
 8004d32:	1ad2      	subs	r2, r2, r3
 8004d34:	60a2      	str	r2, [r4, #8]
 8004d36:	6822      	ldr	r2, [r4, #0]
 8004d38:	4413      	add	r3, r2
 8004d3a:	6023      	str	r3, [r4, #0]
 8004d3c:	68bb      	ldr	r3, [r7, #8]
 8004d3e:	1b9e      	subs	r6, r3, r6
 8004d40:	60be      	str	r6, [r7, #8]
 8004d42:	2e00      	cmp	r6, #0
 8004d44:	d1cf      	bne.n	8004ce6 <__ssprint_r+0x72>
 8004d46:	2000      	movs	r0, #0
 8004d48:	6078      	str	r0, [r7, #4]
 8004d4a:	b003      	add	sp, #12
 8004d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004d50:	462a      	mov	r2, r5
 8004d52:	4648      	mov	r0, r9
 8004d54:	f000 f97e 	bl	8005054 <_realloc_r>
 8004d58:	4603      	mov	r3, r0
 8004d5a:	2800      	cmp	r0, #0
 8004d5c:	d1d6      	bne.n	8004d0c <__ssprint_r+0x98>
 8004d5e:	6921      	ldr	r1, [r4, #16]
 8004d60:	4648      	mov	r0, r9
 8004d62:	f000 f885 	bl	8004e70 <_free_r>
 8004d66:	e7b1      	b.n	8004ccc <__ssprint_r+0x58>

08004d68 <_calloc_r>:
 8004d68:	b510      	push	{r4, lr}
 8004d6a:	4351      	muls	r1, r2
 8004d6c:	f7ff fa7c 	bl	8004268 <_malloc_r>
 8004d70:	4604      	mov	r4, r0
 8004d72:	b198      	cbz	r0, 8004d9c <_calloc_r+0x34>
 8004d74:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8004d78:	f022 0203 	bic.w	r2, r2, #3
 8004d7c:	3a04      	subs	r2, #4
 8004d7e:	2a24      	cmp	r2, #36	; 0x24
 8004d80:	d81b      	bhi.n	8004dba <_calloc_r+0x52>
 8004d82:	2a13      	cmp	r2, #19
 8004d84:	d917      	bls.n	8004db6 <_calloc_r+0x4e>
 8004d86:	2100      	movs	r1, #0
 8004d88:	2a1b      	cmp	r2, #27
 8004d8a:	6001      	str	r1, [r0, #0]
 8004d8c:	6041      	str	r1, [r0, #4]
 8004d8e:	d807      	bhi.n	8004da0 <_calloc_r+0x38>
 8004d90:	f100 0308 	add.w	r3, r0, #8
 8004d94:	2200      	movs	r2, #0
 8004d96:	601a      	str	r2, [r3, #0]
 8004d98:	605a      	str	r2, [r3, #4]
 8004d9a:	609a      	str	r2, [r3, #8]
 8004d9c:	4620      	mov	r0, r4
 8004d9e:	bd10      	pop	{r4, pc}
 8004da0:	2a24      	cmp	r2, #36	; 0x24
 8004da2:	6081      	str	r1, [r0, #8]
 8004da4:	60c1      	str	r1, [r0, #12]
 8004da6:	bf11      	iteee	ne
 8004da8:	f100 0310 	addne.w	r3, r0, #16
 8004dac:	6101      	streq	r1, [r0, #16]
 8004dae:	f100 0318 	addeq.w	r3, r0, #24
 8004db2:	6141      	streq	r1, [r0, #20]
 8004db4:	e7ee      	b.n	8004d94 <_calloc_r+0x2c>
 8004db6:	4603      	mov	r3, r0
 8004db8:	e7ec      	b.n	8004d94 <_calloc_r+0x2c>
 8004dba:	2100      	movs	r1, #0
 8004dbc:	f000 f942 	bl	8005044 <memset>
 8004dc0:	e7ec      	b.n	8004d9c <_calloc_r+0x34>
	...

08004dc4 <_malloc_trim_r>:
 8004dc4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004dc8:	4f25      	ldr	r7, [pc, #148]	; (8004e60 <_malloc_trim_r+0x9c>)
 8004dca:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8004e6c <_malloc_trim_r+0xa8>
 8004dce:	4689      	mov	r9, r1
 8004dd0:	4606      	mov	r6, r0
 8004dd2:	f7ff fc63 	bl	800469c <__malloc_lock>
 8004dd6:	68bb      	ldr	r3, [r7, #8]
 8004dd8:	685d      	ldr	r5, [r3, #4]
 8004dda:	f1a8 0411 	sub.w	r4, r8, #17
 8004dde:	f025 0503 	bic.w	r5, r5, #3
 8004de2:	eba4 0409 	sub.w	r4, r4, r9
 8004de6:	442c      	add	r4, r5
 8004de8:	fbb4 f4f8 	udiv	r4, r4, r8
 8004dec:	3c01      	subs	r4, #1
 8004dee:	fb08 f404 	mul.w	r4, r8, r4
 8004df2:	4544      	cmp	r4, r8
 8004df4:	da05      	bge.n	8004e02 <_malloc_trim_r+0x3e>
 8004df6:	4630      	mov	r0, r6
 8004df8:	f7ff fc56 	bl	80046a8 <__malloc_unlock>
 8004dfc:	2000      	movs	r0, #0
 8004dfe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004e02:	2100      	movs	r1, #0
 8004e04:	4630      	mov	r0, r6
 8004e06:	f7ff ff25 	bl	8004c54 <_sbrk_r>
 8004e0a:	68bb      	ldr	r3, [r7, #8]
 8004e0c:	442b      	add	r3, r5
 8004e0e:	4298      	cmp	r0, r3
 8004e10:	d1f1      	bne.n	8004df6 <_malloc_trim_r+0x32>
 8004e12:	4261      	negs	r1, r4
 8004e14:	4630      	mov	r0, r6
 8004e16:	f7ff ff1d 	bl	8004c54 <_sbrk_r>
 8004e1a:	3001      	adds	r0, #1
 8004e1c:	d110      	bne.n	8004e40 <_malloc_trim_r+0x7c>
 8004e1e:	2100      	movs	r1, #0
 8004e20:	4630      	mov	r0, r6
 8004e22:	f7ff ff17 	bl	8004c54 <_sbrk_r>
 8004e26:	68ba      	ldr	r2, [r7, #8]
 8004e28:	1a83      	subs	r3, r0, r2
 8004e2a:	2b0f      	cmp	r3, #15
 8004e2c:	dde3      	ble.n	8004df6 <_malloc_trim_r+0x32>
 8004e2e:	490d      	ldr	r1, [pc, #52]	; (8004e64 <_malloc_trim_r+0xa0>)
 8004e30:	6809      	ldr	r1, [r1, #0]
 8004e32:	1a40      	subs	r0, r0, r1
 8004e34:	490c      	ldr	r1, [pc, #48]	; (8004e68 <_malloc_trim_r+0xa4>)
 8004e36:	f043 0301 	orr.w	r3, r3, #1
 8004e3a:	6008      	str	r0, [r1, #0]
 8004e3c:	6053      	str	r3, [r2, #4]
 8004e3e:	e7da      	b.n	8004df6 <_malloc_trim_r+0x32>
 8004e40:	68bb      	ldr	r3, [r7, #8]
 8004e42:	4a09      	ldr	r2, [pc, #36]	; (8004e68 <_malloc_trim_r+0xa4>)
 8004e44:	1b2d      	subs	r5, r5, r4
 8004e46:	f045 0501 	orr.w	r5, r5, #1
 8004e4a:	605d      	str	r5, [r3, #4]
 8004e4c:	6813      	ldr	r3, [r2, #0]
 8004e4e:	4630      	mov	r0, r6
 8004e50:	1b1c      	subs	r4, r3, r4
 8004e52:	6014      	str	r4, [r2, #0]
 8004e54:	f7ff fc28 	bl	80046a8 <__malloc_unlock>
 8004e58:	2001      	movs	r0, #1
 8004e5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004e5e:	bf00      	nop
 8004e60:	200000f8 	.word	0x200000f8
 8004e64:	20000500 	.word	0x20000500
 8004e68:	20000690 	.word	0x20000690
 8004e6c:	00000080 	.word	0x00000080

08004e70 <_free_r>:
 8004e70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e74:	4604      	mov	r4, r0
 8004e76:	4688      	mov	r8, r1
 8004e78:	2900      	cmp	r1, #0
 8004e7a:	f000 80ab 	beq.w	8004fd4 <_free_r+0x164>
 8004e7e:	f7ff fc0d 	bl	800469c <__malloc_lock>
 8004e82:	f858 2c04 	ldr.w	r2, [r8, #-4]
 8004e86:	4d54      	ldr	r5, [pc, #336]	; (8004fd8 <_free_r+0x168>)
 8004e88:	f022 0001 	bic.w	r0, r2, #1
 8004e8c:	f1a8 0308 	sub.w	r3, r8, #8
 8004e90:	181f      	adds	r7, r3, r0
 8004e92:	68a9      	ldr	r1, [r5, #8]
 8004e94:	687e      	ldr	r6, [r7, #4]
 8004e96:	428f      	cmp	r7, r1
 8004e98:	f026 0603 	bic.w	r6, r6, #3
 8004e9c:	f002 0201 	and.w	r2, r2, #1
 8004ea0:	d11b      	bne.n	8004eda <_free_r+0x6a>
 8004ea2:	4430      	add	r0, r6
 8004ea4:	b93a      	cbnz	r2, 8004eb6 <_free_r+0x46>
 8004ea6:	f858 2c08 	ldr.w	r2, [r8, #-8]
 8004eaa:	1a9b      	subs	r3, r3, r2
 8004eac:	4410      	add	r0, r2
 8004eae:	6899      	ldr	r1, [r3, #8]
 8004eb0:	68da      	ldr	r2, [r3, #12]
 8004eb2:	60ca      	str	r2, [r1, #12]
 8004eb4:	6091      	str	r1, [r2, #8]
 8004eb6:	f040 0201 	orr.w	r2, r0, #1
 8004eba:	605a      	str	r2, [r3, #4]
 8004ebc:	60ab      	str	r3, [r5, #8]
 8004ebe:	4b47      	ldr	r3, [pc, #284]	; (8004fdc <_free_r+0x16c>)
 8004ec0:	681b      	ldr	r3, [r3, #0]
 8004ec2:	4298      	cmp	r0, r3
 8004ec4:	d304      	bcc.n	8004ed0 <_free_r+0x60>
 8004ec6:	4b46      	ldr	r3, [pc, #280]	; (8004fe0 <_free_r+0x170>)
 8004ec8:	4620      	mov	r0, r4
 8004eca:	6819      	ldr	r1, [r3, #0]
 8004ecc:	f7ff ff7a 	bl	8004dc4 <_malloc_trim_r>
 8004ed0:	4620      	mov	r0, r4
 8004ed2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004ed6:	f7ff bbe7 	b.w	80046a8 <__malloc_unlock>
 8004eda:	607e      	str	r6, [r7, #4]
 8004edc:	2a00      	cmp	r2, #0
 8004ede:	d139      	bne.n	8004f54 <_free_r+0xe4>
 8004ee0:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8004ee4:	1a5b      	subs	r3, r3, r1
 8004ee6:	4408      	add	r0, r1
 8004ee8:	6899      	ldr	r1, [r3, #8]
 8004eea:	f105 0e08 	add.w	lr, r5, #8
 8004eee:	4571      	cmp	r1, lr
 8004ef0:	d032      	beq.n	8004f58 <_free_r+0xe8>
 8004ef2:	f8d3 e00c 	ldr.w	lr, [r3, #12]
 8004ef6:	f8c1 e00c 	str.w	lr, [r1, #12]
 8004efa:	f8ce 1008 	str.w	r1, [lr, #8]
 8004efe:	19b9      	adds	r1, r7, r6
 8004f00:	6849      	ldr	r1, [r1, #4]
 8004f02:	07c9      	lsls	r1, r1, #31
 8004f04:	d40a      	bmi.n	8004f1c <_free_r+0xac>
 8004f06:	4430      	add	r0, r6
 8004f08:	68b9      	ldr	r1, [r7, #8]
 8004f0a:	bb3a      	cbnz	r2, 8004f5c <_free_r+0xec>
 8004f0c:	4e35      	ldr	r6, [pc, #212]	; (8004fe4 <_free_r+0x174>)
 8004f0e:	42b1      	cmp	r1, r6
 8004f10:	d124      	bne.n	8004f5c <_free_r+0xec>
 8004f12:	616b      	str	r3, [r5, #20]
 8004f14:	612b      	str	r3, [r5, #16]
 8004f16:	2201      	movs	r2, #1
 8004f18:	60d9      	str	r1, [r3, #12]
 8004f1a:	6099      	str	r1, [r3, #8]
 8004f1c:	f040 0101 	orr.w	r1, r0, #1
 8004f20:	6059      	str	r1, [r3, #4]
 8004f22:	5018      	str	r0, [r3, r0]
 8004f24:	2a00      	cmp	r2, #0
 8004f26:	d1d3      	bne.n	8004ed0 <_free_r+0x60>
 8004f28:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8004f2c:	d21a      	bcs.n	8004f64 <_free_r+0xf4>
 8004f2e:	08c0      	lsrs	r0, r0, #3
 8004f30:	1081      	asrs	r1, r0, #2
 8004f32:	2201      	movs	r2, #1
 8004f34:	408a      	lsls	r2, r1
 8004f36:	6869      	ldr	r1, [r5, #4]
 8004f38:	3001      	adds	r0, #1
 8004f3a:	430a      	orrs	r2, r1
 8004f3c:	606a      	str	r2, [r5, #4]
 8004f3e:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 8004f42:	f855 1030 	ldr.w	r1, [r5, r0, lsl #3]
 8004f46:	6099      	str	r1, [r3, #8]
 8004f48:	3a08      	subs	r2, #8
 8004f4a:	60da      	str	r2, [r3, #12]
 8004f4c:	f845 3030 	str.w	r3, [r5, r0, lsl #3]
 8004f50:	60cb      	str	r3, [r1, #12]
 8004f52:	e7bd      	b.n	8004ed0 <_free_r+0x60>
 8004f54:	2200      	movs	r2, #0
 8004f56:	e7d2      	b.n	8004efe <_free_r+0x8e>
 8004f58:	2201      	movs	r2, #1
 8004f5a:	e7d0      	b.n	8004efe <_free_r+0x8e>
 8004f5c:	68fe      	ldr	r6, [r7, #12]
 8004f5e:	60ce      	str	r6, [r1, #12]
 8004f60:	60b1      	str	r1, [r6, #8]
 8004f62:	e7db      	b.n	8004f1c <_free_r+0xac>
 8004f64:	0a42      	lsrs	r2, r0, #9
 8004f66:	2a04      	cmp	r2, #4
 8004f68:	d813      	bhi.n	8004f92 <_free_r+0x122>
 8004f6a:	0982      	lsrs	r2, r0, #6
 8004f6c:	3238      	adds	r2, #56	; 0x38
 8004f6e:	1c51      	adds	r1, r2, #1
 8004f70:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 8004f74:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 8004f78:	428e      	cmp	r6, r1
 8004f7a:	d124      	bne.n	8004fc6 <_free_r+0x156>
 8004f7c:	2001      	movs	r0, #1
 8004f7e:	1092      	asrs	r2, r2, #2
 8004f80:	fa00 f202 	lsl.w	r2, r0, r2
 8004f84:	6868      	ldr	r0, [r5, #4]
 8004f86:	4302      	orrs	r2, r0
 8004f88:	606a      	str	r2, [r5, #4]
 8004f8a:	60de      	str	r6, [r3, #12]
 8004f8c:	6099      	str	r1, [r3, #8]
 8004f8e:	60b3      	str	r3, [r6, #8]
 8004f90:	e7de      	b.n	8004f50 <_free_r+0xe0>
 8004f92:	2a14      	cmp	r2, #20
 8004f94:	d801      	bhi.n	8004f9a <_free_r+0x12a>
 8004f96:	325b      	adds	r2, #91	; 0x5b
 8004f98:	e7e9      	b.n	8004f6e <_free_r+0xfe>
 8004f9a:	2a54      	cmp	r2, #84	; 0x54
 8004f9c:	d802      	bhi.n	8004fa4 <_free_r+0x134>
 8004f9e:	0b02      	lsrs	r2, r0, #12
 8004fa0:	326e      	adds	r2, #110	; 0x6e
 8004fa2:	e7e4      	b.n	8004f6e <_free_r+0xfe>
 8004fa4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8004fa8:	d802      	bhi.n	8004fb0 <_free_r+0x140>
 8004faa:	0bc2      	lsrs	r2, r0, #15
 8004fac:	3277      	adds	r2, #119	; 0x77
 8004fae:	e7de      	b.n	8004f6e <_free_r+0xfe>
 8004fb0:	f240 5154 	movw	r1, #1364	; 0x554
 8004fb4:	428a      	cmp	r2, r1
 8004fb6:	bf9a      	itte	ls
 8004fb8:	0c82      	lsrls	r2, r0, #18
 8004fba:	327c      	addls	r2, #124	; 0x7c
 8004fbc:	227e      	movhi	r2, #126	; 0x7e
 8004fbe:	e7d6      	b.n	8004f6e <_free_r+0xfe>
 8004fc0:	6889      	ldr	r1, [r1, #8]
 8004fc2:	428e      	cmp	r6, r1
 8004fc4:	d004      	beq.n	8004fd0 <_free_r+0x160>
 8004fc6:	684a      	ldr	r2, [r1, #4]
 8004fc8:	f022 0203 	bic.w	r2, r2, #3
 8004fcc:	4290      	cmp	r0, r2
 8004fce:	d3f7      	bcc.n	8004fc0 <_free_r+0x150>
 8004fd0:	68ce      	ldr	r6, [r1, #12]
 8004fd2:	e7da      	b.n	8004f8a <_free_r+0x11a>
 8004fd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004fd8:	200000f8 	.word	0x200000f8
 8004fdc:	20000504 	.word	0x20000504
 8004fe0:	200006c0 	.word	0x200006c0
 8004fe4:	20000100 	.word	0x20000100

08004fe8 <__retarget_lock_acquire_recursive>:
 8004fe8:	4770      	bx	lr

08004fea <__retarget_lock_release_recursive>:
 8004fea:	4770      	bx	lr

08004fec <__ascii_mbtowc>:
 8004fec:	b082      	sub	sp, #8
 8004fee:	b901      	cbnz	r1, 8004ff2 <__ascii_mbtowc+0x6>
 8004ff0:	a901      	add	r1, sp, #4
 8004ff2:	b142      	cbz	r2, 8005006 <__ascii_mbtowc+0x1a>
 8004ff4:	b14b      	cbz	r3, 800500a <__ascii_mbtowc+0x1e>
 8004ff6:	7813      	ldrb	r3, [r2, #0]
 8004ff8:	600b      	str	r3, [r1, #0]
 8004ffa:	7812      	ldrb	r2, [r2, #0]
 8004ffc:	1c10      	adds	r0, r2, #0
 8004ffe:	bf18      	it	ne
 8005000:	2001      	movne	r0, #1
 8005002:	b002      	add	sp, #8
 8005004:	4770      	bx	lr
 8005006:	4610      	mov	r0, r2
 8005008:	e7fb      	b.n	8005002 <__ascii_mbtowc+0x16>
 800500a:	f06f 0001 	mvn.w	r0, #1
 800500e:	e7f8      	b.n	8005002 <__ascii_mbtowc+0x16>

08005010 <memmove>:
 8005010:	4288      	cmp	r0, r1
 8005012:	b510      	push	{r4, lr}
 8005014:	eb01 0302 	add.w	r3, r1, r2
 8005018:	d803      	bhi.n	8005022 <memmove+0x12>
 800501a:	1e42      	subs	r2, r0, #1
 800501c:	4299      	cmp	r1, r3
 800501e:	d10c      	bne.n	800503a <memmove+0x2a>
 8005020:	bd10      	pop	{r4, pc}
 8005022:	4298      	cmp	r0, r3
 8005024:	d2f9      	bcs.n	800501a <memmove+0xa>
 8005026:	1881      	adds	r1, r0, r2
 8005028:	1ad2      	subs	r2, r2, r3
 800502a:	42d3      	cmn	r3, r2
 800502c:	d100      	bne.n	8005030 <memmove+0x20>
 800502e:	bd10      	pop	{r4, pc}
 8005030:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005034:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8005038:	e7f7      	b.n	800502a <memmove+0x1a>
 800503a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800503e:	f802 4f01 	strb.w	r4, [r2, #1]!
 8005042:	e7eb      	b.n	800501c <memmove+0xc>

08005044 <memset>:
 8005044:	4402      	add	r2, r0
 8005046:	4603      	mov	r3, r0
 8005048:	4293      	cmp	r3, r2
 800504a:	d100      	bne.n	800504e <memset+0xa>
 800504c:	4770      	bx	lr
 800504e:	f803 1b01 	strb.w	r1, [r3], #1
 8005052:	e7f9      	b.n	8005048 <memset+0x4>

08005054 <_realloc_r>:
 8005054:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005058:	4682      	mov	sl, r0
 800505a:	460c      	mov	r4, r1
 800505c:	b929      	cbnz	r1, 800506a <_realloc_r+0x16>
 800505e:	4611      	mov	r1, r2
 8005060:	b003      	add	sp, #12
 8005062:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005066:	f7ff b8ff 	b.w	8004268 <_malloc_r>
 800506a:	9201      	str	r2, [sp, #4]
 800506c:	f7ff fb16 	bl	800469c <__malloc_lock>
 8005070:	9a01      	ldr	r2, [sp, #4]
 8005072:	f854 5c04 	ldr.w	r5, [r4, #-4]
 8005076:	f102 080b 	add.w	r8, r2, #11
 800507a:	f1b8 0f16 	cmp.w	r8, #22
 800507e:	f1a4 0908 	sub.w	r9, r4, #8
 8005082:	f025 0603 	bic.w	r6, r5, #3
 8005086:	d90a      	bls.n	800509e <_realloc_r+0x4a>
 8005088:	f038 0807 	bics.w	r8, r8, #7
 800508c:	d509      	bpl.n	80050a2 <_realloc_r+0x4e>
 800508e:	230c      	movs	r3, #12
 8005090:	f8ca 3000 	str.w	r3, [sl]
 8005094:	2700      	movs	r7, #0
 8005096:	4638      	mov	r0, r7
 8005098:	b003      	add	sp, #12
 800509a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800509e:	f04f 0810 	mov.w	r8, #16
 80050a2:	4590      	cmp	r8, r2
 80050a4:	d3f3      	bcc.n	800508e <_realloc_r+0x3a>
 80050a6:	45b0      	cmp	r8, r6
 80050a8:	f340 8145 	ble.w	8005336 <_realloc_r+0x2e2>
 80050ac:	4ba8      	ldr	r3, [pc, #672]	; (8005350 <_realloc_r+0x2fc>)
 80050ae:	f8d3 e008 	ldr.w	lr, [r3, #8]
 80050b2:	eb09 0106 	add.w	r1, r9, r6
 80050b6:	4571      	cmp	r1, lr
 80050b8:	469b      	mov	fp, r3
 80050ba:	684b      	ldr	r3, [r1, #4]
 80050bc:	d005      	beq.n	80050ca <_realloc_r+0x76>
 80050be:	f023 0001 	bic.w	r0, r3, #1
 80050c2:	4408      	add	r0, r1
 80050c4:	6840      	ldr	r0, [r0, #4]
 80050c6:	07c7      	lsls	r7, r0, #31
 80050c8:	d447      	bmi.n	800515a <_realloc_r+0x106>
 80050ca:	f023 0303 	bic.w	r3, r3, #3
 80050ce:	4571      	cmp	r1, lr
 80050d0:	eb06 0703 	add.w	r7, r6, r3
 80050d4:	d119      	bne.n	800510a <_realloc_r+0xb6>
 80050d6:	f108 0010 	add.w	r0, r8, #16
 80050da:	4287      	cmp	r7, r0
 80050dc:	db3f      	blt.n	800515e <_realloc_r+0x10a>
 80050de:	eb09 0308 	add.w	r3, r9, r8
 80050e2:	eba7 0708 	sub.w	r7, r7, r8
 80050e6:	f047 0701 	orr.w	r7, r7, #1
 80050ea:	f8cb 3008 	str.w	r3, [fp, #8]
 80050ee:	605f      	str	r7, [r3, #4]
 80050f0:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80050f4:	f003 0301 	and.w	r3, r3, #1
 80050f8:	ea43 0308 	orr.w	r3, r3, r8
 80050fc:	f844 3c04 	str.w	r3, [r4, #-4]
 8005100:	4650      	mov	r0, sl
 8005102:	f7ff fad1 	bl	80046a8 <__malloc_unlock>
 8005106:	4627      	mov	r7, r4
 8005108:	e7c5      	b.n	8005096 <_realloc_r+0x42>
 800510a:	45b8      	cmp	r8, r7
 800510c:	dc27      	bgt.n	800515e <_realloc_r+0x10a>
 800510e:	68cb      	ldr	r3, [r1, #12]
 8005110:	688a      	ldr	r2, [r1, #8]
 8005112:	60d3      	str	r3, [r2, #12]
 8005114:	609a      	str	r2, [r3, #8]
 8005116:	eba7 0008 	sub.w	r0, r7, r8
 800511a:	280f      	cmp	r0, #15
 800511c:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8005120:	eb09 0207 	add.w	r2, r9, r7
 8005124:	f240 8109 	bls.w	800533a <_realloc_r+0x2e6>
 8005128:	eb09 0108 	add.w	r1, r9, r8
 800512c:	f003 0301 	and.w	r3, r3, #1
 8005130:	ea43 0308 	orr.w	r3, r3, r8
 8005134:	f040 0001 	orr.w	r0, r0, #1
 8005138:	f8c9 3004 	str.w	r3, [r9, #4]
 800513c:	6048      	str	r0, [r1, #4]
 800513e:	6853      	ldr	r3, [r2, #4]
 8005140:	f043 0301 	orr.w	r3, r3, #1
 8005144:	6053      	str	r3, [r2, #4]
 8005146:	3108      	adds	r1, #8
 8005148:	4650      	mov	r0, sl
 800514a:	f7ff fe91 	bl	8004e70 <_free_r>
 800514e:	4650      	mov	r0, sl
 8005150:	f7ff faaa 	bl	80046a8 <__malloc_unlock>
 8005154:	f109 0708 	add.w	r7, r9, #8
 8005158:	e79d      	b.n	8005096 <_realloc_r+0x42>
 800515a:	2300      	movs	r3, #0
 800515c:	4619      	mov	r1, r3
 800515e:	07e8      	lsls	r0, r5, #31
 8005160:	f100 8084 	bmi.w	800526c <_realloc_r+0x218>
 8005164:	f854 5c08 	ldr.w	r5, [r4, #-8]
 8005168:	eba9 0505 	sub.w	r5, r9, r5
 800516c:	6868      	ldr	r0, [r5, #4]
 800516e:	f020 0003 	bic.w	r0, r0, #3
 8005172:	4430      	add	r0, r6
 8005174:	2900      	cmp	r1, #0
 8005176:	d076      	beq.n	8005266 <_realloc_r+0x212>
 8005178:	4571      	cmp	r1, lr
 800517a:	d150      	bne.n	800521e <_realloc_r+0x1ca>
 800517c:	4403      	add	r3, r0
 800517e:	f108 0110 	add.w	r1, r8, #16
 8005182:	428b      	cmp	r3, r1
 8005184:	db6f      	blt.n	8005266 <_realloc_r+0x212>
 8005186:	462f      	mov	r7, r5
 8005188:	68ea      	ldr	r2, [r5, #12]
 800518a:	f857 1f08 	ldr.w	r1, [r7, #8]!
 800518e:	60ca      	str	r2, [r1, #12]
 8005190:	6091      	str	r1, [r2, #8]
 8005192:	1f32      	subs	r2, r6, #4
 8005194:	2a24      	cmp	r2, #36	; 0x24
 8005196:	d83b      	bhi.n	8005210 <_realloc_r+0x1bc>
 8005198:	2a13      	cmp	r2, #19
 800519a:	d936      	bls.n	800520a <_realloc_r+0x1b6>
 800519c:	6821      	ldr	r1, [r4, #0]
 800519e:	60a9      	str	r1, [r5, #8]
 80051a0:	6861      	ldr	r1, [r4, #4]
 80051a2:	60e9      	str	r1, [r5, #12]
 80051a4:	2a1b      	cmp	r2, #27
 80051a6:	d81c      	bhi.n	80051e2 <_realloc_r+0x18e>
 80051a8:	f105 0210 	add.w	r2, r5, #16
 80051ac:	f104 0108 	add.w	r1, r4, #8
 80051b0:	6808      	ldr	r0, [r1, #0]
 80051b2:	6010      	str	r0, [r2, #0]
 80051b4:	6848      	ldr	r0, [r1, #4]
 80051b6:	6050      	str	r0, [r2, #4]
 80051b8:	6889      	ldr	r1, [r1, #8]
 80051ba:	6091      	str	r1, [r2, #8]
 80051bc:	eb05 0208 	add.w	r2, r5, r8
 80051c0:	eba3 0308 	sub.w	r3, r3, r8
 80051c4:	f043 0301 	orr.w	r3, r3, #1
 80051c8:	f8cb 2008 	str.w	r2, [fp, #8]
 80051cc:	6053      	str	r3, [r2, #4]
 80051ce:	686b      	ldr	r3, [r5, #4]
 80051d0:	f003 0301 	and.w	r3, r3, #1
 80051d4:	ea43 0308 	orr.w	r3, r3, r8
 80051d8:	606b      	str	r3, [r5, #4]
 80051da:	4650      	mov	r0, sl
 80051dc:	f7ff fa64 	bl	80046a8 <__malloc_unlock>
 80051e0:	e759      	b.n	8005096 <_realloc_r+0x42>
 80051e2:	68a1      	ldr	r1, [r4, #8]
 80051e4:	6129      	str	r1, [r5, #16]
 80051e6:	68e1      	ldr	r1, [r4, #12]
 80051e8:	6169      	str	r1, [r5, #20]
 80051ea:	2a24      	cmp	r2, #36	; 0x24
 80051ec:	bf01      	itttt	eq
 80051ee:	6922      	ldreq	r2, [r4, #16]
 80051f0:	61aa      	streq	r2, [r5, #24]
 80051f2:	6960      	ldreq	r0, [r4, #20]
 80051f4:	61e8      	streq	r0, [r5, #28]
 80051f6:	bf19      	ittee	ne
 80051f8:	f105 0218 	addne.w	r2, r5, #24
 80051fc:	f104 0110 	addne.w	r1, r4, #16
 8005200:	f105 0220 	addeq.w	r2, r5, #32
 8005204:	f104 0118 	addeq.w	r1, r4, #24
 8005208:	e7d2      	b.n	80051b0 <_realloc_r+0x15c>
 800520a:	463a      	mov	r2, r7
 800520c:	4621      	mov	r1, r4
 800520e:	e7cf      	b.n	80051b0 <_realloc_r+0x15c>
 8005210:	4621      	mov	r1, r4
 8005212:	4638      	mov	r0, r7
 8005214:	9301      	str	r3, [sp, #4]
 8005216:	f7ff fefb 	bl	8005010 <memmove>
 800521a:	9b01      	ldr	r3, [sp, #4]
 800521c:	e7ce      	b.n	80051bc <_realloc_r+0x168>
 800521e:	18c7      	adds	r7, r0, r3
 8005220:	45b8      	cmp	r8, r7
 8005222:	dc20      	bgt.n	8005266 <_realloc_r+0x212>
 8005224:	68cb      	ldr	r3, [r1, #12]
 8005226:	688a      	ldr	r2, [r1, #8]
 8005228:	60d3      	str	r3, [r2, #12]
 800522a:	609a      	str	r2, [r3, #8]
 800522c:	4628      	mov	r0, r5
 800522e:	68eb      	ldr	r3, [r5, #12]
 8005230:	f850 2f08 	ldr.w	r2, [r0, #8]!
 8005234:	60d3      	str	r3, [r2, #12]
 8005236:	609a      	str	r2, [r3, #8]
 8005238:	1f32      	subs	r2, r6, #4
 800523a:	2a24      	cmp	r2, #36	; 0x24
 800523c:	d842      	bhi.n	80052c4 <_realloc_r+0x270>
 800523e:	2a13      	cmp	r2, #19
 8005240:	d93e      	bls.n	80052c0 <_realloc_r+0x26c>
 8005242:	6823      	ldr	r3, [r4, #0]
 8005244:	60ab      	str	r3, [r5, #8]
 8005246:	6863      	ldr	r3, [r4, #4]
 8005248:	60eb      	str	r3, [r5, #12]
 800524a:	2a1b      	cmp	r2, #27
 800524c:	d824      	bhi.n	8005298 <_realloc_r+0x244>
 800524e:	f105 0010 	add.w	r0, r5, #16
 8005252:	f104 0308 	add.w	r3, r4, #8
 8005256:	681a      	ldr	r2, [r3, #0]
 8005258:	6002      	str	r2, [r0, #0]
 800525a:	685a      	ldr	r2, [r3, #4]
 800525c:	6042      	str	r2, [r0, #4]
 800525e:	689b      	ldr	r3, [r3, #8]
 8005260:	6083      	str	r3, [r0, #8]
 8005262:	46a9      	mov	r9, r5
 8005264:	e757      	b.n	8005116 <_realloc_r+0xc2>
 8005266:	4580      	cmp	r8, r0
 8005268:	4607      	mov	r7, r0
 800526a:	dddf      	ble.n	800522c <_realloc_r+0x1d8>
 800526c:	4611      	mov	r1, r2
 800526e:	4650      	mov	r0, sl
 8005270:	f7fe fffa 	bl	8004268 <_malloc_r>
 8005274:	4607      	mov	r7, r0
 8005276:	2800      	cmp	r0, #0
 8005278:	d0af      	beq.n	80051da <_realloc_r+0x186>
 800527a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800527e:	f023 0301 	bic.w	r3, r3, #1
 8005282:	f1a0 0208 	sub.w	r2, r0, #8
 8005286:	444b      	add	r3, r9
 8005288:	429a      	cmp	r2, r3
 800528a:	d11f      	bne.n	80052cc <_realloc_r+0x278>
 800528c:	f850 7c04 	ldr.w	r7, [r0, #-4]
 8005290:	f027 0703 	bic.w	r7, r7, #3
 8005294:	4437      	add	r7, r6
 8005296:	e73e      	b.n	8005116 <_realloc_r+0xc2>
 8005298:	68a3      	ldr	r3, [r4, #8]
 800529a:	612b      	str	r3, [r5, #16]
 800529c:	68e3      	ldr	r3, [r4, #12]
 800529e:	616b      	str	r3, [r5, #20]
 80052a0:	2a24      	cmp	r2, #36	; 0x24
 80052a2:	bf01      	itttt	eq
 80052a4:	6923      	ldreq	r3, [r4, #16]
 80052a6:	61ab      	streq	r3, [r5, #24]
 80052a8:	6962      	ldreq	r2, [r4, #20]
 80052aa:	61ea      	streq	r2, [r5, #28]
 80052ac:	bf19      	ittee	ne
 80052ae:	f105 0018 	addne.w	r0, r5, #24
 80052b2:	f104 0310 	addne.w	r3, r4, #16
 80052b6:	f105 0020 	addeq.w	r0, r5, #32
 80052ba:	f104 0318 	addeq.w	r3, r4, #24
 80052be:	e7ca      	b.n	8005256 <_realloc_r+0x202>
 80052c0:	4623      	mov	r3, r4
 80052c2:	e7c8      	b.n	8005256 <_realloc_r+0x202>
 80052c4:	4621      	mov	r1, r4
 80052c6:	f7ff fea3 	bl	8005010 <memmove>
 80052ca:	e7ca      	b.n	8005262 <_realloc_r+0x20e>
 80052cc:	1f32      	subs	r2, r6, #4
 80052ce:	2a24      	cmp	r2, #36	; 0x24
 80052d0:	d82d      	bhi.n	800532e <_realloc_r+0x2da>
 80052d2:	2a13      	cmp	r2, #19
 80052d4:	d928      	bls.n	8005328 <_realloc_r+0x2d4>
 80052d6:	6823      	ldr	r3, [r4, #0]
 80052d8:	6003      	str	r3, [r0, #0]
 80052da:	6863      	ldr	r3, [r4, #4]
 80052dc:	6043      	str	r3, [r0, #4]
 80052de:	2a1b      	cmp	r2, #27
 80052e0:	d80e      	bhi.n	8005300 <_realloc_r+0x2ac>
 80052e2:	f100 0308 	add.w	r3, r0, #8
 80052e6:	f104 0208 	add.w	r2, r4, #8
 80052ea:	6811      	ldr	r1, [r2, #0]
 80052ec:	6019      	str	r1, [r3, #0]
 80052ee:	6851      	ldr	r1, [r2, #4]
 80052f0:	6059      	str	r1, [r3, #4]
 80052f2:	6892      	ldr	r2, [r2, #8]
 80052f4:	609a      	str	r2, [r3, #8]
 80052f6:	4621      	mov	r1, r4
 80052f8:	4650      	mov	r0, sl
 80052fa:	f7ff fdb9 	bl	8004e70 <_free_r>
 80052fe:	e76c      	b.n	80051da <_realloc_r+0x186>
 8005300:	68a3      	ldr	r3, [r4, #8]
 8005302:	6083      	str	r3, [r0, #8]
 8005304:	68e3      	ldr	r3, [r4, #12]
 8005306:	60c3      	str	r3, [r0, #12]
 8005308:	2a24      	cmp	r2, #36	; 0x24
 800530a:	bf01      	itttt	eq
 800530c:	6923      	ldreq	r3, [r4, #16]
 800530e:	6103      	streq	r3, [r0, #16]
 8005310:	6961      	ldreq	r1, [r4, #20]
 8005312:	6141      	streq	r1, [r0, #20]
 8005314:	bf19      	ittee	ne
 8005316:	f100 0310 	addne.w	r3, r0, #16
 800531a:	f104 0210 	addne.w	r2, r4, #16
 800531e:	f100 0318 	addeq.w	r3, r0, #24
 8005322:	f104 0218 	addeq.w	r2, r4, #24
 8005326:	e7e0      	b.n	80052ea <_realloc_r+0x296>
 8005328:	4603      	mov	r3, r0
 800532a:	4622      	mov	r2, r4
 800532c:	e7dd      	b.n	80052ea <_realloc_r+0x296>
 800532e:	4621      	mov	r1, r4
 8005330:	f7ff fe6e 	bl	8005010 <memmove>
 8005334:	e7df      	b.n	80052f6 <_realloc_r+0x2a2>
 8005336:	4637      	mov	r7, r6
 8005338:	e6ed      	b.n	8005116 <_realloc_r+0xc2>
 800533a:	f003 0301 	and.w	r3, r3, #1
 800533e:	431f      	orrs	r7, r3
 8005340:	f8c9 7004 	str.w	r7, [r9, #4]
 8005344:	6853      	ldr	r3, [r2, #4]
 8005346:	f043 0301 	orr.w	r3, r3, #1
 800534a:	6053      	str	r3, [r2, #4]
 800534c:	e6ff      	b.n	800514e <_realloc_r+0xfa>
 800534e:	bf00      	nop
 8005350:	200000f8 	.word	0x200000f8

08005354 <__ascii_wctomb>:
 8005354:	b149      	cbz	r1, 800536a <__ascii_wctomb+0x16>
 8005356:	2aff      	cmp	r2, #255	; 0xff
 8005358:	bf85      	ittet	hi
 800535a:	238a      	movhi	r3, #138	; 0x8a
 800535c:	6003      	strhi	r3, [r0, #0]
 800535e:	700a      	strbls	r2, [r1, #0]
 8005360:	f04f 30ff 	movhi.w	r0, #4294967295
 8005364:	bf98      	it	ls
 8005366:	2001      	movls	r0, #1
 8005368:	4770      	bx	lr
 800536a:	4608      	mov	r0, r1
 800536c:	4770      	bx	lr
	...

08005370 <sin>:
 8005370:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005372:	ec51 0b10 	vmov	r0, r1, d0
 8005376:	4a20      	ldr	r2, [pc, #128]	; (80053f8 <sin+0x88>)
 8005378:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800537c:	4293      	cmp	r3, r2
 800537e:	dc07      	bgt.n	8005390 <sin+0x20>
 8005380:	ed9f 1b1b 	vldr	d1, [pc, #108]	; 80053f0 <sin+0x80>
 8005384:	2000      	movs	r0, #0
 8005386:	f000 fe67 	bl	8006058 <__kernel_sin>
 800538a:	ec51 0b10 	vmov	r0, r1, d0
 800538e:	e007      	b.n	80053a0 <sin+0x30>
 8005390:	4a1a      	ldr	r2, [pc, #104]	; (80053fc <sin+0x8c>)
 8005392:	4293      	cmp	r3, r2
 8005394:	dd09      	ble.n	80053aa <sin+0x3a>
 8005396:	ee10 2a10 	vmov	r2, s0
 800539a:	460b      	mov	r3, r1
 800539c:	f7fa ff74 	bl	8000288 <__aeabi_dsub>
 80053a0:	ec41 0b10 	vmov	d0, r0, r1
 80053a4:	b005      	add	sp, #20
 80053a6:	f85d fb04 	ldr.w	pc, [sp], #4
 80053aa:	4668      	mov	r0, sp
 80053ac:	f000 f828 	bl	8005400 <__ieee754_rem_pio2>
 80053b0:	f000 0003 	and.w	r0, r0, #3
 80053b4:	2801      	cmp	r0, #1
 80053b6:	ed9d 1b02 	vldr	d1, [sp, #8]
 80053ba:	ed9d 0b00 	vldr	d0, [sp]
 80053be:	d004      	beq.n	80053ca <sin+0x5a>
 80053c0:	2802      	cmp	r0, #2
 80053c2:	d005      	beq.n	80053d0 <sin+0x60>
 80053c4:	b970      	cbnz	r0, 80053e4 <sin+0x74>
 80053c6:	2001      	movs	r0, #1
 80053c8:	e7dd      	b.n	8005386 <sin+0x16>
 80053ca:	f000 fa0d 	bl	80057e8 <__kernel_cos>
 80053ce:	e7dc      	b.n	800538a <sin+0x1a>
 80053d0:	2001      	movs	r0, #1
 80053d2:	f000 fe41 	bl	8006058 <__kernel_sin>
 80053d6:	ec53 2b10 	vmov	r2, r3, d0
 80053da:	ee10 0a10 	vmov	r0, s0
 80053de:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 80053e2:	e7dd      	b.n	80053a0 <sin+0x30>
 80053e4:	f000 fa00 	bl	80057e8 <__kernel_cos>
 80053e8:	e7f5      	b.n	80053d6 <sin+0x66>
 80053ea:	bf00      	nop
 80053ec:	f3af 8000 	nop.w
	...
 80053f8:	3fe921fb 	.word	0x3fe921fb
 80053fc:	7fefffff 	.word	0x7fefffff

08005400 <__ieee754_rem_pio2>:
 8005400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005404:	ec57 6b10 	vmov	r6, r7, d0
 8005408:	4bc3      	ldr	r3, [pc, #780]	; (8005718 <__ieee754_rem_pio2+0x318>)
 800540a:	b08d      	sub	sp, #52	; 0x34
 800540c:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8005410:	4598      	cmp	r8, r3
 8005412:	4604      	mov	r4, r0
 8005414:	9704      	str	r7, [sp, #16]
 8005416:	dc07      	bgt.n	8005428 <__ieee754_rem_pio2+0x28>
 8005418:	2200      	movs	r2, #0
 800541a:	2300      	movs	r3, #0
 800541c:	ed84 0b00 	vstr	d0, [r4]
 8005420:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8005424:	2500      	movs	r5, #0
 8005426:	e027      	b.n	8005478 <__ieee754_rem_pio2+0x78>
 8005428:	4bbc      	ldr	r3, [pc, #752]	; (800571c <__ieee754_rem_pio2+0x31c>)
 800542a:	4598      	cmp	r8, r3
 800542c:	dc75      	bgt.n	800551a <__ieee754_rem_pio2+0x11a>
 800542e:	9b04      	ldr	r3, [sp, #16]
 8005430:	4dbb      	ldr	r5, [pc, #748]	; (8005720 <__ieee754_rem_pio2+0x320>)
 8005432:	2b00      	cmp	r3, #0
 8005434:	ee10 0a10 	vmov	r0, s0
 8005438:	a3a9      	add	r3, pc, #676	; (adr r3, 80056e0 <__ieee754_rem_pio2+0x2e0>)
 800543a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800543e:	4639      	mov	r1, r7
 8005440:	dd36      	ble.n	80054b0 <__ieee754_rem_pio2+0xb0>
 8005442:	f7fa ff21 	bl	8000288 <__aeabi_dsub>
 8005446:	45a8      	cmp	r8, r5
 8005448:	4606      	mov	r6, r0
 800544a:	460f      	mov	r7, r1
 800544c:	d018      	beq.n	8005480 <__ieee754_rem_pio2+0x80>
 800544e:	a3a6      	add	r3, pc, #664	; (adr r3, 80056e8 <__ieee754_rem_pio2+0x2e8>)
 8005450:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005454:	f7fa ff18 	bl	8000288 <__aeabi_dsub>
 8005458:	4602      	mov	r2, r0
 800545a:	460b      	mov	r3, r1
 800545c:	e9c4 2300 	strd	r2, r3, [r4]
 8005460:	4630      	mov	r0, r6
 8005462:	4639      	mov	r1, r7
 8005464:	f7fa ff10 	bl	8000288 <__aeabi_dsub>
 8005468:	a39f      	add	r3, pc, #636	; (adr r3, 80056e8 <__ieee754_rem_pio2+0x2e8>)
 800546a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800546e:	f7fa ff0b 	bl	8000288 <__aeabi_dsub>
 8005472:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8005476:	2501      	movs	r5, #1
 8005478:	4628      	mov	r0, r5
 800547a:	b00d      	add	sp, #52	; 0x34
 800547c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005480:	a39b      	add	r3, pc, #620	; (adr r3, 80056f0 <__ieee754_rem_pio2+0x2f0>)
 8005482:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005486:	f7fa feff 	bl	8000288 <__aeabi_dsub>
 800548a:	a39b      	add	r3, pc, #620	; (adr r3, 80056f8 <__ieee754_rem_pio2+0x2f8>)
 800548c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005490:	4606      	mov	r6, r0
 8005492:	460f      	mov	r7, r1
 8005494:	f7fa fef8 	bl	8000288 <__aeabi_dsub>
 8005498:	4602      	mov	r2, r0
 800549a:	460b      	mov	r3, r1
 800549c:	e9c4 2300 	strd	r2, r3, [r4]
 80054a0:	4630      	mov	r0, r6
 80054a2:	4639      	mov	r1, r7
 80054a4:	f7fa fef0 	bl	8000288 <__aeabi_dsub>
 80054a8:	a393      	add	r3, pc, #588	; (adr r3, 80056f8 <__ieee754_rem_pio2+0x2f8>)
 80054aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054ae:	e7de      	b.n	800546e <__ieee754_rem_pio2+0x6e>
 80054b0:	f7fa feec 	bl	800028c <__adddf3>
 80054b4:	45a8      	cmp	r8, r5
 80054b6:	4606      	mov	r6, r0
 80054b8:	460f      	mov	r7, r1
 80054ba:	d016      	beq.n	80054ea <__ieee754_rem_pio2+0xea>
 80054bc:	a38a      	add	r3, pc, #552	; (adr r3, 80056e8 <__ieee754_rem_pio2+0x2e8>)
 80054be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054c2:	f7fa fee3 	bl	800028c <__adddf3>
 80054c6:	4602      	mov	r2, r0
 80054c8:	460b      	mov	r3, r1
 80054ca:	e9c4 2300 	strd	r2, r3, [r4]
 80054ce:	4630      	mov	r0, r6
 80054d0:	4639      	mov	r1, r7
 80054d2:	f7fa fed9 	bl	8000288 <__aeabi_dsub>
 80054d6:	a384      	add	r3, pc, #528	; (adr r3, 80056e8 <__ieee754_rem_pio2+0x2e8>)
 80054d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054dc:	f7fa fed6 	bl	800028c <__adddf3>
 80054e0:	f04f 35ff 	mov.w	r5, #4294967295
 80054e4:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80054e8:	e7c6      	b.n	8005478 <__ieee754_rem_pio2+0x78>
 80054ea:	a381      	add	r3, pc, #516	; (adr r3, 80056f0 <__ieee754_rem_pio2+0x2f0>)
 80054ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054f0:	f7fa fecc 	bl	800028c <__adddf3>
 80054f4:	a380      	add	r3, pc, #512	; (adr r3, 80056f8 <__ieee754_rem_pio2+0x2f8>)
 80054f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054fa:	4606      	mov	r6, r0
 80054fc:	460f      	mov	r7, r1
 80054fe:	f7fa fec5 	bl	800028c <__adddf3>
 8005502:	4602      	mov	r2, r0
 8005504:	460b      	mov	r3, r1
 8005506:	e9c4 2300 	strd	r2, r3, [r4]
 800550a:	4630      	mov	r0, r6
 800550c:	4639      	mov	r1, r7
 800550e:	f7fa febb 	bl	8000288 <__aeabi_dsub>
 8005512:	a379      	add	r3, pc, #484	; (adr r3, 80056f8 <__ieee754_rem_pio2+0x2f8>)
 8005514:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005518:	e7e0      	b.n	80054dc <__ieee754_rem_pio2+0xdc>
 800551a:	4b82      	ldr	r3, [pc, #520]	; (8005724 <__ieee754_rem_pio2+0x324>)
 800551c:	4598      	cmp	r8, r3
 800551e:	f300 80d0 	bgt.w	80056c2 <__ieee754_rem_pio2+0x2c2>
 8005522:	f000 fe53 	bl	80061cc <fabs>
 8005526:	ec57 6b10 	vmov	r6, r7, d0
 800552a:	ee10 0a10 	vmov	r0, s0
 800552e:	a374      	add	r3, pc, #464	; (adr r3, 8005700 <__ieee754_rem_pio2+0x300>)
 8005530:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005534:	4639      	mov	r1, r7
 8005536:	f7fb f85b 	bl	80005f0 <__aeabi_dmul>
 800553a:	2200      	movs	r2, #0
 800553c:	4b7a      	ldr	r3, [pc, #488]	; (8005728 <__ieee754_rem_pio2+0x328>)
 800553e:	f7fa fea5 	bl	800028c <__adddf3>
 8005542:	f7fb fb05 	bl	8000b50 <__aeabi_d2iz>
 8005546:	4605      	mov	r5, r0
 8005548:	f7fa ffec 	bl	8000524 <__aeabi_i2d>
 800554c:	a364      	add	r3, pc, #400	; (adr r3, 80056e0 <__ieee754_rem_pio2+0x2e0>)
 800554e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005552:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005556:	f7fb f84b 	bl	80005f0 <__aeabi_dmul>
 800555a:	4602      	mov	r2, r0
 800555c:	460b      	mov	r3, r1
 800555e:	4630      	mov	r0, r6
 8005560:	4639      	mov	r1, r7
 8005562:	f7fa fe91 	bl	8000288 <__aeabi_dsub>
 8005566:	a360      	add	r3, pc, #384	; (adr r3, 80056e8 <__ieee754_rem_pio2+0x2e8>)
 8005568:	e9d3 2300 	ldrd	r2, r3, [r3]
 800556c:	4682      	mov	sl, r0
 800556e:	468b      	mov	fp, r1
 8005570:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005574:	f7fb f83c 	bl	80005f0 <__aeabi_dmul>
 8005578:	2d1f      	cmp	r5, #31
 800557a:	4606      	mov	r6, r0
 800557c:	460f      	mov	r7, r1
 800557e:	dc2a      	bgt.n	80055d6 <__ieee754_rem_pio2+0x1d6>
 8005580:	1e6a      	subs	r2, r5, #1
 8005582:	4b6a      	ldr	r3, [pc, #424]	; (800572c <__ieee754_rem_pio2+0x32c>)
 8005584:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005588:	4598      	cmp	r8, r3
 800558a:	d024      	beq.n	80055d6 <__ieee754_rem_pio2+0x1d6>
 800558c:	4632      	mov	r2, r6
 800558e:	463b      	mov	r3, r7
 8005590:	4650      	mov	r0, sl
 8005592:	4659      	mov	r1, fp
 8005594:	f7fa fe78 	bl	8000288 <__aeabi_dsub>
 8005598:	e9c4 0100 	strd	r0, r1, [r4]
 800559c:	e9d4 8900 	ldrd	r8, r9, [r4]
 80055a0:	4650      	mov	r0, sl
 80055a2:	4642      	mov	r2, r8
 80055a4:	464b      	mov	r3, r9
 80055a6:	4659      	mov	r1, fp
 80055a8:	f7fa fe6e 	bl	8000288 <__aeabi_dsub>
 80055ac:	463b      	mov	r3, r7
 80055ae:	4632      	mov	r2, r6
 80055b0:	f7fa fe6a 	bl	8000288 <__aeabi_dsub>
 80055b4:	9b04      	ldr	r3, [sp, #16]
 80055b6:	2b00      	cmp	r3, #0
 80055b8:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80055bc:	f6bf af5c 	bge.w	8005478 <__ieee754_rem_pio2+0x78>
 80055c0:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80055c4:	6063      	str	r3, [r4, #4]
 80055c6:	f8c4 8000 	str.w	r8, [r4]
 80055ca:	60a0      	str	r0, [r4, #8]
 80055cc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80055d0:	60e3      	str	r3, [r4, #12]
 80055d2:	426d      	negs	r5, r5
 80055d4:	e750      	b.n	8005478 <__ieee754_rem_pio2+0x78>
 80055d6:	4632      	mov	r2, r6
 80055d8:	463b      	mov	r3, r7
 80055da:	4650      	mov	r0, sl
 80055dc:	4659      	mov	r1, fp
 80055de:	f7fa fe53 	bl	8000288 <__aeabi_dsub>
 80055e2:	ea4f 5228 	mov.w	r2, r8, asr #20
 80055e6:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80055ea:	1ad3      	subs	r3, r2, r3
 80055ec:	2b10      	cmp	r3, #16
 80055ee:	e9c4 0100 	strd	r0, r1, [r4]
 80055f2:	9205      	str	r2, [sp, #20]
 80055f4:	ddd2      	ble.n	800559c <__ieee754_rem_pio2+0x19c>
 80055f6:	a33e      	add	r3, pc, #248	; (adr r3, 80056f0 <__ieee754_rem_pio2+0x2f0>)
 80055f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055fc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005600:	f7fa fff6 	bl	80005f0 <__aeabi_dmul>
 8005604:	4606      	mov	r6, r0
 8005606:	460f      	mov	r7, r1
 8005608:	4602      	mov	r2, r0
 800560a:	460b      	mov	r3, r1
 800560c:	4650      	mov	r0, sl
 800560e:	4659      	mov	r1, fp
 8005610:	f7fa fe3a 	bl	8000288 <__aeabi_dsub>
 8005614:	4602      	mov	r2, r0
 8005616:	460b      	mov	r3, r1
 8005618:	4680      	mov	r8, r0
 800561a:	4689      	mov	r9, r1
 800561c:	4650      	mov	r0, sl
 800561e:	4659      	mov	r1, fp
 8005620:	f7fa fe32 	bl	8000288 <__aeabi_dsub>
 8005624:	4632      	mov	r2, r6
 8005626:	463b      	mov	r3, r7
 8005628:	f7fa fe2e 	bl	8000288 <__aeabi_dsub>
 800562c:	a332      	add	r3, pc, #200	; (adr r3, 80056f8 <__ieee754_rem_pio2+0x2f8>)
 800562e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005632:	4606      	mov	r6, r0
 8005634:	460f      	mov	r7, r1
 8005636:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800563a:	f7fa ffd9 	bl	80005f0 <__aeabi_dmul>
 800563e:	4632      	mov	r2, r6
 8005640:	463b      	mov	r3, r7
 8005642:	f7fa fe21 	bl	8000288 <__aeabi_dsub>
 8005646:	4602      	mov	r2, r0
 8005648:	460b      	mov	r3, r1
 800564a:	4606      	mov	r6, r0
 800564c:	460f      	mov	r7, r1
 800564e:	4640      	mov	r0, r8
 8005650:	4649      	mov	r1, r9
 8005652:	f7fa fe19 	bl	8000288 <__aeabi_dsub>
 8005656:	9a05      	ldr	r2, [sp, #20]
 8005658:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800565c:	1ad3      	subs	r3, r2, r3
 800565e:	2b31      	cmp	r3, #49	; 0x31
 8005660:	e9c4 0100 	strd	r0, r1, [r4]
 8005664:	dd2a      	ble.n	80056bc <__ieee754_rem_pio2+0x2bc>
 8005666:	a328      	add	r3, pc, #160	; (adr r3, 8005708 <__ieee754_rem_pio2+0x308>)
 8005668:	e9d3 2300 	ldrd	r2, r3, [r3]
 800566c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005670:	f7fa ffbe 	bl	80005f0 <__aeabi_dmul>
 8005674:	4606      	mov	r6, r0
 8005676:	460f      	mov	r7, r1
 8005678:	4602      	mov	r2, r0
 800567a:	460b      	mov	r3, r1
 800567c:	4640      	mov	r0, r8
 800567e:	4649      	mov	r1, r9
 8005680:	f7fa fe02 	bl	8000288 <__aeabi_dsub>
 8005684:	4602      	mov	r2, r0
 8005686:	460b      	mov	r3, r1
 8005688:	4682      	mov	sl, r0
 800568a:	468b      	mov	fp, r1
 800568c:	4640      	mov	r0, r8
 800568e:	4649      	mov	r1, r9
 8005690:	f7fa fdfa 	bl	8000288 <__aeabi_dsub>
 8005694:	4632      	mov	r2, r6
 8005696:	463b      	mov	r3, r7
 8005698:	f7fa fdf6 	bl	8000288 <__aeabi_dsub>
 800569c:	a31c      	add	r3, pc, #112	; (adr r3, 8005710 <__ieee754_rem_pio2+0x310>)
 800569e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80056a2:	4606      	mov	r6, r0
 80056a4:	460f      	mov	r7, r1
 80056a6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80056aa:	f7fa ffa1 	bl	80005f0 <__aeabi_dmul>
 80056ae:	4632      	mov	r2, r6
 80056b0:	463b      	mov	r3, r7
 80056b2:	f7fa fde9 	bl	8000288 <__aeabi_dsub>
 80056b6:	4606      	mov	r6, r0
 80056b8:	460f      	mov	r7, r1
 80056ba:	e767      	b.n	800558c <__ieee754_rem_pio2+0x18c>
 80056bc:	46c2      	mov	sl, r8
 80056be:	46cb      	mov	fp, r9
 80056c0:	e76c      	b.n	800559c <__ieee754_rem_pio2+0x19c>
 80056c2:	4b1b      	ldr	r3, [pc, #108]	; (8005730 <__ieee754_rem_pio2+0x330>)
 80056c4:	4598      	cmp	r8, r3
 80056c6:	dd35      	ble.n	8005734 <__ieee754_rem_pio2+0x334>
 80056c8:	ee10 2a10 	vmov	r2, s0
 80056cc:	463b      	mov	r3, r7
 80056ce:	4630      	mov	r0, r6
 80056d0:	4639      	mov	r1, r7
 80056d2:	f7fa fdd9 	bl	8000288 <__aeabi_dsub>
 80056d6:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80056da:	e9c4 0100 	strd	r0, r1, [r4]
 80056de:	e6a1      	b.n	8005424 <__ieee754_rem_pio2+0x24>
 80056e0:	54400000 	.word	0x54400000
 80056e4:	3ff921fb 	.word	0x3ff921fb
 80056e8:	1a626331 	.word	0x1a626331
 80056ec:	3dd0b461 	.word	0x3dd0b461
 80056f0:	1a600000 	.word	0x1a600000
 80056f4:	3dd0b461 	.word	0x3dd0b461
 80056f8:	2e037073 	.word	0x2e037073
 80056fc:	3ba3198a 	.word	0x3ba3198a
 8005700:	6dc9c883 	.word	0x6dc9c883
 8005704:	3fe45f30 	.word	0x3fe45f30
 8005708:	2e000000 	.word	0x2e000000
 800570c:	3ba3198a 	.word	0x3ba3198a
 8005710:	252049c1 	.word	0x252049c1
 8005714:	397b839a 	.word	0x397b839a
 8005718:	3fe921fb 	.word	0x3fe921fb
 800571c:	4002d97b 	.word	0x4002d97b
 8005720:	3ff921fb 	.word	0x3ff921fb
 8005724:	413921fb 	.word	0x413921fb
 8005728:	3fe00000 	.word	0x3fe00000
 800572c:	08006708 	.word	0x08006708
 8005730:	7fefffff 	.word	0x7fefffff
 8005734:	ea4f 5528 	mov.w	r5, r8, asr #20
 8005738:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
 800573c:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 8005740:	4630      	mov	r0, r6
 8005742:	460f      	mov	r7, r1
 8005744:	f7fb fa04 	bl	8000b50 <__aeabi_d2iz>
 8005748:	f7fa feec 	bl	8000524 <__aeabi_i2d>
 800574c:	4602      	mov	r2, r0
 800574e:	460b      	mov	r3, r1
 8005750:	4630      	mov	r0, r6
 8005752:	4639      	mov	r1, r7
 8005754:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8005758:	f7fa fd96 	bl	8000288 <__aeabi_dsub>
 800575c:	2200      	movs	r2, #0
 800575e:	4b1f      	ldr	r3, [pc, #124]	; (80057dc <__ieee754_rem_pio2+0x3dc>)
 8005760:	f7fa ff46 	bl	80005f0 <__aeabi_dmul>
 8005764:	460f      	mov	r7, r1
 8005766:	4606      	mov	r6, r0
 8005768:	f7fb f9f2 	bl	8000b50 <__aeabi_d2iz>
 800576c:	f7fa feda 	bl	8000524 <__aeabi_i2d>
 8005770:	4602      	mov	r2, r0
 8005772:	460b      	mov	r3, r1
 8005774:	4630      	mov	r0, r6
 8005776:	4639      	mov	r1, r7
 8005778:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800577c:	f7fa fd84 	bl	8000288 <__aeabi_dsub>
 8005780:	2200      	movs	r2, #0
 8005782:	4b16      	ldr	r3, [pc, #88]	; (80057dc <__ieee754_rem_pio2+0x3dc>)
 8005784:	f7fa ff34 	bl	80005f0 <__aeabi_dmul>
 8005788:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800578c:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005790:	f04f 0803 	mov.w	r8, #3
 8005794:	2600      	movs	r6, #0
 8005796:	2700      	movs	r7, #0
 8005798:	4632      	mov	r2, r6
 800579a:	463b      	mov	r3, r7
 800579c:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 80057a0:	f108 3aff 	add.w	sl, r8, #4294967295
 80057a4:	f7fb f98c 	bl	8000ac0 <__aeabi_dcmpeq>
 80057a8:	b9b0      	cbnz	r0, 80057d8 <__ieee754_rem_pio2+0x3d8>
 80057aa:	4b0d      	ldr	r3, [pc, #52]	; (80057e0 <__ieee754_rem_pio2+0x3e0>)
 80057ac:	9301      	str	r3, [sp, #4]
 80057ae:	2302      	movs	r3, #2
 80057b0:	9300      	str	r3, [sp, #0]
 80057b2:	462a      	mov	r2, r5
 80057b4:	4643      	mov	r3, r8
 80057b6:	4621      	mov	r1, r4
 80057b8:	a806      	add	r0, sp, #24
 80057ba:	f000 f8fd 	bl	80059b8 <__kernel_rem_pio2>
 80057be:	9b04      	ldr	r3, [sp, #16]
 80057c0:	2b00      	cmp	r3, #0
 80057c2:	4605      	mov	r5, r0
 80057c4:	f6bf ae58 	bge.w	8005478 <__ieee754_rem_pio2+0x78>
 80057c8:	6863      	ldr	r3, [r4, #4]
 80057ca:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80057ce:	6063      	str	r3, [r4, #4]
 80057d0:	68e3      	ldr	r3, [r4, #12]
 80057d2:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80057d6:	e6fb      	b.n	80055d0 <__ieee754_rem_pio2+0x1d0>
 80057d8:	46d0      	mov	r8, sl
 80057da:	e7dd      	b.n	8005798 <__ieee754_rem_pio2+0x398>
 80057dc:	41700000 	.word	0x41700000
 80057e0:	08006788 	.word	0x08006788
 80057e4:	00000000 	.word	0x00000000

080057e8 <__kernel_cos>:
 80057e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80057ec:	ec59 8b10 	vmov	r8, r9, d0
 80057f0:	f029 4700 	bic.w	r7, r9, #2147483648	; 0x80000000
 80057f4:	b085      	sub	sp, #20
 80057f6:	f1b7 5f79 	cmp.w	r7, #1044381696	; 0x3e400000
 80057fa:	ed8d 1b00 	vstr	d1, [sp]
 80057fe:	da07      	bge.n	8005810 <__kernel_cos+0x28>
 8005800:	ee10 0a10 	vmov	r0, s0
 8005804:	4649      	mov	r1, r9
 8005806:	f7fb f9a3 	bl	8000b50 <__aeabi_d2iz>
 800580a:	2800      	cmp	r0, #0
 800580c:	f000 80aa 	beq.w	8005964 <__kernel_cos+0x17c>
 8005810:	4642      	mov	r2, r8
 8005812:	464b      	mov	r3, r9
 8005814:	4640      	mov	r0, r8
 8005816:	4649      	mov	r1, r9
 8005818:	f7fa feea 	bl	80005f0 <__aeabi_dmul>
 800581c:	a359      	add	r3, pc, #356	; (adr r3, 8005984 <__kernel_cos+0x19c>)
 800581e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005822:	4604      	mov	r4, r0
 8005824:	460d      	mov	r5, r1
 8005826:	f7fa fee3 	bl	80005f0 <__aeabi_dmul>
 800582a:	a358      	add	r3, pc, #352	; (adr r3, 800598c <__kernel_cos+0x1a4>)
 800582c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005830:	f7fa fd2c 	bl	800028c <__adddf3>
 8005834:	4622      	mov	r2, r4
 8005836:	462b      	mov	r3, r5
 8005838:	f7fa feda 	bl	80005f0 <__aeabi_dmul>
 800583c:	a355      	add	r3, pc, #340	; (adr r3, 8005994 <__kernel_cos+0x1ac>)
 800583e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005842:	f7fa fd21 	bl	8000288 <__aeabi_dsub>
 8005846:	4622      	mov	r2, r4
 8005848:	462b      	mov	r3, r5
 800584a:	f7fa fed1 	bl	80005f0 <__aeabi_dmul>
 800584e:	a353      	add	r3, pc, #332	; (adr r3, 800599c <__kernel_cos+0x1b4>)
 8005850:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005854:	f7fa fd1a 	bl	800028c <__adddf3>
 8005858:	4622      	mov	r2, r4
 800585a:	462b      	mov	r3, r5
 800585c:	f7fa fec8 	bl	80005f0 <__aeabi_dmul>
 8005860:	a350      	add	r3, pc, #320	; (adr r3, 80059a4 <__kernel_cos+0x1bc>)
 8005862:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005866:	f7fa fd0f 	bl	8000288 <__aeabi_dsub>
 800586a:	4622      	mov	r2, r4
 800586c:	462b      	mov	r3, r5
 800586e:	f7fa febf 	bl	80005f0 <__aeabi_dmul>
 8005872:	a34e      	add	r3, pc, #312	; (adr r3, 80059ac <__kernel_cos+0x1c4>)
 8005874:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005878:	f7fa fd08 	bl	800028c <__adddf3>
 800587c:	462b      	mov	r3, r5
 800587e:	4622      	mov	r2, r4
 8005880:	f7fa feb6 	bl	80005f0 <__aeabi_dmul>
 8005884:	4b3a      	ldr	r3, [pc, #232]	; (8005970 <__kernel_cos+0x188>)
 8005886:	429f      	cmp	r7, r3
 8005888:	4682      	mov	sl, r0
 800588a:	468b      	mov	fp, r1
 800588c:	dc2c      	bgt.n	80058e8 <__kernel_cos+0x100>
 800588e:	2200      	movs	r2, #0
 8005890:	4b38      	ldr	r3, [pc, #224]	; (8005974 <__kernel_cos+0x18c>)
 8005892:	4620      	mov	r0, r4
 8005894:	4629      	mov	r1, r5
 8005896:	f7fa feab 	bl	80005f0 <__aeabi_dmul>
 800589a:	4652      	mov	r2, sl
 800589c:	4606      	mov	r6, r0
 800589e:	460f      	mov	r7, r1
 80058a0:	465b      	mov	r3, fp
 80058a2:	4620      	mov	r0, r4
 80058a4:	4629      	mov	r1, r5
 80058a6:	f7fa fea3 	bl	80005f0 <__aeabi_dmul>
 80058aa:	e9dd 2300 	ldrd	r2, r3, [sp]
 80058ae:	4604      	mov	r4, r0
 80058b0:	460d      	mov	r5, r1
 80058b2:	4640      	mov	r0, r8
 80058b4:	4649      	mov	r1, r9
 80058b6:	f7fa fe9b 	bl	80005f0 <__aeabi_dmul>
 80058ba:	4602      	mov	r2, r0
 80058bc:	460b      	mov	r3, r1
 80058be:	4620      	mov	r0, r4
 80058c0:	4629      	mov	r1, r5
 80058c2:	f7fa fce1 	bl	8000288 <__aeabi_dsub>
 80058c6:	4602      	mov	r2, r0
 80058c8:	460b      	mov	r3, r1
 80058ca:	4630      	mov	r0, r6
 80058cc:	4639      	mov	r1, r7
 80058ce:	f7fa fcdb 	bl	8000288 <__aeabi_dsub>
 80058d2:	460b      	mov	r3, r1
 80058d4:	4928      	ldr	r1, [pc, #160]	; (8005978 <__kernel_cos+0x190>)
 80058d6:	4602      	mov	r2, r0
 80058d8:	2000      	movs	r0, #0
 80058da:	f7fa fcd5 	bl	8000288 <__aeabi_dsub>
 80058de:	ec41 0b10 	vmov	d0, r0, r1
 80058e2:	b005      	add	sp, #20
 80058e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80058e8:	4b24      	ldr	r3, [pc, #144]	; (800597c <__kernel_cos+0x194>)
 80058ea:	4923      	ldr	r1, [pc, #140]	; (8005978 <__kernel_cos+0x190>)
 80058ec:	429f      	cmp	r7, r3
 80058ee:	bfd7      	itett	le
 80058f0:	f5a7 1300 	suble.w	r3, r7, #2097152	; 0x200000
 80058f4:	4f22      	ldrgt	r7, [pc, #136]	; (8005980 <__kernel_cos+0x198>)
 80058f6:	2200      	movle	r2, #0
 80058f8:	4616      	movle	r6, r2
 80058fa:	bfd4      	ite	le
 80058fc:	461f      	movle	r7, r3
 80058fe:	2600      	movgt	r6, #0
 8005900:	4632      	mov	r2, r6
 8005902:	463b      	mov	r3, r7
 8005904:	2000      	movs	r0, #0
 8005906:	f7fa fcbf 	bl	8000288 <__aeabi_dsub>
 800590a:	2200      	movs	r2, #0
 800590c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005910:	4b18      	ldr	r3, [pc, #96]	; (8005974 <__kernel_cos+0x18c>)
 8005912:	4620      	mov	r0, r4
 8005914:	4629      	mov	r1, r5
 8005916:	f7fa fe6b 	bl	80005f0 <__aeabi_dmul>
 800591a:	4632      	mov	r2, r6
 800591c:	463b      	mov	r3, r7
 800591e:	f7fa fcb3 	bl	8000288 <__aeabi_dsub>
 8005922:	4652      	mov	r2, sl
 8005924:	4606      	mov	r6, r0
 8005926:	460f      	mov	r7, r1
 8005928:	465b      	mov	r3, fp
 800592a:	4620      	mov	r0, r4
 800592c:	4629      	mov	r1, r5
 800592e:	f7fa fe5f 	bl	80005f0 <__aeabi_dmul>
 8005932:	e9dd 2300 	ldrd	r2, r3, [sp]
 8005936:	4604      	mov	r4, r0
 8005938:	460d      	mov	r5, r1
 800593a:	4640      	mov	r0, r8
 800593c:	4649      	mov	r1, r9
 800593e:	f7fa fe57 	bl	80005f0 <__aeabi_dmul>
 8005942:	4602      	mov	r2, r0
 8005944:	460b      	mov	r3, r1
 8005946:	4620      	mov	r0, r4
 8005948:	4629      	mov	r1, r5
 800594a:	f7fa fc9d 	bl	8000288 <__aeabi_dsub>
 800594e:	4602      	mov	r2, r0
 8005950:	460b      	mov	r3, r1
 8005952:	4630      	mov	r0, r6
 8005954:	4639      	mov	r1, r7
 8005956:	f7fa fc97 	bl	8000288 <__aeabi_dsub>
 800595a:	4602      	mov	r2, r0
 800595c:	460b      	mov	r3, r1
 800595e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005962:	e7ba      	b.n	80058da <__kernel_cos+0xf2>
 8005964:	2000      	movs	r0, #0
 8005966:	4904      	ldr	r1, [pc, #16]	; (8005978 <__kernel_cos+0x190>)
 8005968:	e7b9      	b.n	80058de <__kernel_cos+0xf6>
 800596a:	bf00      	nop
 800596c:	f3af 8000 	nop.w
 8005970:	3fd33332 	.word	0x3fd33332
 8005974:	3fe00000 	.word	0x3fe00000
 8005978:	3ff00000 	.word	0x3ff00000
 800597c:	3fe90000 	.word	0x3fe90000
 8005980:	3fd20000 	.word	0x3fd20000
 8005984:	be8838d4 	.word	0xbe8838d4
 8005988:	bda8fae9 	.word	0xbda8fae9
 800598c:	bdb4b1c4 	.word	0xbdb4b1c4
 8005990:	3e21ee9e 	.word	0x3e21ee9e
 8005994:	809c52ad 	.word	0x809c52ad
 8005998:	3e927e4f 	.word	0x3e927e4f
 800599c:	19cb1590 	.word	0x19cb1590
 80059a0:	3efa01a0 	.word	0x3efa01a0
 80059a4:	16c15177 	.word	0x16c15177
 80059a8:	3f56c16c 	.word	0x3f56c16c
 80059ac:	5555554c 	.word	0x5555554c
 80059b0:	3fa55555 	.word	0x3fa55555
 80059b4:	00000000 	.word	0x00000000

080059b8 <__kernel_rem_pio2>:
 80059b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059bc:	ed2d 8b02 	vpush	{d8}
 80059c0:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 80059c4:	1ed4      	subs	r4, r2, #3
 80059c6:	9306      	str	r3, [sp, #24]
 80059c8:	9102      	str	r1, [sp, #8]
 80059ca:	4bc3      	ldr	r3, [pc, #780]	; (8005cd8 <__kernel_rem_pio2+0x320>)
 80059cc:	99a4      	ldr	r1, [sp, #656]	; 0x290
 80059ce:	9009      	str	r0, [sp, #36]	; 0x24
 80059d0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80059d4:	9300      	str	r3, [sp, #0]
 80059d6:	9b06      	ldr	r3, [sp, #24]
 80059d8:	3b01      	subs	r3, #1
 80059da:	9304      	str	r3, [sp, #16]
 80059dc:	2318      	movs	r3, #24
 80059de:	fb94 f4f3 	sdiv	r4, r4, r3
 80059e2:	f06f 0317 	mvn.w	r3, #23
 80059e6:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 80059ea:	fb04 3303 	mla	r3, r4, r3, r3
 80059ee:	eb03 0a02 	add.w	sl, r3, r2
 80059f2:	9b00      	ldr	r3, [sp, #0]
 80059f4:	9a04      	ldr	r2, [sp, #16]
 80059f6:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 8005cc8 <__kernel_rem_pio2+0x310>
 80059fa:	eb03 0802 	add.w	r8, r3, r2
 80059fe:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8005a00:	1aa7      	subs	r7, r4, r2
 8005a02:	ae20      	add	r6, sp, #128	; 0x80
 8005a04:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8005a08:	2500      	movs	r5, #0
 8005a0a:	4545      	cmp	r5, r8
 8005a0c:	dd13      	ble.n	8005a36 <__kernel_rem_pio2+0x7e>
 8005a0e:	ed9f 8bae 	vldr	d8, [pc, #696]	; 8005cc8 <__kernel_rem_pio2+0x310>
 8005a12:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
 8005a16:	2600      	movs	r6, #0
 8005a18:	9b00      	ldr	r3, [sp, #0]
 8005a1a:	429e      	cmp	r6, r3
 8005a1c:	dc32      	bgt.n	8005a84 <__kernel_rem_pio2+0xcc>
 8005a1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005a20:	9303      	str	r3, [sp, #12]
 8005a22:	9b06      	ldr	r3, [sp, #24]
 8005a24:	199d      	adds	r5, r3, r6
 8005a26:	ab20      	add	r3, sp, #128	; 0x80
 8005a28:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8005a2c:	9308      	str	r3, [sp, #32]
 8005a2e:	ec59 8b18 	vmov	r8, r9, d8
 8005a32:	2700      	movs	r7, #0
 8005a34:	e01f      	b.n	8005a76 <__kernel_rem_pio2+0xbe>
 8005a36:	42ef      	cmn	r7, r5
 8005a38:	d407      	bmi.n	8005a4a <__kernel_rem_pio2+0x92>
 8005a3a:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8005a3e:	f7fa fd71 	bl	8000524 <__aeabi_i2d>
 8005a42:	e8e6 0102 	strd	r0, r1, [r6], #8
 8005a46:	3501      	adds	r5, #1
 8005a48:	e7df      	b.n	8005a0a <__kernel_rem_pio2+0x52>
 8005a4a:	ec51 0b18 	vmov	r0, r1, d8
 8005a4e:	e7f8      	b.n	8005a42 <__kernel_rem_pio2+0x8a>
 8005a50:	9908      	ldr	r1, [sp, #32]
 8005a52:	9d03      	ldr	r5, [sp, #12]
 8005a54:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 8005a58:	9108      	str	r1, [sp, #32]
 8005a5a:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8005a5e:	9503      	str	r5, [sp, #12]
 8005a60:	f7fa fdc6 	bl	80005f0 <__aeabi_dmul>
 8005a64:	4602      	mov	r2, r0
 8005a66:	460b      	mov	r3, r1
 8005a68:	4640      	mov	r0, r8
 8005a6a:	4649      	mov	r1, r9
 8005a6c:	f7fa fc0e 	bl	800028c <__adddf3>
 8005a70:	3701      	adds	r7, #1
 8005a72:	4680      	mov	r8, r0
 8005a74:	4689      	mov	r9, r1
 8005a76:	9b04      	ldr	r3, [sp, #16]
 8005a78:	429f      	cmp	r7, r3
 8005a7a:	dde9      	ble.n	8005a50 <__kernel_rem_pio2+0x98>
 8005a7c:	e8eb 8902 	strd	r8, r9, [fp], #8
 8005a80:	3601      	adds	r6, #1
 8005a82:	e7c9      	b.n	8005a18 <__kernel_rem_pio2+0x60>
 8005a84:	9b00      	ldr	r3, [sp, #0]
 8005a86:	9f00      	ldr	r7, [sp, #0]
 8005a88:	aa0c      	add	r2, sp, #48	; 0x30
 8005a8a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8005a8e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005a90:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8005a92:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8005a96:	930a      	str	r3, [sp, #40]	; 0x28
 8005a98:	ab98      	add	r3, sp, #608	; 0x260
 8005a9a:	f107 5b00 	add.w	fp, r7, #536870912	; 0x20000000
 8005a9e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8005aa2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8005aa6:	e953 8928 	ldrd	r8, r9, [r3, #-160]	; 0xa0
 8005aaa:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8005aae:	9308      	str	r3, [sp, #32]
 8005ab0:	9a08      	ldr	r2, [sp, #32]
 8005ab2:	ab98      	add	r3, sp, #608	; 0x260
 8005ab4:	4413      	add	r3, r2
 8005ab6:	f1a3 0b98 	sub.w	fp, r3, #152	; 0x98
 8005aba:	2600      	movs	r6, #0
 8005abc:	1bbb      	subs	r3, r7, r6
 8005abe:	2b00      	cmp	r3, #0
 8005ac0:	dc77      	bgt.n	8005bb2 <__kernel_rem_pio2+0x1fa>
 8005ac2:	ec49 8b10 	vmov	d0, r8, r9
 8005ac6:	4650      	mov	r0, sl
 8005ac8:	f000 fc0e 	bl	80062e8 <scalbn>
 8005acc:	ec55 4b10 	vmov	r4, r5, d0
 8005ad0:	2200      	movs	r2, #0
 8005ad2:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8005ad6:	ee10 0a10 	vmov	r0, s0
 8005ada:	4629      	mov	r1, r5
 8005adc:	f7fa fd88 	bl	80005f0 <__aeabi_dmul>
 8005ae0:	ec41 0b10 	vmov	d0, r0, r1
 8005ae4:	f000 fb7c 	bl	80061e0 <floor>
 8005ae8:	2200      	movs	r2, #0
 8005aea:	ec51 0b10 	vmov	r0, r1, d0
 8005aee:	4b7b      	ldr	r3, [pc, #492]	; (8005cdc <__kernel_rem_pio2+0x324>)
 8005af0:	f7fa fd7e 	bl	80005f0 <__aeabi_dmul>
 8005af4:	4602      	mov	r2, r0
 8005af6:	460b      	mov	r3, r1
 8005af8:	4620      	mov	r0, r4
 8005afa:	4629      	mov	r1, r5
 8005afc:	f7fa fbc4 	bl	8000288 <__aeabi_dsub>
 8005b00:	460d      	mov	r5, r1
 8005b02:	4604      	mov	r4, r0
 8005b04:	f7fb f824 	bl	8000b50 <__aeabi_d2iz>
 8005b08:	9003      	str	r0, [sp, #12]
 8005b0a:	f7fa fd0b 	bl	8000524 <__aeabi_i2d>
 8005b0e:	4602      	mov	r2, r0
 8005b10:	460b      	mov	r3, r1
 8005b12:	4620      	mov	r0, r4
 8005b14:	4629      	mov	r1, r5
 8005b16:	f7fa fbb7 	bl	8000288 <__aeabi_dsub>
 8005b1a:	f1ba 0f00 	cmp.w	sl, #0
 8005b1e:	4680      	mov	r8, r0
 8005b20:	4689      	mov	r9, r1
 8005b22:	dd6b      	ble.n	8005bfc <__kernel_rem_pio2+0x244>
 8005b24:	1e7a      	subs	r2, r7, #1
 8005b26:	ab0c      	add	r3, sp, #48	; 0x30
 8005b28:	f1ca 0118 	rsb	r1, sl, #24
 8005b2c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8005b30:	9c03      	ldr	r4, [sp, #12]
 8005b32:	fa40 f301 	asr.w	r3, r0, r1
 8005b36:	441c      	add	r4, r3
 8005b38:	408b      	lsls	r3, r1
 8005b3a:	1ac0      	subs	r0, r0, r3
 8005b3c:	ab0c      	add	r3, sp, #48	; 0x30
 8005b3e:	9403      	str	r4, [sp, #12]
 8005b40:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8005b44:	f1ca 0317 	rsb	r3, sl, #23
 8005b48:	fa40 fb03 	asr.w	fp, r0, r3
 8005b4c:	f1bb 0f00 	cmp.w	fp, #0
 8005b50:	dd62      	ble.n	8005c18 <__kernel_rem_pio2+0x260>
 8005b52:	9b03      	ldr	r3, [sp, #12]
 8005b54:	2200      	movs	r2, #0
 8005b56:	3301      	adds	r3, #1
 8005b58:	9303      	str	r3, [sp, #12]
 8005b5a:	4614      	mov	r4, r2
 8005b5c:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8005b60:	4297      	cmp	r7, r2
 8005b62:	f300 8089 	bgt.w	8005c78 <__kernel_rem_pio2+0x2c0>
 8005b66:	f1ba 0f00 	cmp.w	sl, #0
 8005b6a:	dd07      	ble.n	8005b7c <__kernel_rem_pio2+0x1c4>
 8005b6c:	f1ba 0f01 	cmp.w	sl, #1
 8005b70:	f000 8096 	beq.w	8005ca0 <__kernel_rem_pio2+0x2e8>
 8005b74:	f1ba 0f02 	cmp.w	sl, #2
 8005b78:	f000 809c 	beq.w	8005cb4 <__kernel_rem_pio2+0x2fc>
 8005b7c:	f1bb 0f02 	cmp.w	fp, #2
 8005b80:	d14a      	bne.n	8005c18 <__kernel_rem_pio2+0x260>
 8005b82:	4642      	mov	r2, r8
 8005b84:	464b      	mov	r3, r9
 8005b86:	2000      	movs	r0, #0
 8005b88:	4955      	ldr	r1, [pc, #340]	; (8005ce0 <__kernel_rem_pio2+0x328>)
 8005b8a:	f7fa fb7d 	bl	8000288 <__aeabi_dsub>
 8005b8e:	4680      	mov	r8, r0
 8005b90:	4689      	mov	r9, r1
 8005b92:	2c00      	cmp	r4, #0
 8005b94:	d040      	beq.n	8005c18 <__kernel_rem_pio2+0x260>
 8005b96:	4650      	mov	r0, sl
 8005b98:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 8005cd0 <__kernel_rem_pio2+0x318>
 8005b9c:	f000 fba4 	bl	80062e8 <scalbn>
 8005ba0:	4640      	mov	r0, r8
 8005ba2:	4649      	mov	r1, r9
 8005ba4:	ec53 2b10 	vmov	r2, r3, d0
 8005ba8:	f7fa fb6e 	bl	8000288 <__aeabi_dsub>
 8005bac:	4680      	mov	r8, r0
 8005bae:	4689      	mov	r9, r1
 8005bb0:	e032      	b.n	8005c18 <__kernel_rem_pio2+0x260>
 8005bb2:	2200      	movs	r2, #0
 8005bb4:	4b4b      	ldr	r3, [pc, #300]	; (8005ce4 <__kernel_rem_pio2+0x32c>)
 8005bb6:	4640      	mov	r0, r8
 8005bb8:	4649      	mov	r1, r9
 8005bba:	f7fa fd19 	bl	80005f0 <__aeabi_dmul>
 8005bbe:	f7fa ffc7 	bl	8000b50 <__aeabi_d2iz>
 8005bc2:	f7fa fcaf 	bl	8000524 <__aeabi_i2d>
 8005bc6:	2200      	movs	r2, #0
 8005bc8:	4b47      	ldr	r3, [pc, #284]	; (8005ce8 <__kernel_rem_pio2+0x330>)
 8005bca:	4604      	mov	r4, r0
 8005bcc:	460d      	mov	r5, r1
 8005bce:	f7fa fd0f 	bl	80005f0 <__aeabi_dmul>
 8005bd2:	4602      	mov	r2, r0
 8005bd4:	460b      	mov	r3, r1
 8005bd6:	4640      	mov	r0, r8
 8005bd8:	4649      	mov	r1, r9
 8005bda:	f7fa fb55 	bl	8000288 <__aeabi_dsub>
 8005bde:	f7fa ffb7 	bl	8000b50 <__aeabi_d2iz>
 8005be2:	ab0c      	add	r3, sp, #48	; 0x30
 8005be4:	4629      	mov	r1, r5
 8005be6:	f843 0026 	str.w	r0, [r3, r6, lsl #2]
 8005bea:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8005bee:	4620      	mov	r0, r4
 8005bf0:	f7fa fb4c 	bl	800028c <__adddf3>
 8005bf4:	3601      	adds	r6, #1
 8005bf6:	4680      	mov	r8, r0
 8005bf8:	4689      	mov	r9, r1
 8005bfa:	e75f      	b.n	8005abc <__kernel_rem_pio2+0x104>
 8005bfc:	d106      	bne.n	8005c0c <__kernel_rem_pio2+0x254>
 8005bfe:	1e7b      	subs	r3, r7, #1
 8005c00:	aa0c      	add	r2, sp, #48	; 0x30
 8005c02:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8005c06:	ea4f 5be0 	mov.w	fp, r0, asr #23
 8005c0a:	e79f      	b.n	8005b4c <__kernel_rem_pio2+0x194>
 8005c0c:	2200      	movs	r2, #0
 8005c0e:	4b37      	ldr	r3, [pc, #220]	; (8005cec <__kernel_rem_pio2+0x334>)
 8005c10:	f7fa ff74 	bl	8000afc <__aeabi_dcmpge>
 8005c14:	bb68      	cbnz	r0, 8005c72 <__kernel_rem_pio2+0x2ba>
 8005c16:	4683      	mov	fp, r0
 8005c18:	2200      	movs	r2, #0
 8005c1a:	2300      	movs	r3, #0
 8005c1c:	4640      	mov	r0, r8
 8005c1e:	4649      	mov	r1, r9
 8005c20:	f7fa ff4e 	bl	8000ac0 <__aeabi_dcmpeq>
 8005c24:	2800      	cmp	r0, #0
 8005c26:	f000 80c1 	beq.w	8005dac <__kernel_rem_pio2+0x3f4>
 8005c2a:	1e7c      	subs	r4, r7, #1
 8005c2c:	4623      	mov	r3, r4
 8005c2e:	2200      	movs	r2, #0
 8005c30:	9900      	ldr	r1, [sp, #0]
 8005c32:	428b      	cmp	r3, r1
 8005c34:	da5c      	bge.n	8005cf0 <__kernel_rem_pio2+0x338>
 8005c36:	2a00      	cmp	r2, #0
 8005c38:	f040 808b 	bne.w	8005d52 <__kernel_rem_pio2+0x39a>
 8005c3c:	2401      	movs	r4, #1
 8005c3e:	f06f 0203 	mvn.w	r2, #3
 8005c42:	fb02 f304 	mul.w	r3, r2, r4
 8005c46:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005c48:	58cb      	ldr	r3, [r1, r3]
 8005c4a:	2b00      	cmp	r3, #0
 8005c4c:	d056      	beq.n	8005cfc <__kernel_rem_pio2+0x344>
 8005c4e:	9b08      	ldr	r3, [sp, #32]
 8005c50:	aa98      	add	r2, sp, #608	; 0x260
 8005c52:	4413      	add	r3, r2
 8005c54:	f1a3 0b90 	sub.w	fp, r3, #144	; 0x90
 8005c58:	9b06      	ldr	r3, [sp, #24]
 8005c5a:	19dd      	adds	r5, r3, r7
 8005c5c:	ab20      	add	r3, sp, #128	; 0x80
 8005c5e:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8005c62:	19e3      	adds	r3, r4, r7
 8005c64:	1c7e      	adds	r6, r7, #1
 8005c66:	9303      	str	r3, [sp, #12]
 8005c68:	9b03      	ldr	r3, [sp, #12]
 8005c6a:	429e      	cmp	r6, r3
 8005c6c:	dd48      	ble.n	8005d00 <__kernel_rem_pio2+0x348>
 8005c6e:	461f      	mov	r7, r3
 8005c70:	e712      	b.n	8005a98 <__kernel_rem_pio2+0xe0>
 8005c72:	f04f 0b02 	mov.w	fp, #2
 8005c76:	e76c      	b.n	8005b52 <__kernel_rem_pio2+0x19a>
 8005c78:	ab0c      	add	r3, sp, #48	; 0x30
 8005c7a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005c7e:	b94c      	cbnz	r4, 8005c94 <__kernel_rem_pio2+0x2dc>
 8005c80:	b12b      	cbz	r3, 8005c8e <__kernel_rem_pio2+0x2d6>
 8005c82:	a80c      	add	r0, sp, #48	; 0x30
 8005c84:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8005c88:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8005c8c:	2301      	movs	r3, #1
 8005c8e:	3201      	adds	r2, #1
 8005c90:	461c      	mov	r4, r3
 8005c92:	e765      	b.n	8005b60 <__kernel_rem_pio2+0x1a8>
 8005c94:	a80c      	add	r0, sp, #48	; 0x30
 8005c96:	1acb      	subs	r3, r1, r3
 8005c98:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8005c9c:	4623      	mov	r3, r4
 8005c9e:	e7f6      	b.n	8005c8e <__kernel_rem_pio2+0x2d6>
 8005ca0:	1e7a      	subs	r2, r7, #1
 8005ca2:	ab0c      	add	r3, sp, #48	; 0x30
 8005ca4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005ca8:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8005cac:	a90c      	add	r1, sp, #48	; 0x30
 8005cae:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8005cb2:	e763      	b.n	8005b7c <__kernel_rem_pio2+0x1c4>
 8005cb4:	1e7a      	subs	r2, r7, #1
 8005cb6:	ab0c      	add	r3, sp, #48	; 0x30
 8005cb8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005cbc:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8005cc0:	e7f4      	b.n	8005cac <__kernel_rem_pio2+0x2f4>
 8005cc2:	bf00      	nop
 8005cc4:	f3af 8000 	nop.w
	...
 8005cd4:	3ff00000 	.word	0x3ff00000
 8005cd8:	080068d0 	.word	0x080068d0
 8005cdc:	40200000 	.word	0x40200000
 8005ce0:	3ff00000 	.word	0x3ff00000
 8005ce4:	3e700000 	.word	0x3e700000
 8005ce8:	41700000 	.word	0x41700000
 8005cec:	3fe00000 	.word	0x3fe00000
 8005cf0:	a90c      	add	r1, sp, #48	; 0x30
 8005cf2:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8005cf6:	3b01      	subs	r3, #1
 8005cf8:	430a      	orrs	r2, r1
 8005cfa:	e799      	b.n	8005c30 <__kernel_rem_pio2+0x278>
 8005cfc:	3401      	adds	r4, #1
 8005cfe:	e7a0      	b.n	8005c42 <__kernel_rem_pio2+0x28a>
 8005d00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005d02:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8005d06:	f7fa fc0d 	bl	8000524 <__aeabi_i2d>
 8005d0a:	e8e5 0102 	strd	r0, r1, [r5], #8
 8005d0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005d10:	9508      	str	r5, [sp, #32]
 8005d12:	461c      	mov	r4, r3
 8005d14:	2700      	movs	r7, #0
 8005d16:	f04f 0800 	mov.w	r8, #0
 8005d1a:	f04f 0900 	mov.w	r9, #0
 8005d1e:	9b04      	ldr	r3, [sp, #16]
 8005d20:	429f      	cmp	r7, r3
 8005d22:	dd03      	ble.n	8005d2c <__kernel_rem_pio2+0x374>
 8005d24:	e8eb 8902 	strd	r8, r9, [fp], #8
 8005d28:	3601      	adds	r6, #1
 8005d2a:	e79d      	b.n	8005c68 <__kernel_rem_pio2+0x2b0>
 8005d2c:	9908      	ldr	r1, [sp, #32]
 8005d2e:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 8005d32:	9108      	str	r1, [sp, #32]
 8005d34:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8005d38:	f7fa fc5a 	bl	80005f0 <__aeabi_dmul>
 8005d3c:	4602      	mov	r2, r0
 8005d3e:	460b      	mov	r3, r1
 8005d40:	4640      	mov	r0, r8
 8005d42:	4649      	mov	r1, r9
 8005d44:	f7fa faa2 	bl	800028c <__adddf3>
 8005d48:	3701      	adds	r7, #1
 8005d4a:	4680      	mov	r8, r0
 8005d4c:	4689      	mov	r9, r1
 8005d4e:	e7e6      	b.n	8005d1e <__kernel_rem_pio2+0x366>
 8005d50:	3c01      	subs	r4, #1
 8005d52:	ab0c      	add	r3, sp, #48	; 0x30
 8005d54:	f1aa 0a18 	sub.w	sl, sl, #24
 8005d58:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8005d5c:	2b00      	cmp	r3, #0
 8005d5e:	d0f7      	beq.n	8005d50 <__kernel_rem_pio2+0x398>
 8005d60:	4650      	mov	r0, sl
 8005d62:	ed9f 0bb5 	vldr	d0, [pc, #724]	; 8006038 <__kernel_rem_pio2+0x680>
 8005d66:	f000 fabf 	bl	80062e8 <scalbn>
 8005d6a:	00e5      	lsls	r5, r4, #3
 8005d6c:	ab98      	add	r3, sp, #608	; 0x260
 8005d6e:	eb03 0905 	add.w	r9, r3, r5
 8005d72:	ec57 6b10 	vmov	r6, r7, d0
 8005d76:	f1a9 0998 	sub.w	r9, r9, #152	; 0x98
 8005d7a:	46a0      	mov	r8, r4
 8005d7c:	f1b8 0f00 	cmp.w	r8, #0
 8005d80:	da4d      	bge.n	8005e1e <__kernel_rem_pio2+0x466>
 8005d82:	ed9f 8baf 	vldr	d8, [pc, #700]	; 8006040 <__kernel_rem_pio2+0x688>
 8005d86:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
 8005d8a:	2300      	movs	r3, #0
 8005d8c:	9304      	str	r3, [sp, #16]
 8005d8e:	4657      	mov	r7, sl
 8005d90:	9b04      	ldr	r3, [sp, #16]
 8005d92:	ebb4 0903 	subs.w	r9, r4, r3
 8005d96:	d476      	bmi.n	8005e86 <__kernel_rem_pio2+0x4ce>
 8005d98:	4bab      	ldr	r3, [pc, #684]	; (8006048 <__kernel_rem_pio2+0x690>)
 8005d9a:	461e      	mov	r6, r3
 8005d9c:	ab70      	add	r3, sp, #448	; 0x1c0
 8005d9e:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8005da2:	ed8d 8b06 	vstr	d8, [sp, #24]
 8005da6:	f04f 0800 	mov.w	r8, #0
 8005daa:	e05e      	b.n	8005e6a <__kernel_rem_pio2+0x4b2>
 8005dac:	f1ca 0000 	rsb	r0, sl, #0
 8005db0:	ec49 8b10 	vmov	d0, r8, r9
 8005db4:	f000 fa98 	bl	80062e8 <scalbn>
 8005db8:	ec55 4b10 	vmov	r4, r5, d0
 8005dbc:	2200      	movs	r2, #0
 8005dbe:	4ba3      	ldr	r3, [pc, #652]	; (800604c <__kernel_rem_pio2+0x694>)
 8005dc0:	ee10 0a10 	vmov	r0, s0
 8005dc4:	4629      	mov	r1, r5
 8005dc6:	f7fa fe99 	bl	8000afc <__aeabi_dcmpge>
 8005dca:	b1f8      	cbz	r0, 8005e0c <__kernel_rem_pio2+0x454>
 8005dcc:	2200      	movs	r2, #0
 8005dce:	4ba0      	ldr	r3, [pc, #640]	; (8006050 <__kernel_rem_pio2+0x698>)
 8005dd0:	4620      	mov	r0, r4
 8005dd2:	4629      	mov	r1, r5
 8005dd4:	f7fa fc0c 	bl	80005f0 <__aeabi_dmul>
 8005dd8:	f7fa feba 	bl	8000b50 <__aeabi_d2iz>
 8005ddc:	4606      	mov	r6, r0
 8005dde:	f7fa fba1 	bl	8000524 <__aeabi_i2d>
 8005de2:	2200      	movs	r2, #0
 8005de4:	4b99      	ldr	r3, [pc, #612]	; (800604c <__kernel_rem_pio2+0x694>)
 8005de6:	f7fa fc03 	bl	80005f0 <__aeabi_dmul>
 8005dea:	460b      	mov	r3, r1
 8005dec:	4602      	mov	r2, r0
 8005dee:	4629      	mov	r1, r5
 8005df0:	4620      	mov	r0, r4
 8005df2:	f7fa fa49 	bl	8000288 <__aeabi_dsub>
 8005df6:	f7fa feab 	bl	8000b50 <__aeabi_d2iz>
 8005dfa:	1c7c      	adds	r4, r7, #1
 8005dfc:	ab0c      	add	r3, sp, #48	; 0x30
 8005dfe:	f10a 0a18 	add.w	sl, sl, #24
 8005e02:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 8005e06:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 8005e0a:	e7a9      	b.n	8005d60 <__kernel_rem_pio2+0x3a8>
 8005e0c:	4620      	mov	r0, r4
 8005e0e:	4629      	mov	r1, r5
 8005e10:	f7fa fe9e 	bl	8000b50 <__aeabi_d2iz>
 8005e14:	ab0c      	add	r3, sp, #48	; 0x30
 8005e16:	463c      	mov	r4, r7
 8005e18:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 8005e1c:	e7a0      	b.n	8005d60 <__kernel_rem_pio2+0x3a8>
 8005e1e:	ab0c      	add	r3, sp, #48	; 0x30
 8005e20:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8005e24:	f7fa fb7e 	bl	8000524 <__aeabi_i2d>
 8005e28:	4632      	mov	r2, r6
 8005e2a:	463b      	mov	r3, r7
 8005e2c:	f7fa fbe0 	bl	80005f0 <__aeabi_dmul>
 8005e30:	2200      	movs	r2, #0
 8005e32:	e969 0102 	strd	r0, r1, [r9, #-8]!
 8005e36:	4b86      	ldr	r3, [pc, #536]	; (8006050 <__kernel_rem_pio2+0x698>)
 8005e38:	4630      	mov	r0, r6
 8005e3a:	4639      	mov	r1, r7
 8005e3c:	f7fa fbd8 	bl	80005f0 <__aeabi_dmul>
 8005e40:	f108 38ff 	add.w	r8, r8, #4294967295
 8005e44:	4606      	mov	r6, r0
 8005e46:	460f      	mov	r7, r1
 8005e48:	e798      	b.n	8005d7c <__kernel_rem_pio2+0x3c4>
 8005e4a:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 8005e4e:	e8f6 0102 	ldrd	r0, r1, [r6], #8
 8005e52:	f7fa fbcd 	bl	80005f0 <__aeabi_dmul>
 8005e56:	4602      	mov	r2, r0
 8005e58:	460b      	mov	r3, r1
 8005e5a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8005e5e:	f7fa fa15 	bl	800028c <__adddf3>
 8005e62:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8005e66:	f108 0801 	add.w	r8, r8, #1
 8005e6a:	9b00      	ldr	r3, [sp, #0]
 8005e6c:	4598      	cmp	r8, r3
 8005e6e:	dc02      	bgt.n	8005e76 <__kernel_rem_pio2+0x4be>
 8005e70:	9b04      	ldr	r3, [sp, #16]
 8005e72:	4598      	cmp	r8, r3
 8005e74:	dde9      	ble.n	8005e4a <__kernel_rem_pio2+0x492>
 8005e76:	9b04      	ldr	r3, [sp, #16]
 8005e78:	ed9d 7b06 	vldr	d7, [sp, #24]
 8005e7c:	3301      	adds	r3, #1
 8005e7e:	ecaa 7b02 	vstmia	sl!, {d7}
 8005e82:	9304      	str	r3, [sp, #16]
 8005e84:	e784      	b.n	8005d90 <__kernel_rem_pio2+0x3d8>
 8005e86:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8005e88:	2b03      	cmp	r3, #3
 8005e8a:	d85d      	bhi.n	8005f48 <__kernel_rem_pio2+0x590>
 8005e8c:	e8df f003 	tbb	[pc, r3]
 8005e90:	0226264b 	.word	0x0226264b
 8005e94:	ab98      	add	r3, sp, #608	; 0x260
 8005e96:	441d      	add	r5, r3
 8005e98:	f5a5 759c 	sub.w	r5, r5, #312	; 0x138
 8005e9c:	462e      	mov	r6, r5
 8005e9e:	46a2      	mov	sl, r4
 8005ea0:	f1ba 0f00 	cmp.w	sl, #0
 8005ea4:	dc6e      	bgt.n	8005f84 <__kernel_rem_pio2+0x5cc>
 8005ea6:	462e      	mov	r6, r5
 8005ea8:	46a2      	mov	sl, r4
 8005eaa:	f1ba 0f01 	cmp.w	sl, #1
 8005eae:	f300 808a 	bgt.w	8005fc6 <__kernel_rem_pio2+0x60e>
 8005eb2:	2000      	movs	r0, #0
 8005eb4:	2100      	movs	r1, #0
 8005eb6:	2c01      	cmp	r4, #1
 8005eb8:	f300 80a6 	bgt.w	8006008 <__kernel_rem_pio2+0x650>
 8005ebc:	f1bb 0f00 	cmp.w	fp, #0
 8005ec0:	f040 80a8 	bne.w	8006014 <__kernel_rem_pio2+0x65c>
 8005ec4:	e9dd 2348 	ldrd	r2, r3, [sp, #288]	; 0x120
 8005ec8:	9c02      	ldr	r4, [sp, #8]
 8005eca:	e9c4 2300 	strd	r2, r3, [r4]
 8005ece:	e9dd 234a 	ldrd	r2, r3, [sp, #296]	; 0x128
 8005ed2:	e9c4 0104 	strd	r0, r1, [r4, #16]
 8005ed6:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8005eda:	e035      	b.n	8005f48 <__kernel_rem_pio2+0x590>
 8005edc:	3508      	adds	r5, #8
 8005ede:	ab48      	add	r3, sp, #288	; 0x120
 8005ee0:	441d      	add	r5, r3
 8005ee2:	4626      	mov	r6, r4
 8005ee4:	2000      	movs	r0, #0
 8005ee6:	2100      	movs	r1, #0
 8005ee8:	2e00      	cmp	r6, #0
 8005eea:	da3c      	bge.n	8005f66 <__kernel_rem_pio2+0x5ae>
 8005eec:	f1bb 0f00 	cmp.w	fp, #0
 8005ef0:	d03f      	beq.n	8005f72 <__kernel_rem_pio2+0x5ba>
 8005ef2:	4602      	mov	r2, r0
 8005ef4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005ef8:	9d02      	ldr	r5, [sp, #8]
 8005efa:	e9c5 2300 	strd	r2, r3, [r5]
 8005efe:	4602      	mov	r2, r0
 8005f00:	460b      	mov	r3, r1
 8005f02:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	; 0x120
 8005f06:	f7fa f9bf 	bl	8000288 <__aeabi_dsub>
 8005f0a:	ae4a      	add	r6, sp, #296	; 0x128
 8005f0c:	2501      	movs	r5, #1
 8005f0e:	42ac      	cmp	r4, r5
 8005f10:	da32      	bge.n	8005f78 <__kernel_rem_pio2+0x5c0>
 8005f12:	f1bb 0f00 	cmp.w	fp, #0
 8005f16:	d002      	beq.n	8005f1e <__kernel_rem_pio2+0x566>
 8005f18:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005f1c:	4619      	mov	r1, r3
 8005f1e:	9b02      	ldr	r3, [sp, #8]
 8005f20:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8005f24:	e010      	b.n	8005f48 <__kernel_rem_pio2+0x590>
 8005f26:	ab98      	add	r3, sp, #608	; 0x260
 8005f28:	441d      	add	r5, r3
 8005f2a:	f5a5 759c 	sub.w	r5, r5, #312	; 0x138
 8005f2e:	2000      	movs	r0, #0
 8005f30:	2100      	movs	r1, #0
 8005f32:	2c00      	cmp	r4, #0
 8005f34:	da11      	bge.n	8005f5a <__kernel_rem_pio2+0x5a2>
 8005f36:	f1bb 0f00 	cmp.w	fp, #0
 8005f3a:	d002      	beq.n	8005f42 <__kernel_rem_pio2+0x58a>
 8005f3c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005f40:	4619      	mov	r1, r3
 8005f42:	9b02      	ldr	r3, [sp, #8]
 8005f44:	e9c3 0100 	strd	r0, r1, [r3]
 8005f48:	9b03      	ldr	r3, [sp, #12]
 8005f4a:	f003 0007 	and.w	r0, r3, #7
 8005f4e:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 8005f52:	ecbd 8b02 	vpop	{d8}
 8005f56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f5a:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8005f5e:	f7fa f995 	bl	800028c <__adddf3>
 8005f62:	3c01      	subs	r4, #1
 8005f64:	e7e5      	b.n	8005f32 <__kernel_rem_pio2+0x57a>
 8005f66:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8005f6a:	f7fa f98f 	bl	800028c <__adddf3>
 8005f6e:	3e01      	subs	r6, #1
 8005f70:	e7ba      	b.n	8005ee8 <__kernel_rem_pio2+0x530>
 8005f72:	4602      	mov	r2, r0
 8005f74:	460b      	mov	r3, r1
 8005f76:	e7bf      	b.n	8005ef8 <__kernel_rem_pio2+0x540>
 8005f78:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 8005f7c:	f7fa f986 	bl	800028c <__adddf3>
 8005f80:	3501      	adds	r5, #1
 8005f82:	e7c4      	b.n	8005f0e <__kernel_rem_pio2+0x556>
 8005f84:	ed16 7b02 	vldr	d7, [r6, #-8]
 8005f88:	e956 8904 	ldrd	r8, r9, [r6, #-16]
 8005f8c:	ec53 2b17 	vmov	r2, r3, d7
 8005f90:	4640      	mov	r0, r8
 8005f92:	4649      	mov	r1, r9
 8005f94:	ed8d 7b00 	vstr	d7, [sp]
 8005f98:	f7fa f978 	bl	800028c <__adddf3>
 8005f9c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005fa0:	4602      	mov	r2, r0
 8005fa2:	460b      	mov	r3, r1
 8005fa4:	4640      	mov	r0, r8
 8005fa6:	4649      	mov	r1, r9
 8005fa8:	f7fa f96e 	bl	8000288 <__aeabi_dsub>
 8005fac:	e9dd 2300 	ldrd	r2, r3, [sp]
 8005fb0:	f7fa f96c 	bl	800028c <__adddf3>
 8005fb4:	ed9d 7b04 	vldr	d7, [sp, #16]
 8005fb8:	e966 0102 	strd	r0, r1, [r6, #-8]!
 8005fbc:	f10a 3aff 	add.w	sl, sl, #4294967295
 8005fc0:	ed06 7b02 	vstr	d7, [r6, #-8]
 8005fc4:	e76c      	b.n	8005ea0 <__kernel_rem_pio2+0x4e8>
 8005fc6:	ed16 7b02 	vldr	d7, [r6, #-8]
 8005fca:	e956 8904 	ldrd	r8, r9, [r6, #-16]
 8005fce:	ec53 2b17 	vmov	r2, r3, d7
 8005fd2:	4640      	mov	r0, r8
 8005fd4:	4649      	mov	r1, r9
 8005fd6:	ed8d 7b00 	vstr	d7, [sp]
 8005fda:	f7fa f957 	bl	800028c <__adddf3>
 8005fde:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005fe2:	4602      	mov	r2, r0
 8005fe4:	460b      	mov	r3, r1
 8005fe6:	4640      	mov	r0, r8
 8005fe8:	4649      	mov	r1, r9
 8005fea:	f7fa f94d 	bl	8000288 <__aeabi_dsub>
 8005fee:	e9dd 2300 	ldrd	r2, r3, [sp]
 8005ff2:	f7fa f94b 	bl	800028c <__adddf3>
 8005ff6:	ed9d 7b04 	vldr	d7, [sp, #16]
 8005ffa:	e966 0102 	strd	r0, r1, [r6, #-8]!
 8005ffe:	f10a 3aff 	add.w	sl, sl, #4294967295
 8006002:	ed06 7b02 	vstr	d7, [r6, #-8]
 8006006:	e750      	b.n	8005eaa <__kernel_rem_pio2+0x4f2>
 8006008:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 800600c:	f7fa f93e 	bl	800028c <__adddf3>
 8006010:	3c01      	subs	r4, #1
 8006012:	e750      	b.n	8005eb6 <__kernel_rem_pio2+0x4fe>
 8006014:	9a02      	ldr	r2, [sp, #8]
 8006016:	683b      	ldr	r3, [r7, #0]
 8006018:	6013      	str	r3, [r2, #0]
 800601a:	687b      	ldr	r3, [r7, #4]
 800601c:	6110      	str	r0, [r2, #16]
 800601e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8006022:	6053      	str	r3, [r2, #4]
 8006024:	68bb      	ldr	r3, [r7, #8]
 8006026:	6093      	str	r3, [r2, #8]
 8006028:	68fb      	ldr	r3, [r7, #12]
 800602a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 800602e:	60d3      	str	r3, [r2, #12]
 8006030:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8006034:	6153      	str	r3, [r2, #20]
 8006036:	e787      	b.n	8005f48 <__kernel_rem_pio2+0x590>
 8006038:	00000000 	.word	0x00000000
 800603c:	3ff00000 	.word	0x3ff00000
	...
 8006048:	08006890 	.word	0x08006890
 800604c:	41700000 	.word	0x41700000
 8006050:	3e700000 	.word	0x3e700000
 8006054:	00000000 	.word	0x00000000

08006058 <__kernel_sin>:
 8006058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800605c:	ec55 4b10 	vmov	r4, r5, d0
 8006060:	b085      	sub	sp, #20
 8006062:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8006066:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 800606a:	ed8d 1b00 	vstr	d1, [sp]
 800606e:	9002      	str	r0, [sp, #8]
 8006070:	da06      	bge.n	8006080 <__kernel_sin+0x28>
 8006072:	ee10 0a10 	vmov	r0, s0
 8006076:	4629      	mov	r1, r5
 8006078:	f7fa fd6a 	bl	8000b50 <__aeabi_d2iz>
 800607c:	2800      	cmp	r0, #0
 800607e:	d051      	beq.n	8006124 <__kernel_sin+0xcc>
 8006080:	4622      	mov	r2, r4
 8006082:	462b      	mov	r3, r5
 8006084:	4620      	mov	r0, r4
 8006086:	4629      	mov	r1, r5
 8006088:	f7fa fab2 	bl	80005f0 <__aeabi_dmul>
 800608c:	4682      	mov	sl, r0
 800608e:	468b      	mov	fp, r1
 8006090:	4602      	mov	r2, r0
 8006092:	460b      	mov	r3, r1
 8006094:	4620      	mov	r0, r4
 8006096:	4629      	mov	r1, r5
 8006098:	f7fa faaa 	bl	80005f0 <__aeabi_dmul>
 800609c:	a341      	add	r3, pc, #260	; (adr r3, 80061a4 <__kernel_sin+0x14c>)
 800609e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060a2:	4680      	mov	r8, r0
 80060a4:	4689      	mov	r9, r1
 80060a6:	4650      	mov	r0, sl
 80060a8:	4659      	mov	r1, fp
 80060aa:	f7fa faa1 	bl	80005f0 <__aeabi_dmul>
 80060ae:	a33f      	add	r3, pc, #252	; (adr r3, 80061ac <__kernel_sin+0x154>)
 80060b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060b4:	f7fa f8e8 	bl	8000288 <__aeabi_dsub>
 80060b8:	4652      	mov	r2, sl
 80060ba:	465b      	mov	r3, fp
 80060bc:	f7fa fa98 	bl	80005f0 <__aeabi_dmul>
 80060c0:	a33c      	add	r3, pc, #240	; (adr r3, 80061b4 <__kernel_sin+0x15c>)
 80060c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060c6:	f7fa f8e1 	bl	800028c <__adddf3>
 80060ca:	4652      	mov	r2, sl
 80060cc:	465b      	mov	r3, fp
 80060ce:	f7fa fa8f 	bl	80005f0 <__aeabi_dmul>
 80060d2:	a33a      	add	r3, pc, #232	; (adr r3, 80061bc <__kernel_sin+0x164>)
 80060d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060d8:	f7fa f8d6 	bl	8000288 <__aeabi_dsub>
 80060dc:	4652      	mov	r2, sl
 80060de:	465b      	mov	r3, fp
 80060e0:	f7fa fa86 	bl	80005f0 <__aeabi_dmul>
 80060e4:	a337      	add	r3, pc, #220	; (adr r3, 80061c4 <__kernel_sin+0x16c>)
 80060e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060ea:	f7fa f8cf 	bl	800028c <__adddf3>
 80060ee:	9b02      	ldr	r3, [sp, #8]
 80060f0:	4606      	mov	r6, r0
 80060f2:	460f      	mov	r7, r1
 80060f4:	b9db      	cbnz	r3, 800612e <__kernel_sin+0xd6>
 80060f6:	4602      	mov	r2, r0
 80060f8:	460b      	mov	r3, r1
 80060fa:	4650      	mov	r0, sl
 80060fc:	4659      	mov	r1, fp
 80060fe:	f7fa fa77 	bl	80005f0 <__aeabi_dmul>
 8006102:	a325      	add	r3, pc, #148	; (adr r3, 8006198 <__kernel_sin+0x140>)
 8006104:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006108:	f7fa f8be 	bl	8000288 <__aeabi_dsub>
 800610c:	4642      	mov	r2, r8
 800610e:	464b      	mov	r3, r9
 8006110:	f7fa fa6e 	bl	80005f0 <__aeabi_dmul>
 8006114:	4602      	mov	r2, r0
 8006116:	460b      	mov	r3, r1
 8006118:	4620      	mov	r0, r4
 800611a:	4629      	mov	r1, r5
 800611c:	f7fa f8b6 	bl	800028c <__adddf3>
 8006120:	4604      	mov	r4, r0
 8006122:	460d      	mov	r5, r1
 8006124:	ec45 4b10 	vmov	d0, r4, r5
 8006128:	b005      	add	sp, #20
 800612a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800612e:	2200      	movs	r2, #0
 8006130:	4b1b      	ldr	r3, [pc, #108]	; (80061a0 <__kernel_sin+0x148>)
 8006132:	e9dd 0100 	ldrd	r0, r1, [sp]
 8006136:	f7fa fa5b 	bl	80005f0 <__aeabi_dmul>
 800613a:	4632      	mov	r2, r6
 800613c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006140:	463b      	mov	r3, r7
 8006142:	4640      	mov	r0, r8
 8006144:	4649      	mov	r1, r9
 8006146:	f7fa fa53 	bl	80005f0 <__aeabi_dmul>
 800614a:	4602      	mov	r2, r0
 800614c:	460b      	mov	r3, r1
 800614e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006152:	f7fa f899 	bl	8000288 <__aeabi_dsub>
 8006156:	4652      	mov	r2, sl
 8006158:	465b      	mov	r3, fp
 800615a:	f7fa fa49 	bl	80005f0 <__aeabi_dmul>
 800615e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006162:	f7fa f891 	bl	8000288 <__aeabi_dsub>
 8006166:	a30c      	add	r3, pc, #48	; (adr r3, 8006198 <__kernel_sin+0x140>)
 8006168:	e9d3 2300 	ldrd	r2, r3, [r3]
 800616c:	4606      	mov	r6, r0
 800616e:	460f      	mov	r7, r1
 8006170:	4640      	mov	r0, r8
 8006172:	4649      	mov	r1, r9
 8006174:	f7fa fa3c 	bl	80005f0 <__aeabi_dmul>
 8006178:	4602      	mov	r2, r0
 800617a:	460b      	mov	r3, r1
 800617c:	4630      	mov	r0, r6
 800617e:	4639      	mov	r1, r7
 8006180:	f7fa f884 	bl	800028c <__adddf3>
 8006184:	4602      	mov	r2, r0
 8006186:	460b      	mov	r3, r1
 8006188:	4620      	mov	r0, r4
 800618a:	4629      	mov	r1, r5
 800618c:	f7fa f87c 	bl	8000288 <__aeabi_dsub>
 8006190:	e7c6      	b.n	8006120 <__kernel_sin+0xc8>
 8006192:	bf00      	nop
 8006194:	f3af 8000 	nop.w
 8006198:	55555549 	.word	0x55555549
 800619c:	3fc55555 	.word	0x3fc55555
 80061a0:	3fe00000 	.word	0x3fe00000
 80061a4:	5acfd57c 	.word	0x5acfd57c
 80061a8:	3de5d93a 	.word	0x3de5d93a
 80061ac:	8a2b9ceb 	.word	0x8a2b9ceb
 80061b0:	3e5ae5e6 	.word	0x3e5ae5e6
 80061b4:	57b1fe7d 	.word	0x57b1fe7d
 80061b8:	3ec71de3 	.word	0x3ec71de3
 80061bc:	19c161d5 	.word	0x19c161d5
 80061c0:	3f2a01a0 	.word	0x3f2a01a0
 80061c4:	1110f8a6 	.word	0x1110f8a6
 80061c8:	3f811111 	.word	0x3f811111

080061cc <fabs>:
 80061cc:	ec53 2b10 	vmov	r2, r3, d0
 80061d0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80061d4:	ec43 2b10 	vmov	d0, r2, r3
 80061d8:	4770      	bx	lr
 80061da:	0000      	movs	r0, r0
 80061dc:	0000      	movs	r0, r0
	...

080061e0 <floor>:
 80061e0:	ec51 0b10 	vmov	r0, r1, d0
 80061e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80061e8:	f3c1 570a 	ubfx	r7, r1, #20, #11
 80061ec:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 80061f0:	2e13      	cmp	r6, #19
 80061f2:	ee10 8a10 	vmov	r8, s0
 80061f6:	460c      	mov	r4, r1
 80061f8:	ee10 5a10 	vmov	r5, s0
 80061fc:	dc35      	bgt.n	800626a <floor+0x8a>
 80061fe:	2e00      	cmp	r6, #0
 8006200:	da17      	bge.n	8006232 <floor+0x52>
 8006202:	a335      	add	r3, pc, #212	; (adr r3, 80062d8 <floor+0xf8>)
 8006204:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006208:	f7fa f840 	bl	800028c <__adddf3>
 800620c:	2200      	movs	r2, #0
 800620e:	2300      	movs	r3, #0
 8006210:	f7fa fc7e 	bl	8000b10 <__aeabi_dcmpgt>
 8006214:	b150      	cbz	r0, 800622c <floor+0x4c>
 8006216:	2c00      	cmp	r4, #0
 8006218:	da5a      	bge.n	80062d0 <floor+0xf0>
 800621a:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800621e:	ea53 0308 	orrs.w	r3, r3, r8
 8006222:	4b2f      	ldr	r3, [pc, #188]	; (80062e0 <floor+0x100>)
 8006224:	f04f 0500 	mov.w	r5, #0
 8006228:	bf18      	it	ne
 800622a:	461c      	movne	r4, r3
 800622c:	4621      	mov	r1, r4
 800622e:	4628      	mov	r0, r5
 8006230:	e025      	b.n	800627e <floor+0x9e>
 8006232:	4f2c      	ldr	r7, [pc, #176]	; (80062e4 <floor+0x104>)
 8006234:	4137      	asrs	r7, r6
 8006236:	ea01 0307 	and.w	r3, r1, r7
 800623a:	4303      	orrs	r3, r0
 800623c:	d01f      	beq.n	800627e <floor+0x9e>
 800623e:	a326      	add	r3, pc, #152	; (adr r3, 80062d8 <floor+0xf8>)
 8006240:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006244:	f7fa f822 	bl	800028c <__adddf3>
 8006248:	2200      	movs	r2, #0
 800624a:	2300      	movs	r3, #0
 800624c:	f7fa fc60 	bl	8000b10 <__aeabi_dcmpgt>
 8006250:	2800      	cmp	r0, #0
 8006252:	d0eb      	beq.n	800622c <floor+0x4c>
 8006254:	2c00      	cmp	r4, #0
 8006256:	bfbe      	ittt	lt
 8006258:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 800625c:	fa43 f606 	asrlt.w	r6, r3, r6
 8006260:	19a4      	addlt	r4, r4, r6
 8006262:	ea24 0407 	bic.w	r4, r4, r7
 8006266:	2500      	movs	r5, #0
 8006268:	e7e0      	b.n	800622c <floor+0x4c>
 800626a:	2e33      	cmp	r6, #51	; 0x33
 800626c:	dd0b      	ble.n	8006286 <floor+0xa6>
 800626e:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8006272:	d104      	bne.n	800627e <floor+0x9e>
 8006274:	ee10 2a10 	vmov	r2, s0
 8006278:	460b      	mov	r3, r1
 800627a:	f7fa f807 	bl	800028c <__adddf3>
 800627e:	ec41 0b10 	vmov	d0, r0, r1
 8006282:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006286:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 800628a:	f04f 33ff 	mov.w	r3, #4294967295
 800628e:	fa23 f707 	lsr.w	r7, r3, r7
 8006292:	4238      	tst	r0, r7
 8006294:	d0f3      	beq.n	800627e <floor+0x9e>
 8006296:	a310      	add	r3, pc, #64	; (adr r3, 80062d8 <floor+0xf8>)
 8006298:	e9d3 2300 	ldrd	r2, r3, [r3]
 800629c:	f7f9 fff6 	bl	800028c <__adddf3>
 80062a0:	2200      	movs	r2, #0
 80062a2:	2300      	movs	r3, #0
 80062a4:	f7fa fc34 	bl	8000b10 <__aeabi_dcmpgt>
 80062a8:	2800      	cmp	r0, #0
 80062aa:	d0bf      	beq.n	800622c <floor+0x4c>
 80062ac:	2c00      	cmp	r4, #0
 80062ae:	da02      	bge.n	80062b6 <floor+0xd6>
 80062b0:	2e14      	cmp	r6, #20
 80062b2:	d103      	bne.n	80062bc <floor+0xdc>
 80062b4:	3401      	adds	r4, #1
 80062b6:	ea25 0507 	bic.w	r5, r5, r7
 80062ba:	e7b7      	b.n	800622c <floor+0x4c>
 80062bc:	2301      	movs	r3, #1
 80062be:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 80062c2:	fa03 f606 	lsl.w	r6, r3, r6
 80062c6:	4435      	add	r5, r6
 80062c8:	45a8      	cmp	r8, r5
 80062ca:	bf88      	it	hi
 80062cc:	18e4      	addhi	r4, r4, r3
 80062ce:	e7f2      	b.n	80062b6 <floor+0xd6>
 80062d0:	2500      	movs	r5, #0
 80062d2:	462c      	mov	r4, r5
 80062d4:	e7aa      	b.n	800622c <floor+0x4c>
 80062d6:	bf00      	nop
 80062d8:	8800759c 	.word	0x8800759c
 80062dc:	7e37e43c 	.word	0x7e37e43c
 80062e0:	bff00000 	.word	0xbff00000
 80062e4:	000fffff 	.word	0x000fffff

080062e8 <scalbn>:
 80062e8:	b570      	push	{r4, r5, r6, lr}
 80062ea:	ec55 4b10 	vmov	r4, r5, d0
 80062ee:	f3c5 520a 	ubfx	r2, r5, #20, #11
 80062f2:	4606      	mov	r6, r0
 80062f4:	462b      	mov	r3, r5
 80062f6:	b9b2      	cbnz	r2, 8006326 <scalbn+0x3e>
 80062f8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80062fc:	4323      	orrs	r3, r4
 80062fe:	d03c      	beq.n	800637a <scalbn+0x92>
 8006300:	2200      	movs	r2, #0
 8006302:	4b33      	ldr	r3, [pc, #204]	; (80063d0 <scalbn+0xe8>)
 8006304:	4629      	mov	r1, r5
 8006306:	ee10 0a10 	vmov	r0, s0
 800630a:	f7fa f971 	bl	80005f0 <__aeabi_dmul>
 800630e:	4a31      	ldr	r2, [pc, #196]	; (80063d4 <scalbn+0xec>)
 8006310:	4296      	cmp	r6, r2
 8006312:	4604      	mov	r4, r0
 8006314:	460d      	mov	r5, r1
 8006316:	460b      	mov	r3, r1
 8006318:	da13      	bge.n	8006342 <scalbn+0x5a>
 800631a:	a329      	add	r3, pc, #164	; (adr r3, 80063c0 <scalbn+0xd8>)
 800631c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006320:	f7fa f966 	bl	80005f0 <__aeabi_dmul>
 8006324:	e00a      	b.n	800633c <scalbn+0x54>
 8006326:	f240 71ff 	movw	r1, #2047	; 0x7ff
 800632a:	428a      	cmp	r2, r1
 800632c:	d10c      	bne.n	8006348 <scalbn+0x60>
 800632e:	ee10 2a10 	vmov	r2, s0
 8006332:	462b      	mov	r3, r5
 8006334:	4620      	mov	r0, r4
 8006336:	4629      	mov	r1, r5
 8006338:	f7f9 ffa8 	bl	800028c <__adddf3>
 800633c:	4604      	mov	r4, r0
 800633e:	460d      	mov	r5, r1
 8006340:	e01b      	b.n	800637a <scalbn+0x92>
 8006342:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8006346:	3a36      	subs	r2, #54	; 0x36
 8006348:	4432      	add	r2, r6
 800634a:	f240 71fe 	movw	r1, #2046	; 0x7fe
 800634e:	428a      	cmp	r2, r1
 8006350:	dd0b      	ble.n	800636a <scalbn+0x82>
 8006352:	ec45 4b11 	vmov	d1, r4, r5
 8006356:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 80063c8 <scalbn+0xe0>
 800635a:	f000 f83f 	bl	80063dc <copysign>
 800635e:	a31a      	add	r3, pc, #104	; (adr r3, 80063c8 <scalbn+0xe0>)
 8006360:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006364:	ec51 0b10 	vmov	r0, r1, d0
 8006368:	e7da      	b.n	8006320 <scalbn+0x38>
 800636a:	2a00      	cmp	r2, #0
 800636c:	dd08      	ble.n	8006380 <scalbn+0x98>
 800636e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8006372:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8006376:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 800637a:	ec45 4b10 	vmov	d0, r4, r5
 800637e:	bd70      	pop	{r4, r5, r6, pc}
 8006380:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8006384:	da0d      	bge.n	80063a2 <scalbn+0xba>
 8006386:	f24c 3350 	movw	r3, #50000	; 0xc350
 800638a:	429e      	cmp	r6, r3
 800638c:	ec45 4b11 	vmov	d1, r4, r5
 8006390:	dce1      	bgt.n	8006356 <scalbn+0x6e>
 8006392:	ed9f 0b0b 	vldr	d0, [pc, #44]	; 80063c0 <scalbn+0xd8>
 8006396:	f000 f821 	bl	80063dc <copysign>
 800639a:	a309      	add	r3, pc, #36	; (adr r3, 80063c0 <scalbn+0xd8>)
 800639c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063a0:	e7e0      	b.n	8006364 <scalbn+0x7c>
 80063a2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80063a6:	3236      	adds	r2, #54	; 0x36
 80063a8:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80063ac:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80063b0:	4620      	mov	r0, r4
 80063b2:	4629      	mov	r1, r5
 80063b4:	2200      	movs	r2, #0
 80063b6:	4b08      	ldr	r3, [pc, #32]	; (80063d8 <scalbn+0xf0>)
 80063b8:	e7b2      	b.n	8006320 <scalbn+0x38>
 80063ba:	bf00      	nop
 80063bc:	f3af 8000 	nop.w
 80063c0:	c2f8f359 	.word	0xc2f8f359
 80063c4:	01a56e1f 	.word	0x01a56e1f
 80063c8:	8800759c 	.word	0x8800759c
 80063cc:	7e37e43c 	.word	0x7e37e43c
 80063d0:	43500000 	.word	0x43500000
 80063d4:	ffff3cb0 	.word	0xffff3cb0
 80063d8:	3c900000 	.word	0x3c900000

080063dc <copysign>:
 80063dc:	ec53 2b10 	vmov	r2, r3, d0
 80063e0:	ee11 0a90 	vmov	r0, s3
 80063e4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80063e8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80063ec:	ea41 0300 	orr.w	r3, r1, r0
 80063f0:	ec43 2b10 	vmov	d0, r2, r3
 80063f4:	4770      	bx	lr
	...

080063f8 <_sbrk>:
 80063f8:	4b04      	ldr	r3, [pc, #16]	; (800640c <_sbrk+0x14>)
 80063fa:	6819      	ldr	r1, [r3, #0]
 80063fc:	4602      	mov	r2, r0
 80063fe:	b909      	cbnz	r1, 8006404 <_sbrk+0xc>
 8006400:	4903      	ldr	r1, [pc, #12]	; (8006410 <_sbrk+0x18>)
 8006402:	6019      	str	r1, [r3, #0]
 8006404:	6818      	ldr	r0, [r3, #0]
 8006406:	4402      	add	r2, r0
 8006408:	601a      	str	r2, [r3, #0]
 800640a:	4770      	bx	lr
 800640c:	200006c4 	.word	0x200006c4
 8006410:	20000754 	.word	0x20000754

08006414 <_init>:
 8006414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006416:	bf00      	nop
 8006418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800641a:	bc08      	pop	{r3}
 800641c:	469e      	mov	lr, r3
 800641e:	4770      	bx	lr

08006420 <_fini>:
 8006420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006422:	bf00      	nop
 8006424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006426:	bc08      	pop	{r3}
 8006428:	469e      	mov	lr, r3
 800642a:	4770      	bx	lr
